#include "i18n.h"
#include <apps/global_preferences.h>
#include <assert.h>

namespace I18n {

constexpr static char universalDefault[] = {0};
constexpr static char universalA[] = "a";
constexpr static char universalAbsCommandWithArg[] = "abs(x)";
constexpr static char universalAcoshCommandWithArg[] = "acosh(x)";
constexpr static char universalAlmostEqual[] = "≈";
constexpr static char universalAlpha[] = "alpha";
constexpr static char universalAndreiTetrel[] = "Andrei";
constexpr static char universalAntoninLoubiere[] = "Antonin L.";
constexpr static char universalArgCommandWithArg[] = "arg(z)";
constexpr static char universalAsinhCommandWithArg[] = "asinh(x)";
constexpr static char universalAtanhCommandWithArg[] = "atanh(x)";
constexpr static char universalAtmosphericPressure[] = "101325_Pa";
constexpr static char universalAtomName_Bohrium[] = "Bohrium";
constexpr static char universalAtomName_Hassium[] = "Hassium";
constexpr static char universalAtomName_Livermorium[] = "Livermorium";
constexpr static char universalAtomName_Moscovium[] = "Moscovium";
constexpr static char universalAtomName_Nihonium[] = "Nihonium";
constexpr static char universalAtomName_Oganesson[] = "Oganesson";
constexpr static char universalAtomName_Tennessine[] = "Tennessine";
constexpr static char universalAtomicApp[] = "Atomic";
constexpr static char universalAtomicAppCapital[] = "ATOMIC";
constexpr static char universalAtomicMassUnit[] = "1.66053906660·10^-27_kg";
constexpr static char universalAvogadro[] = "6.02214076·10^23_mol^-1";
constexpr static char universalAxelMontlahuc[] = "Axel Montlahuc";
constexpr static char universalB[] = "b";
constexpr static char universalBinomialCDFCommandWithArg[] = "binomcdf(m,n,p)";
constexpr static char universalBinomialCommandWithArg[] = "binomial(n,k)";
constexpr static char universalBinomialPDFCommandWithArg[] = "binompdf(m,n,p)";
constexpr static char universalBlankMessage[] = " ";
constexpr static char universalBohrMagneton[] = "9.2740100783·10^-24_A_m^2";
constexpr static char universalBohrRadius[] = "5.29177210903·10^-11_m";
constexpr static char universalBoltzmann[] = "1.380649·10^-23_J_K^-1";
constexpr static char universalC[] = "c";
constexpr static char universalCapitalAlpha[] = "ALPHA";
constexpr static char universalCeilCommandWithArg[] = "ceil(x)";
constexpr static char universalCharlotteThomas[] = "Charlotte Thomas";
constexpr static char universalCirculationQuantum[] = "3.6369475516·10^-4_m^2_s^-1";
constexpr static char universalCmathModule[] = "cmath";
constexpr static char universalCndcvt_Air[] = "1.00·10^-13_S_m^-1";
constexpr static char universalCndcvt_Aluminium[] = "3.77·10^7_S_m^-1";
constexpr static char universalCndcvt_Calcium[] = "2.98·10^7_S_m^-1";
constexpr static char universalCndcvt_Cobalt[] = "1.60·10^7_S_m^-1";
constexpr static char universalCndcvt_Copper[] = "5.96·10^7_S_m^-1";
constexpr static char universalCndcvt_Glass[] = "1.00·10^-13_S_m^-1";
constexpr static char universalCndcvt_Gold[] = "4.11·10^7_S_m^-1";
constexpr static char universalCndcvt_Iron[] = "1.00·10^7_S_m^-1";
constexpr static char universalCndcvt_Lithium[] = "1.08·10^7_S_m^-1";
constexpr static char universalCndcvt_Nickel[] = "1.43·10^7_S_m^-1";
constexpr static char universalCndcvt_Platinum[] = "9.43·10^6_S_m^-1";
constexpr static char universalCndcvt_Sea_water[] = "4.80_S_m^-1";
constexpr static char universalCndcvt_Silver[] = "6.30·10^7_S_m^-1";
constexpr static char universalCndcvt_Tin[] = "9.17·10^6_S_m^-1";
constexpr static char universalCndcvt_Tungsten[] = "1.79·10^7_S_m^-1";
constexpr static char universalCndcvt_Water[] = "5.00·10^-3_S_m^-1";
constexpr static char universalCndcvt_Wood[] = "1.00·10^-3_S_m^-1";
constexpr static char universalCndcvt_Zinc[] = "1.69·10^7_S_m^-1";
constexpr static char universalCodeApp[] = "Python";
constexpr static char universalCodeAppCapital[] = "PYTHON";
constexpr static char universalConditionAnd[] = "and ";
constexpr static char universalConditionNot[] = "not ";
constexpr static char universalConditionOr[] = "or ";
constexpr static char universalConditionsMenu[] = "Conditions";
constexpr static char universalConductanceQuantum[] = "7.748091729·10^-5_S";
constexpr static char universalConfidenceCommandWithArg[] = "confidence(f,n)";
constexpr static char universalConjCommandWithArg[] = "conj(z)";
constexpr static char universalConsolePrompt[] = ">>> ";
constexpr static char universalCoshCommandWithArg[] = "cosh(x)";
constexpr static char universalCoulomb[] = "8.9875517923·10^9_N_m^2_C^-2";
constexpr static char universalCrossCommandWithArg[] = "cross(u,v)";
constexpr static char universalCubicRegressionFormula[] = " y=a·x^3+b·x^2+c·x+d ";
constexpr static char universalCyprienMejat[] = "Cyprien Méjat";
constexpr static char universalD[] = "d";
constexpr static char universalD1[] = "d1";
constexpr static char universalD2[] = "d2";
constexpr static char universalDamienNicolet[] = "Damien Nicolet";
constexpr static char universalDash[] = "-";
constexpr static char universalDavid[] = "David";
constexpr static char universalDavidLuca[] = "David Luca";
constexpr static char universalDefaultSetting[] = "Auto";
constexpr static char universalDeltaSystem[] = "R";
constexpr static char universalDeterminantCommandWithArg[] = "det(M)";
constexpr static char universalDiffCommand[] = "diff(\x11,x,\x11)";
constexpr static char universalDiffCommandWithArg[] = "diff(f(x),x,a)";
constexpr static char universalDimensionCommandWithArg[] = "dim(M)";
constexpr static char universalDiscreteLegend[] = "P(X=";
constexpr static char universalDotCommandWithArg[] = "dot(u,v)";
constexpr static char universalE[] = "e";
constexpr static char universalEarthMass[] = "5.972·10^24_kg";
constexpr static char universalEarthMoonDistance[] = "384400000_m";
constexpr static char universalEarthRadius[] = "6378140_m";
constexpr static char universalEarthSunDistance[] = "149597870000_m";
constexpr static char universalElectronMass[] = "9.1093837015·10^-31_kg";
constexpr static char universalElementAcMass[] = "227";
constexpr static char universalElementAgMass[] = "107.8682";
constexpr static char universalElementAlMass[] = "26.9815386";
constexpr static char universalElementAmMass[] = "241.06";
constexpr static char universalElementArMass[] = "39.948";
constexpr static char universalElementAsMass[] = "74.921595";
constexpr static char universalElementAtMass[] = "210";
constexpr static char universalElementAuMass[] = "196.966569";
constexpr static char universalElementBMass[] = "10.81";
constexpr static char universalElementBaMass[] = "137.327";
constexpr static char universalElementBeMass[] = "9.0121831";
constexpr static char universalElementBhMass[] = "270";
constexpr static char universalElementBiMass[] = "208.98040";
constexpr static char universalElementBkMass[] = "247";
constexpr static char universalElementBrMass[] = "79.904";
constexpr static char universalElementCMass[] = "12.01074";
constexpr static char universalElementCaMass[] = "40.078";
constexpr static char universalElementCdMass[] = "112.414";
constexpr static char universalElementCeMass[] = "140.116";
constexpr static char universalElementCfMass[] = "251";
constexpr static char universalElementClMass[] = "35.453";
constexpr static char universalElementCmMass[] = "247";
constexpr static char universalElementCnMass[] = "285";
constexpr static char universalElementCoMass[] = "58.933194";
constexpr static char universalElementCrMass[] = "51.9961";
constexpr static char universalElementCsMass[] = "132.90545196";
constexpr static char universalElementCuMass[] = "63.546";
constexpr static char universalElementDbMass[] = "268";
constexpr static char universalElementDsMass[] = "281";
constexpr static char universalElementDyMass[] = "162.500";
constexpr static char universalElementErMass[] = "167.259";
constexpr static char universalElementEsMass[] = "252";
constexpr static char universalElementEuMass[] = "151.964";
constexpr static char universalElementFMass[] = "18.998403163";
constexpr static char universalElementFeMass[] = "55.845";
constexpr static char universalElementFlMass[] = "289";
constexpr static char universalElementFmMass[] = "257";
constexpr static char universalElementFrMass[] = "223";
constexpr static char universalElementGaMass[] = "69.723";
constexpr static char universalElementGdMass[] = "157.25";
constexpr static char universalElementGeMass[] = "72.64";
constexpr static char universalElementHMass[] = "1.00794";
constexpr static char universalElementHeMass[] = "4.002602";
constexpr static char universalElementHfMass[] = "178.49";
constexpr static char universalElementHgMass[] = "200.59";
constexpr static char universalElementHoMass[] = "164.93033";
constexpr static char universalElementHsMass[] = "277";
constexpr static char universalElementIMass[] = "126.90447";
constexpr static char universalElementInMass[] = "114.818";
constexpr static char universalElementIrMass[] = "192.217";
constexpr static char universalElementKMass[] = "39.0983";
constexpr static char universalElementKrMass[] = "83.798";
constexpr static char universalElementLaMass[] = "138.90547";
constexpr static char universalElementLiMass[] = "6.941";
constexpr static char universalElementLrMass[] = "266";
constexpr static char universalElementLuMass[] = "174.9668";
constexpr static char universalElementLvMass[] = "293";
constexpr static char universalElementMcMass[] = "289";
constexpr static char universalElementMdMass[] = "258";
constexpr static char universalElementMgMass[] = "24.3050";
constexpr static char universalElementMnMass[] = "54.938044";
constexpr static char universalElementMoMass[] = "95.95";
constexpr static char universalElementMtMass[] = "278";
constexpr static char universalElementNMass[] = "14.0067";
constexpr static char universalElementNaMass[] = "22.98976928";
constexpr static char universalElementNbMass[] = "92.90637";
constexpr static char universalElementNdMass[] = "144.242";
constexpr static char universalElementNeMass[] = "20.1797";
constexpr static char universalElementNhMass[] = "286";
constexpr static char universalElementNiMass[] = "58.6934";
constexpr static char universalElementNoMass[] = "259";
constexpr static char universalElementNpMass[] = "237";
constexpr static char universalElementOMass[] = "15.9994";
constexpr static char universalElementOgMass[] = "294";
constexpr static char universalElementOsMass[] = "190.23";
constexpr static char universalElementPMass[] = "30.973761998";
constexpr static char universalElementPaMass[] = "231.03588";
constexpr static char universalElementPbMass[] = "207.2";
constexpr static char universalElementPdMass[] = "106.42";
constexpr static char universalElementPmMass[] = "145";
constexpr static char universalElementPoMass[] = "209";
constexpr static char universalElementPrMass[] = "140.90766";
constexpr static char universalElementPtMass[] = "195.084";
constexpr static char universalElementPuMass[] = "244.06";
constexpr static char universalElementRaMass[] = "226.0254";
constexpr static char universalElementRbMass[] = "85.4678";
constexpr static char universalElementReMass[] = "186.207";
constexpr static char universalElementRfMass[] = "267";
constexpr static char universalElementRgMass[] = "282";
constexpr static char universalElementRhMass[] = "102.90550";
constexpr static char universalElementRnMass[] = "222";
constexpr static char universalElementRuMass[] = "101.07";
constexpr static char universalElementSMass[] = "32.065";
constexpr static char universalElementSbMass[] = "121.760";
constexpr static char universalElementScMass[] = "44.955908";
constexpr static char universalElementSeMass[] = "78.971";
constexpr static char universalElementSgMass[] = "269";
constexpr static char universalElementSiMass[] = "28.0855";
constexpr static char universalElementSmMass[] = "150.36";
constexpr static char universalElementSnMass[] = "118.710";
constexpr static char universalElementSrMass[] = "87.62";
constexpr static char universalElementTaMass[] = "180.94788";
constexpr static char universalElementTbMass[] = "158.92534";
constexpr static char universalElementTcMass[] = "98";
constexpr static char universalElementTeMass[] = "127.60";
constexpr static char universalElementThMass[] = "232.0377";
constexpr static char universalElementTiMass[] = "47.867";
constexpr static char universalElementTlMass[] = "204.3833";
constexpr static char universalElementTmMass[] = "168.93422";
constexpr static char universalElementTsMass[] = "294";
constexpr static char universalElementUMass[] = "238.02891";
constexpr static char universalElementUbnMass[] = "297";
constexpr static char universalElementUueMass[] = "295";
constexpr static char universalElementVMass[] = "50.9415";
constexpr static char universalElementWMass[] = "183.84";
constexpr static char universalElementXeMass[] = "131.293";
constexpr static char universalElementYMass[] = "88.90584";
constexpr static char universalElementYbMass[] = "173.04";
constexpr static char universalElementZnMass[] = "65.409";
constexpr static char universalElementZrMass[] = "91.224";
constexpr static char universalElementalCharge[] = "1.602176634·10^-19_C";
constexpr static char universalEqual[] = "=";
constexpr static char universalEqualityCondition[] = "==";
constexpr static char universalEqualityConditionWithArg[] = "x==y";
constexpr static char universalEscapeVelocityOfEarth[] = "11186_m_s^-1";
constexpr static char universalEscapeVelocityOfMoon[] = "2380_m_s^-1";
constexpr static char universalEscapeVelocityOfSun[] = "42100_m_s^-1";
constexpr static char universalEvannDreumont[] = "Evann Dreumont";
constexpr static char universalExponentialRegressionFormula[] = " y=a·exp(b·x) ";
constexpr static char universalFactorCommandWithArg[] = "factor(n)";
constexpr static char universalFaradayConstant[] = "96485.33212_C_mol^-1";
constexpr static char universalFccId[] = "FCC ID";
constexpr static char universalFineStructure[] = "7.2973525693·10^-3";
constexpr static char universalFiniteIntegralFirstLegend[] = "P(";
constexpr static char universalFiniteIntegralLegend[] = "≤X≤";
constexpr static char universalFisher[] = "Fisher";
constexpr static char universalFloorCommandWithArg[] = "floor(x)";
constexpr static char universalForInListLoop[] = "for i in \x11:\n  ";
constexpr static char universalForInListLoopWithArg[] = "for i in list:\n  instruction";
constexpr static char universalForInRange1ArgLoop[] = "for i in range(\x11):\n  ";
constexpr static char universalForInRange1ArgLoopWithArg[] = "for i in range(size):\n  instruction";
constexpr static char universalForInRange2ArgsLoop[] = "for i in range(\x11,):\n  ";
constexpr static char universalForInRange2ArgsLoopWithArg[] = "for i in range(start, stop):\n  instruction";
constexpr static char universalForInRange3ArgsLoop[] = "for i in range(\x11,,):\n  ";
constexpr static char universalForInRange3ArgsLoopWithArg[] = "for i in range(start, stop, step):\n  instruction";
constexpr static char universalForLoopMenu[] = "For";
constexpr static char universalFracCommandWithArg[] = "frac(x)";
constexpr static char universalGAcceleration[] = "9.80665_m_s^-2";
constexpr static char universalGConstant[] = "6.67430·10^-11_m^3_kg^-1_s^-2";
constexpr static char universalGas[] = "8.314462618_J_mol^-1_K^-1";
constexpr static char universalGcdCommandWithArg[] = "gcd(p,q)";
constexpr static char universalGon[] = "gon";
constexpr static char universalHartreeConstant[] = "4.3597447222071·10^-18_J";
constexpr static char universalIfAndIfElseStatement[] = "if \x11 and :\n  \nelse:\n  ";
constexpr static char universalIfAndIfElseStatementWithArg[] = "if condition1 and condition2:\n  instruction1\nelse:\n  instruction2";
constexpr static char universalIfElifElseStatement[] = "if \x11:\n  \nelif :\n  \nelse:\n  ";
constexpr static char universalIfElifElseStatementWithArg[] = "if condition1:\n  instruction1\nelif condition2:\n  instruction2\nelse:\n  instruction3";
constexpr static char universalIfElseStatement[] = "if \x11:\n  \nelse:\n  ";
constexpr static char universalIfElseStatementWithArg[] = "if condition:\n  instruction1\nelse:\n  instruction2";
constexpr static char universalIfOrIfElseStatement[] = "if \x11 or :\n  \nelse:\n  ";
constexpr static char universalIfOrIfElseStatementWithArg[] = "if condition1 or condition2:\n  instruction1\nelse:\n  instruction2";
constexpr static char universalIfStatementMenu[] = "If";
constexpr static char universalIfThenStatement[] = "if \x11:\n  ";
constexpr static char universalIfThenStatementWithArg[] = "if condition:\n  instruction";
constexpr static char universalImCommandWithArg[] = "im(z)";
constexpr static char universalIndentityCommandWithArg[] = "identity(n)";
constexpr static char universalInferiorCondition[] = "<=";
constexpr static char universalInferiorConditionWithArg[] = "x<=y";
constexpr static char universalInferiorStrictCondition[] = "<";
constexpr static char universalInferiorStrictConditionWithArg[] = "x<y";
constexpr static char universalInfinity[] = "infinity";
constexpr static char universalIntCommand[] = "int(\x11,x,\x11,\x11)";
constexpr static char universalIntCommandWithArg[] = "int(f(x),x,a,b)";
constexpr static char universalInvBinomialCommandWithArg[] = "invbinom(a,n,p)";
constexpr static char universalInvNormCommandWithArg[] = "invnorm(a,μ,σ)";
constexpr static char universalInvSortCommandWithArg[] = "sort>(L)";
constexpr static char universalInverseCommandWithArg[] = "inverse(M)";
constexpr static char universalIonModule[] = "ion";
constexpr static char universalJeanBaptisteBoric[] = "Jean-Baptiste Boric";
constexpr static char universalJoachimLeFournis[] = "Joachim Le Fournis";
constexpr static char universalK[] = "k";
constexpr static char universalKandinskyModule[] = "kandinsky";
constexpr static char universalLambda[] = "λ";
constexpr static char universalLanguageDE[] = "Deutsch ";
constexpr static char universalLanguageEN[] = "English ";
constexpr static char universalLanguageES[] = "Español ";
constexpr static char universalLanguageFR[] = "Français ";
constexpr static char universalLanguageHU[] = "Magyar ";
constexpr static char universalLanguageIT[] = "Italiano ";
constexpr static char universalLanguageNL[] = "Nederlands ";
constexpr static char universalLanguagePT[] = "Português ";
constexpr static char universalLaurianFournier[] = "Laurian Fournier";
constexpr static char universalLcmCommandWithArg[] = "lcm(p,q)";
constexpr static char universalLeftIntegralFirstLegend[] = "P(X≤";
constexpr static char universalLeftIntegralSecondLegend[] = ")=";
constexpr static char universalLinearRegressionFormula[] = " y=a·x+b ";
constexpr static char universalLogCommandWithArg[] = "log(x,a)";
constexpr static char universalLogarithmicRegressionFormula[] = " y=a·ln(x)+b ";
constexpr static char universalLogisticRegressionFormula[] = " y=c/(1+a·exp(-b·x)) ";
constexpr static char universalLoicE[] = "Loïc E.";
constexpr static char universalMagneticFluxQuantum[] = "2.067833848·10^-15_Wb";
constexpr static char universalMathModule[] = "math";
constexpr static char universalMatplotlibPyplotModule[] = "matplotlib.pyplot";
constexpr static char universalMatrixCommand[] = "[[\x11]]";
constexpr static char universalMatrixCommandWithArg[] = "[[1,2][3,4]]";
constexpr static char universalMaxCommandWithArg[] = "max(L)";
constexpr static char universalMaximeFriess[] = "Maxime Friess";
constexpr static char universalMinCommandWithArg[] = "min(L)";
constexpr static char universalMoonMass[] = "7.342·10^22_kg";
constexpr static char universalMoonRadius[] = "3474600_m";
constexpr static char universalMu[] = "μ";
constexpr static char universalMuonMass[] = "1.883531627·10^-28_kg";
constexpr static char universalN[] = "n";
constexpr static char universalNeutronMass[] = "1.67492749804·10^-27_kg";
constexpr static char universalNonEqualityCondition[] = "!=";
constexpr static char universalNonEqualityConditionWithArg[] = "x!=y";
constexpr static char universalNormCDF2CommandWithArg[] = "normcdf2(a,b,μ,σ)";
constexpr static char universalNormCDFCommandWithArg[] = "normcdf(a,μ,σ)";
constexpr static char universalNormPDFCommandWithArg[] = "normpdf(x,μ,σ)";
constexpr static char universalNormVectorCommandWithArg[] = "norm(u)";
constexpr static char universalNuclearMagneton[] = "5.0507837461·10^-27_A_m^2";
constexpr static char universalNumpyFftModule[] = "fft";
constexpr static char universalNumpyLinalgModule[] = "linalg";
constexpr static char universalNumpyModule[] = "numpy";
constexpr static char universalNumpyNdarray[] = "ndarray";
constexpr static char universalOsModule[] = "os";
constexpr static char universalP[] = "p";
constexpr static char universalPAndreiTetrel[] = "@Graou";
constexpr static char universalPAntoninLoubiere[] = "@AntoninLoubiere";
constexpr static char universalPAxelMontlahuc[] = "@KernelBreaker_";
constexpr static char universalPCharlotteThomas[] = "@coco33920";
constexpr static char universalPCyprienMejat[] = "@A2drien";
constexpr static char universalPDamienNicolet[] = "@zardam";
constexpr static char universalPDavid[] = "@0b101";
constexpr static char universalPDavidLuca[] = "@dl11";
constexpr static char universalPDeltaSystem[] = "@DeltaSystem";
constexpr static char universalPEvannDreumont[] = "@LeGmask";
constexpr static char universalPJeanBaptisteBoric[] = "@boricj";
constexpr static char universalPJoachimLeFournis[] = "@RedGl0w";
constexpr static char universalPLaurianFournier[] = "@Lauryy06";
constexpr static char universalPLoicE[] = "@lolocomotive";
constexpr static char universalPMaximeFriess[] = "@M4x1m3";
constexpr static char universalPQuentinGuidee[] = "@quentinguidee";
constexpr static char universalPSandraSimmons[] = "@MixedMatched";
constexpr static char universalPSzaboLevente[] = "@Gegenter";
constexpr static char universalPVenceslasDuet[] = "@Citorva";
constexpr static char universalPVictorKretz[] = "@Mino";
constexpr static char universalPYannCouturier[] = "@Yaya-Cout";
constexpr static char universalPermuteCommandWithArg[] = "permute(n,r)";
constexpr static char universalPka[] = "pKa";
constexpr static char universalPka01[] = "H20/OH-";
constexpr static char universalPka01Value[] = "14";
constexpr static char universalPka02[] = "HS-/S(2-)";
constexpr static char universalPka02Value[] = "13.0";
constexpr static char universalPka03[] = "HPO4(2-)/PO4(3-)";
constexpr static char universalPka03Value[] = "12.7";
constexpr static char universalPka04[] = "HCO3-/CO3(2-)";
constexpr static char universalPka04Value[] = "10.2";
constexpr static char universalPka05[] = "C6H5OH/C6H5O-";
constexpr static char universalPka05Value[] = "9.9";
constexpr static char universalPka06[] = "NH4+/NH3";
constexpr static char universalPka06Value[] = "9.2";
constexpr static char universalPka07[] = "HBrO/BrO-";
constexpr static char universalPka07Value[] = "8.7";
constexpr static char universalPka08[] = "H2PO4-/HP04(2-)";
constexpr static char universalPka08Value[] = "7.2";
constexpr static char universalPka09[] = "H2S/HS-";
constexpr static char universalPka09Value[] = "7.0";
constexpr static char universalPka10[] = "H2C03/HC03-";
constexpr static char universalPka10Value[] = "6.4";
constexpr static char universalPka11[] = "CH3COOH/CH3COO-";
constexpr static char universalPka11Value[] = "4.7";
constexpr static char universalPka12[] = "C6H5COOH/C6H5COO-";
constexpr static char universalPka12Value[] = "4.2";
constexpr static char universalPka13[] = "HN02/NO2-";
constexpr static char universalPka13Value[] = "3.4";
constexpr static char universalPka14[] = "H3PO4/H2PO4-";
constexpr static char universalPka14Value[] = "2.1";
constexpr static char universalPka15[] = "HS04-/S04(2-)";
constexpr static char universalPka15Value[] = "1.9";
constexpr static char universalPka16[] = "H30+/H20";
constexpr static char universalPka16Value[] = "0";
constexpr static char universalPlanck[] = "6.62607015·10^-34_J_s";
constexpr static char universalPlanckCharge[] = "1.875·10^-18_C";
constexpr static char universalPlanckCurrent[] = "3.479·10^25_A";
constexpr static char universalPlanckDensity[] = "5.1·10^96_kg_m^-3";
constexpr static char universalPlanckEnergy[] = "1.956·10^9_J";
constexpr static char universalPlanckForce[] = "1.210·10^44_N";
constexpr static char universalPlanckImpedance[] = "29.986_Ω";
constexpr static char universalPlanckLength[] = "1.616255·10^-35_m";
constexpr static char universalPlanckLinearMass[] = "1.34664·10^27_kg_m^-1";
constexpr static char universalPlanckMass[] = "2.176434·10^-8_kg";
constexpr static char universalPlanckPower[] = "3.629·10^52_W";
constexpr static char universalPlanckPressure[] = "4.635·10^113_Pa";
constexpr static char universalPlanckQuantityMovement[] = "6.5_N_s";
constexpr static char universalPlanckReduce[] = "1.054571817·10^-34_J_s";
constexpr static char universalPlanckTemperature[] = "1.416784·10^32_K";
constexpr static char universalPlanckTension[] = "1.0432·10^27_V";
constexpr static char universalPlanckTime[] = "5.391247·10^-44_s";
constexpr static char universalPoisson[] = "Poisson";
constexpr static char universalPowerRegressionFormula[] = " y=a·x^b ";
constexpr static char universalPrediction95CommandWithArg[] = "prediction95(p,n)";
constexpr static char universalPredictionCommandWithArg[] = "prediction(p,n)";
constexpr static char universalProductCommand[] = "product(\x11,n,\x11,\x11)";
constexpr static char universalProductCommandWithArg[] = "product(f(n),n,nmin,nmax)";
constexpr static char universalProportionalRegressionFormula[] = " y=a·x ";
constexpr static char universalProtonMass[] = "1.67262192369·10^-27_kg";
constexpr static char universalPythonCommand1J[] = "1j";
constexpr static char universalPythonCommandAbs[] = "abs(x)";
constexpr static char universalPythonCommandAcos[] = "acos(x)";
constexpr static char universalPythonCommandAcosh[] = "acosh(x)";
constexpr static char universalPythonCommandAmpersand[] = "&";
constexpr static char universalPythonCommandAppend[] = "list.append(x)";
constexpr static char universalPythonCommandAppendWithoutArg[] = ".append(\x11)";
constexpr static char universalPythonCommandArrow[] = "arrow(x,y,dx,dy)";
constexpr static char universalPythonCommandAsin[] = "asin(x)";
constexpr static char universalPythonCommandAsinh[] = "asinh(x)";
constexpr static char universalPythonCommandAtan[] = "atan(x)";
constexpr static char universalPythonCommandAtan2[] = "atan2(y,x)";
constexpr static char universalPythonCommandAtanh[] = "atanh(x)";
constexpr static char universalPythonCommandAxis[] = "axis((xmin,xmax,ymin,ymax))";
constexpr static char universalPythonCommandAxisWithoutArg[] = "axis(\x11)";
constexpr static char universalPythonCommandBar[] = "bar(x,height)";
constexpr static char universalPythonCommandBattery[] = "battery()";
constexpr static char universalPythonCommandBatteryIscharging[] = "battery_ischarging()";
constexpr static char universalPythonCommandBatteryLevel[] = "battery_level()";
constexpr static char universalPythonCommandBin[] = "bin(x)";
constexpr static char universalPythonCommandCeil[] = "ceil(x)";
constexpr static char universalPythonCommandChoice[] = "choice(list)";
constexpr static char universalPythonCommandClear[] = "list.clear()";
constexpr static char universalPythonCommandClearWithoutArg[] = ".clear()";
constexpr static char universalPythonCommandCmathFunction[] = "cmath.function";
constexpr static char universalPythonCommandCmathFunctionWithoutArg[] = "cmath.\x11";
constexpr static char universalPythonCommandColor[] = "color(r,g,b)";
constexpr static char universalPythonCommandColorBlack[] = "'black'";
constexpr static char universalPythonCommandColorBlue[] = "'blue'";
constexpr static char universalPythonCommandColorBrown[] = "'brown'";
constexpr static char universalPythonCommandColorGray[] = "'gray'";
constexpr static char universalPythonCommandColorGreen[] = "'green'";
constexpr static char universalPythonCommandColorOrange[] = "'orange'";
constexpr static char universalPythonCommandColorPink[] = "'pink'";
constexpr static char universalPythonCommandColorPurple[] = "'purple'";
constexpr static char universalPythonCommandColorRed[] = "'red'";
constexpr static char universalPythonCommandColorWhite[] = "'white'";
constexpr static char universalPythonCommandColorYellow[] = "'yellow'";
constexpr static char universalPythonCommandComplex[] = "complex(a,b)";
constexpr static char universalPythonCommandConstantE[] = "e";
constexpr static char universalPythonCommandConstantPi[] = "pi";
constexpr static char universalPythonCommandCopySign[] = "copysign(x,y)";
constexpr static char universalPythonCommandCos[] = "cos(x)";
constexpr static char universalPythonCommandCosComplex[] = "cos(z)";
constexpr static char universalPythonCommandCosh[] = "cosh(x)";
constexpr static char universalPythonCommandCount[] = "list.count(x)";
constexpr static char universalPythonCommandCountWithoutArg[] = ".count(\x11)";
constexpr static char universalPythonCommandDef[] = "def \x11():\n  ";
constexpr static char universalPythonCommandDefWithArg[] = "def function(x):";
constexpr static char universalPythonCommandDegrees[] = "degrees(x)";
constexpr static char universalPythonCommandDivMod[] = "divmod(a,b)";
constexpr static char universalPythonCommandDrawCircle[] = "draw_circle(x,y,r,color)";
constexpr static char universalPythonCommandDrawLine[] = "draw_line(x1,y1,x2,y2,color)";
constexpr static char universalPythonCommandDrawString[] = "draw_string(\"text\",x,y)";
constexpr static char universalPythonCommandErf[] = "erf(x)";
constexpr static char universalPythonCommandErfc[] = "erfc(x)";
constexpr static char universalPythonCommandEval[] = "eval(\"expression\")";
constexpr static char universalPythonCommandExp[] = "exp(x)";
constexpr static char universalPythonCommandExpComplex[] = "exp(z)";
constexpr static char universalPythonCommandExpm1[] = "expm1(x)";
constexpr static char universalPythonCommandFabs[] = "fabs(x)";
constexpr static char universalPythonCommandFactorial[] = "factorial(x)";
constexpr static char universalPythonCommandFileClose[] = "file.close()";
constexpr static char universalPythonCommandFileCloseWithoutArg[] = ".close()";
constexpr static char universalPythonCommandFileClosed[] = "file.closed";
constexpr static char universalPythonCommandFileClosedWithoutArg[] = ".closed";
constexpr static char universalPythonCommandFileMode[] = "file.mode";
constexpr static char universalPythonCommandFileModeWithoutArg[] = ".mode";
constexpr static char universalPythonCommandFileName[] = "file.name";
constexpr static char universalPythonCommandFileNameWithoutArg[] = ".name";
constexpr static char universalPythonCommandFileOpen[] = "open(name, [mode])";
constexpr static char universalPythonCommandFileOpenWithoutArg[] = "open(\x11)";
constexpr static char universalPythonCommandFileRead[] = "file.read([size])";
constexpr static char universalPythonCommandFileReadWithoutArg[] = ".read(\x11)";
constexpr static char universalPythonCommandFileReadable[] = "file.readable()";
constexpr static char universalPythonCommandFileReadableWithoutArg[] = ".readable()";
constexpr static char universalPythonCommandFileReadline[] = "file.readline([size])";
constexpr static char universalPythonCommandFileReadlineWithoutArg[] = ".readline(\x11)";
constexpr static char universalPythonCommandFileReadlines[] = "file.readlines([hint])";
constexpr static char universalPythonCommandFileReadlinesWithoutArg[] = ".readlines(\x11)";
constexpr static char universalPythonCommandFileSeek[] = "file.seek(offset, [whence])";
constexpr static char universalPythonCommandFileSeekWithoutArg[] = ".seek(\x11)";
constexpr static char universalPythonCommandFileSeekable[] = "file.seekable()";
constexpr static char universalPythonCommandFileSeekableWithoutArg[] = ".seekable()";
constexpr static char universalPythonCommandFileTell[] = "file.tell()";
constexpr static char universalPythonCommandFileTellWithoutArg[] = ".tell()";
constexpr static char universalPythonCommandFileTruncate[] = "file.truncate([size])";
constexpr static char universalPythonCommandFileTruncateWithoutArg[] = ".truncate(\x11)";
constexpr static char universalPythonCommandFileWritable[] = "file.writable()";
constexpr static char universalPythonCommandFileWritableWithoutArg[] = ".writable()";
constexpr static char universalPythonCommandFileWrite[] = "file.write(b)";
constexpr static char universalPythonCommandFileWriteWithoutArg[] = ".write(\x11)";
constexpr static char universalPythonCommandFileWritelines[] = "file.writelines(lines)";
constexpr static char universalPythonCommandFileWritelinesWithoutArg[] = ".writelines(\x11)";
constexpr static char universalPythonCommandFillCircle[] = "fill_circle(x,y,r,color)";
constexpr static char universalPythonCommandFillPolygon[] = "fill_polygon([(x1,y1),...],color)";
constexpr static char universalPythonCommandFillRect[] = "fill_rect(x,y,width,height,color)";
constexpr static char universalPythonCommandFloat[] = "float(x)";
constexpr static char universalPythonCommandFloor[] = "floor(x)";
constexpr static char universalPythonCommandFmod[] = "fmod(a,b)";
constexpr static char universalPythonCommandFrExp[] = "frexp(x)";
constexpr static char universalPythonCommandGamma[] = "gamma(x)";
constexpr static char universalPythonCommandGetBrightness[] = "get_brightness()";
constexpr static char universalPythonCommandGetKeys[] = "get_keys()";
constexpr static char universalPythonCommandGetPalette[] = "get_palette()";
constexpr static char universalPythonCommandGetPixel[] = "get_pixel(x,y)";
constexpr static char universalPythonCommandGetrandbits[] = "getrandbits(k)";
constexpr static char universalPythonCommandGrid[] = "grid()";
constexpr static char universalPythonCommandHex[] = "hex(x)";
constexpr static char universalPythonCommandHist[] = "hist(x,bins)";
constexpr static char universalPythonCommandImag[] = "z.imag";
constexpr static char universalPythonCommandImagWithoutArg[] = ".imag";
constexpr static char universalPythonCommandImportCmath[] = "import cmath";
constexpr static char universalPythonCommandImportFromCmath[] = "from cmath import *";
constexpr static char universalPythonCommandImportFromIon[] = "from ion import *";
constexpr static char universalPythonCommandImportFromKandinsky[] = "from kandinsky import *";
constexpr static char universalPythonCommandImportFromMath[] = "from math import *";
constexpr static char universalPythonCommandImportFromMatplotlibPyplot[] = "from matplotlib.pyplot import *";
constexpr static char universalPythonCommandImportFromNumpy[] = "from ulab import numpy as np";
constexpr static char universalPythonCommandImportFromOs[] = "from os import *";
constexpr static char universalPythonCommandImportFromRandom[] = "from random import *";
constexpr static char universalPythonCommandImportFromScipy[] = "from ulab import scipy as spy";
constexpr static char universalPythonCommandImportFromSys[] = "from sys import *";
constexpr static char universalPythonCommandImportFromTime[] = "from time import *";
constexpr static char universalPythonCommandImportFromTurtle[] = "from turtle import *";
constexpr static char universalPythonCommandImportFromUtils[] = "from ulab import utils";
constexpr static char universalPythonCommandImportIon[] = "import ion";
constexpr static char universalPythonCommandImportKandinsky[] = "import kandinsky";
constexpr static char universalPythonCommandImportMath[] = "import math";
constexpr static char universalPythonCommandImportMatplotlibPyplot[] = "import matplotlib.pyplot";
constexpr static char universalPythonCommandImportOs[] = "import os";
constexpr static char universalPythonCommandImportRandom[] = "import random";
constexpr static char universalPythonCommandImportSys[] = "import sys";
constexpr static char universalPythonCommandImportTime[] = "import time";
constexpr static char universalPythonCommandImportTurtle[] = "import turtle";
constexpr static char universalPythonCommandIndex[] = "list.index(x)";
constexpr static char universalPythonCommandIndexWithoutArg[] = ".index(\x11)";
constexpr static char universalPythonCommandInput[] = "input(\"text\")";
constexpr static char universalPythonCommandInsert[] = "list.insert(i,x)";
constexpr static char universalPythonCommandInsertWithoutArg[] = ".insert(\x11,)";
constexpr static char universalPythonCommandInt[] = "int(x)";
constexpr static char universalPythonCommandIonFunction[] = "ion.function";
constexpr static char universalPythonCommandIonFunctionWithoutArg[] = "ion.\x11";
constexpr static char universalPythonCommandIsFinite[] = "isfinite(x)";
constexpr static char universalPythonCommandIsInfinite[] = "isinf(x)";
constexpr static char universalPythonCommandIsKeyDown[] = "keydown(k)";
constexpr static char universalPythonCommandIsNaN[] = "isnan(x)";
constexpr static char universalPythonCommandKandinskyFunction[] = "kandinsky.function";
constexpr static char universalPythonCommandKandinskyFunctionWithoutArg[] = "kandinsky.\x11";
constexpr static char universalPythonCommandKeyAlpha[] = "KEY_ALPHA";
constexpr static char universalPythonCommandKeyAns[] = "KEY_ANS";
constexpr static char universalPythonCommandKeyBack[] = "KEY_BACK";
constexpr static char universalPythonCommandKeyBackspace[] = "KEY_BACKSPACE";
constexpr static char universalPythonCommandKeyComma[] = "KEY_COMMA";
constexpr static char universalPythonCommandKeyCosine[] = "KEY_COSINE";
constexpr static char universalPythonCommandKeyDivision[] = "KEY_DIVISION";
constexpr static char universalPythonCommandKeyDot[] = "KEY_DOT";
constexpr static char universalPythonCommandKeyDown[] = "KEY_DOWN";
constexpr static char universalPythonCommandKeyEe[] = "KEY_EE";
constexpr static char universalPythonCommandKeyEight[] = "KEY_EIGHT";
constexpr static char universalPythonCommandKeyExe[] = "KEY_EXE";
constexpr static char universalPythonCommandKeyExp[] = "KEY_EXP";
constexpr static char universalPythonCommandKeyFive[] = "KEY_FIVE";
constexpr static char universalPythonCommandKeyFour[] = "KEY_FOUR";
constexpr static char universalPythonCommandKeyHome[] = "KEY_HOME";
constexpr static char universalPythonCommandKeyImaginary[] = "KEY_IMAGINARY";
constexpr static char universalPythonCommandKeyLeft[] = "KEY_LEFT";
constexpr static char universalPythonCommandKeyLeftParenthesis[] = "KEY_LEFTPARENTHESIS";
constexpr static char universalPythonCommandKeyLn[] = "KEY_LN";
constexpr static char universalPythonCommandKeyLog[] = "KEY_LOG";
constexpr static char universalPythonCommandKeyMinus[] = "KEY_MINUS";
constexpr static char universalPythonCommandKeyMultiplication[] = "KEY_MULTIPLICATION";
constexpr static char universalPythonCommandKeyNine[] = "KEY_NINE";
constexpr static char universalPythonCommandKeyOk[] = "KEY_OK";
constexpr static char universalPythonCommandKeyOnOff[] = "KEY_ONOFF";
constexpr static char universalPythonCommandKeyOne[] = "KEY_ONE";
constexpr static char universalPythonCommandKeyPi[] = "KEY_PI";
constexpr static char universalPythonCommandKeyPlus[] = "KEY_PLUS";
constexpr static char universalPythonCommandKeyPower[] = "KEY_POWER";
constexpr static char universalPythonCommandKeyRight[] = "KEY_RIGHT";
constexpr static char universalPythonCommandKeyRightParenthesis[] = "KEY_RIGHTPARENTHESIS";
constexpr static char universalPythonCommandKeySeven[] = "KEY_SEVEN";
constexpr static char universalPythonCommandKeyShift[] = "KEY_SHIFT";
constexpr static char universalPythonCommandKeySine[] = "KEY_SINE";
constexpr static char universalPythonCommandKeySix[] = "KEY_SIX";
constexpr static char universalPythonCommandKeySqrt[] = "KEY_SQRT";
constexpr static char universalPythonCommandKeySquare[] = "KEY_SQUARE";
constexpr static char universalPythonCommandKeyTangent[] = "KEY_TANGENT";
constexpr static char universalPythonCommandKeyThree[] = "KEY_THREE";
constexpr static char universalPythonCommandKeyToolbox[] = "KEY_TOOLBOX";
constexpr static char universalPythonCommandKeyTwo[] = "KEY_TWO";
constexpr static char universalPythonCommandKeyUp[] = "KEY_UP";
constexpr static char universalPythonCommandKeyVar[] = "KEY_VAR";
constexpr static char universalPythonCommandKeyXnt[] = "KEY_XNT";
constexpr static char universalPythonCommandKeyZero[] = "KEY_ZERO";
constexpr static char universalPythonCommandLF[] = "\\n";
constexpr static char universalPythonCommandLdexp[] = "ldexp(x,i)";
constexpr static char universalPythonCommandLength[] = "len(object)";
constexpr static char universalPythonCommandLgamma[] = "lgamma(x)";
constexpr static char universalPythonCommandLocalTime[] = "localtime([timestamp])";
constexpr static char universalPythonCommandLog[] = "log(x,a)";
constexpr static char universalPythonCommandLog10[] = "log10(x)";
constexpr static char universalPythonCommandLog2[] = "log2(x)";
constexpr static char universalPythonCommandLogComplex[] = "log(z,a)";
constexpr static char universalPythonCommandMathFunction[] = "math.function";
constexpr static char universalPythonCommandMathFunctionWithoutArg[] = "math.\x11";
constexpr static char universalPythonCommandMatplotlibPyplotFunction[] = "matplotlib.pyplot.function";
constexpr static char universalPythonCommandMatplotlibPyplotFunctionWithoutArg[] = "matplotlib.pyplot.\x11";
constexpr static char universalPythonCommandMax[] = "max(list)";
constexpr static char universalPythonCommandMin[] = "min(list)";
constexpr static char universalPythonCommandMktime[] = "mktime(tm)";
constexpr static char universalPythonCommandModf[] = "modf(x)";
constexpr static char universalPythonCommandMonotonic[] = "monotonic()";
constexpr static char universalPythonCommandNumpyAcos[] = "np.acos(a)";
constexpr static char universalPythonCommandNumpyAcosh[] = "np.acosh(a)";
constexpr static char universalPythonCommandNumpyAll[] = "np.all(a)";
constexpr static char universalPythonCommandNumpyAny[] = "np.any(a)";
constexpr static char universalPythonCommandNumpyArange[] = "np.arange(i)";
constexpr static char universalPythonCommandNumpyArctan2[] = "np.arctan2(a)";
constexpr static char universalPythonCommandNumpyArgmax[] = "np.argmax(a)";
constexpr static char universalPythonCommandNumpyArgmin[] = "np.argmin(a)";
constexpr static char universalPythonCommandNumpyArgsort[] = "np.argsort(a)";
constexpr static char universalPythonCommandNumpyAround[] = "np.around(a)";
constexpr static char universalPythonCommandNumpyArray[] = "np.array(a)";
constexpr static char universalPythonCommandNumpyAsin[] = "np.asin(a)";
constexpr static char universalPythonCommandNumpyAsinh[] = "np.asinh(a)";
constexpr static char universalPythonCommandNumpyAtan[] = "np.atan(a)";
constexpr static char universalPythonCommandNumpyAtanh[] = "np.atanh(a)";
constexpr static char universalPythonCommandNumpyBool[] = "np.bool";
constexpr static char universalPythonCommandNumpyCeil[] = "np.ceil(a)";
constexpr static char universalPythonCommandNumpyCholesky[] = "np.linalg.cholesky(a)";
constexpr static char universalPythonCommandNumpyClip[] = "np.clip(a, min, max)";
constexpr static char universalPythonCommandNumpyConcatenate[] = "np.concatenate(a,b)";
constexpr static char universalPythonCommandNumpyConvolve[] = "np.convolve(a, b)";
constexpr static char universalPythonCommandNumpyCopy[] = "ndarray.copy()";
constexpr static char universalPythonCommandNumpyCopyWithoutArg[] = ".copy()";
constexpr static char universalPythonCommandNumpyCos[] = "np.cos(a)";
constexpr static char universalPythonCommandNumpyCosh[] = "np.cosh(a)";
constexpr static char universalPythonCommandNumpyCross[] = "np.cross(a, b)";
constexpr static char universalPythonCommandNumpyDegrees[] = "np.degrees(a)";
constexpr static char universalPythonCommandNumpyDet[] = "np.linalg.det(a)";
constexpr static char universalPythonCommandNumpyDiag[] = "np.diag(a)";
constexpr static char universalPythonCommandNumpyDiff[] = "np.diff(a)";
constexpr static char universalPythonCommandNumpyDot[] = "np.dot(a, b)";
constexpr static char universalPythonCommandNumpyDtype[] = "ndarray.dtype";
constexpr static char universalPythonCommandNumpyDtypeWithoutArg[] = ".dtype";
constexpr static char universalPythonCommandNumpyE[] = "np.e";
constexpr static char universalPythonCommandNumpyEig[] = "np.linalg.eig(a)";
constexpr static char universalPythonCommandNumpyEmpty[] = "np.empty(s)";
constexpr static char universalPythonCommandNumpyEqual[] = "np.equal(a, b)";
constexpr static char universalPythonCommandNumpyExp[] = "np.exp(a)";
constexpr static char universalPythonCommandNumpyExpm1[] = "np.expm1(a)";
constexpr static char universalPythonCommandNumpyEye[] = "np.eye(n, m)";
constexpr static char universalPythonCommandNumpyFft[] = "np.fft.fft(a)";
constexpr static char universalPythonCommandNumpyFftFunction[] = "np.fft.function";
constexpr static char universalPythonCommandNumpyFftFunctionWithoutArg[] = "np.fft.\x11";
constexpr static char universalPythonCommandNumpyFlat[] = "ndarray.flat";
constexpr static char universalPythonCommandNumpyFlatWithoutArg[] = ".flat";
constexpr static char universalPythonCommandNumpyFlatten[] = "ndarray.flatten()";
constexpr static char universalPythonCommandNumpyFlattenWithoutArg[] = ".flatten()";
constexpr static char universalPythonCommandNumpyFlip[] = "np.flip(a)";
constexpr static char universalPythonCommandNumpyFloat[] = "np.float";
constexpr static char universalPythonCommandNumpyFloor[] = "np.floor(a)";
constexpr static char universalPythonCommandNumpyFromBuffer[] = "ndarray.frombuffer(b)";
constexpr static char universalPythonCommandNumpyFull[] = "np.full(s, v)";
constexpr static char universalPythonCommandNumpyFunction[] = "np.function";
constexpr static char universalPythonCommandNumpyFunctionWithoutArg[] = "np.\x11";
constexpr static char universalPythonCommandNumpyGetPrintOptions[] = "np.get_printoptions()";
constexpr static char universalPythonCommandNumpyIfft[] = "np.fft.ifft(a)";
constexpr static char universalPythonCommandNumpyInf[] = "np.inf";
constexpr static char universalPythonCommandNumpyInt16[] = "np.int16";
constexpr static char universalPythonCommandNumpyInt8[] = "np.int8";
constexpr static char universalPythonCommandNumpyInterp[] = "np.interp(a)";
constexpr static char universalPythonCommandNumpyInv[] = "np.linalg.inv(a)";
constexpr static char universalPythonCommandNumpyIsfinite[] = "np.isfinite(a)";
constexpr static char universalPythonCommandNumpyIsinf[] = "np.isinf(a)";
constexpr static char universalPythonCommandNumpyLinalgFunction[] = "np.linalg.function";
constexpr static char universalPythonCommandNumpyLinalgFunctionWithoutArg[] = "np.linalg.\x11";
constexpr static char universalPythonCommandNumpyLinspace[] = "np.linspace(s, e)";
constexpr static char universalPythonCommandNumpyLog[] = "np.log(a)";
constexpr static char universalPythonCommandNumpyLog10[] = "np.log10(a)";
constexpr static char universalPythonCommandNumpyLog2[] = "np.log2(a)";
constexpr static char universalPythonCommandNumpyLogspace[] = "np.logspace(s, e)";
constexpr static char universalPythonCommandNumpyMax[] = "np.max(a)";
constexpr static char universalPythonCommandNumpyMaximum[] = "np.maximum(a, b)";
constexpr static char universalPythonCommandNumpyMean[] = "np.mean(a)";
constexpr static char universalPythonCommandNumpyMedian[] = "np.median(a)";
constexpr static char universalPythonCommandNumpyMin[] = "np.min(a)";
constexpr static char universalPythonCommandNumpyMinimum[] = "np.minimum(a, b)";
constexpr static char universalPythonCommandNumpyNan[] = "np.nan";
constexpr static char universalPythonCommandNumpyNdinfo[] = "np.ndinfo(a)";
constexpr static char universalPythonCommandNumpyNorm[] = "np.linalg.norm(a)";
constexpr static char universalPythonCommandNumpyNot_equal[] = "np.not_equal(a, b)";
constexpr static char universalPythonCommandNumpyOnes[] = "np.ones(s)";
constexpr static char universalPythonCommandNumpyPi[] = "np.pi";
constexpr static char universalPythonCommandNumpyPolyfit[] = "np.polyfit(a, b, y)";
constexpr static char universalPythonCommandNumpyPolyval[] = "np.polyval(p, x)";
constexpr static char universalPythonCommandNumpyRadians[] = "np.radians(a)";
constexpr static char universalPythonCommandNumpyReshape[] = "ndarray.reshape(s)";
constexpr static char universalPythonCommandNumpyReshapeWithoutArg[] = ".reshape(\x11)";
constexpr static char universalPythonCommandNumpyRoll[] = "np.roll(a, n)";
constexpr static char universalPythonCommandNumpySetPrintOptions[] = "np.set_printoptions()";
constexpr static char universalPythonCommandNumpyShape[] = "ndarray.shape";
constexpr static char universalPythonCommandNumpyShapeWithoutArg[] = ".shape";
constexpr static char universalPythonCommandNumpySin[] = "np.sin(a)";
constexpr static char universalPythonCommandNumpySinh[] = "np.sinh(a)";
constexpr static char universalPythonCommandNumpySize[] = "ndarray.size";
constexpr static char universalPythonCommandNumpySizeWithoutArg[] = ".size";
constexpr static char universalPythonCommandNumpySort[] = "ndarray.sort()";
constexpr static char universalPythonCommandNumpySortWithArguments[] = "np.sort(a)";
constexpr static char universalPythonCommandNumpySortWithoutArg[] = ".sort()";
constexpr static char universalPythonCommandNumpySqrt[] = "np.sqrt(a)";
constexpr static char universalPythonCommandNumpyStd[] = "np.std(a)";
constexpr static char universalPythonCommandNumpySum[] = "np.sum(a)";
constexpr static char universalPythonCommandNumpyTan[] = "np.tan(a)";
constexpr static char universalPythonCommandNumpyTanh[] = "np.tanh(a)";
constexpr static char universalPythonCommandNumpyToBytes[] = "ndarray.tobytes()";
constexpr static char universalPythonCommandNumpyToBytesWithoutArg[] = ".tobytes()";
constexpr static char universalPythonCommandNumpyTrace[] = "np.trace(a)";
constexpr static char universalPythonCommandNumpyTranspose[] = "ndarray.transpose()";
constexpr static char universalPythonCommandNumpyTransposeWithoutArg[] = ".transpose()";
constexpr static char universalPythonCommandNumpyTrapz[] = "np.trapz(y)";
constexpr static char universalPythonCommandNumpyUint16[] = "np.uint16";
constexpr static char universalPythonCommandNumpyUint8[] = "np.uint8";
constexpr static char universalPythonCommandNumpyVectorize[] = "np.vectorize(f)";
constexpr static char universalPythonCommandNumpyWhere[] = "np.where(c, x, y)";
constexpr static char universalPythonCommandNumpyZeros[] = "np.zeros(s)";
constexpr static char universalPythonCommandOct[] = "oct(x)";
constexpr static char universalPythonCommandPercent[] = "%";
constexpr static char universalPythonCommandPhase[] = "phase(z)";
constexpr static char universalPythonCommandPlot[] = "plot(x,y,color)";
constexpr static char universalPythonCommandPolar[] = "polar(z)";
constexpr static char universalPythonCommandPop[] = "list.pop()";
constexpr static char universalPythonCommandPopWithoutArg[] = ".pop()";
constexpr static char universalPythonCommandPound[] = "#";
constexpr static char universalPythonCommandPower[] = "pow(x,y)";
constexpr static char universalPythonCommandPrint[] = "print(object)";
constexpr static char universalPythonCommandRTCmode[] = "rtcmode()";
constexpr static char universalPythonCommandRadians[] = "radians(x)";
constexpr static char universalPythonCommandRandint[] = "randint(a,b)";
constexpr static char universalPythonCommandRandom[] = "random()";
constexpr static char universalPythonCommandRandomFunction[] = "random.function";
constexpr static char universalPythonCommandRandomFunctionWithoutArg[] = "random.\x11";
constexpr static char universalPythonCommandRandrange[] = "randrange(start,stop)";
constexpr static char universalPythonCommandRangeStartStop[] = "range(start,stop)";
constexpr static char universalPythonCommandRangeStop[] = "range(stop)";
constexpr static char universalPythonCommandReal[] = "z.real";
constexpr static char universalPythonCommandRealWithoutArg[] = ".real";
constexpr static char universalPythonCommandRect[] = "rect(r,arg)";
constexpr static char universalPythonCommandRemove[] = "list.remove(x)";
constexpr static char universalPythonCommandRemoveWithoutArg[] = ".remove(\x11)";
constexpr static char universalPythonCommandReturn[] = "return ";
constexpr static char universalPythonCommandReverse[] = "list.reverse()";
constexpr static char universalPythonCommandReverseWithoutArg[] = ".reverse()";
constexpr static char universalPythonCommandRound[] = "round(x,n)";
constexpr static char universalPythonCommandScatter[] = "scatter(x,y)";
constexpr static char universalPythonCommandScipyFunction[] = "spy.function";
constexpr static char universalPythonCommandScipyFunctionWithoutArg[] = "spy.\x11";
constexpr static char universalPythonCommandScipyLinalgChoSolve[] = "spy.linalg.cho_solve(a, b)";
constexpr static char universalPythonCommandScipyLinalgFunction[] = "spy.linalg.function";
constexpr static char universalPythonCommandScipyLinalgFunctionWithoutArg[] = "spy.linalg.\x11";
constexpr static char universalPythonCommandScipyLinalgSolveTriangular[] = "spy.linalg.solve_triangular(a, b)";
constexpr static char universalPythonCommandScipyOptimizeBisect[] = "spy.optimize.bisect(f, a, b)";
constexpr static char universalPythonCommandScipyOptimizeFmin[] = "spy.optimize.fmin(f, x0)";
constexpr static char universalPythonCommandScipyOptimizeFunction[] = "spy.optimize.function";
constexpr static char universalPythonCommandScipyOptimizeFunctionWithoutArg[] = "spy.optimize.\x11";
constexpr static char universalPythonCommandScipyOptimizeNewton[] = "spy.optimize.newton(f, x0)";
constexpr static char universalPythonCommandScipySignalFunction[] = "spy.signal.function";
constexpr static char universalPythonCommandScipySignalFunctionWithoutArg[] = "spy.signal.\x11";
constexpr static char universalPythonCommandScipySignalSosfilt[] = "spy.signal.sosfilt(sos, x)";
constexpr static char universalPythonCommandScipySignalSpectrogram[] = "spy.signal.spectrogram(y)";
constexpr static char universalPythonCommandScipySpecialErf[] = "spy.erf(a)";
constexpr static char universalPythonCommandScipySpecialErfc[] = "spy.erfc(a)";
constexpr static char universalPythonCommandScipySpecialFunction[] = "spy.special.function";
constexpr static char universalPythonCommandScipySpecialFunctionWithoutArg[] = "spy.special.\x11";
constexpr static char universalPythonCommandScipySpecialGamma[] = "spy.gamma(a)";
constexpr static char universalPythonCommandScipySpecialGammaln[] = "spy.gammaln(a)";
constexpr static char universalPythonCommandSeed[] = "seed(x)";
constexpr static char universalPythonCommandSetBrightness[] = "set_brightness()";
constexpr static char universalPythonCommandSetLocaltime[] = "setlocaltime(tm)";
constexpr static char universalPythonCommandSetPixel[] = "set_pixel(x,y,color)";
constexpr static char universalPythonCommandSetRTCmode[] = "setrtcmode(mode)";
constexpr static char universalPythonCommandShow[] = "show()";
constexpr static char universalPythonCommandSin[] = "sin(x)";
constexpr static char universalPythonCommandSinComplex[] = "sin(z)";
constexpr static char universalPythonCommandSingleQuote[] = "'x'";
constexpr static char universalPythonCommandSinh[] = "sinh(x)";
constexpr static char universalPythonCommandSleep[] = "sleep(t)";
constexpr static char universalPythonCommandSort[] = "list.sort()";
constexpr static char universalPythonCommandSortWithoutArg[] = ".sort()";
constexpr static char universalPythonCommandSorted[] = "sorted(list)";
constexpr static char universalPythonCommandSqrt[] = "sqrt(x)";
constexpr static char universalPythonCommandSqrtComplex[] = "sqrt(z)";
constexpr static char universalPythonCommandSum[] = "sum(list)";
constexpr static char universalPythonCommandSymbolExp[] = "^";
constexpr static char universalPythonCommandTab[] = "\\t";
constexpr static char universalPythonCommandTan[] = "tan(x)";
constexpr static char universalPythonCommandTanh[] = "tanh(x)";
constexpr static char universalPythonCommandText[] = "text(x,y,\"text\")";
constexpr static char universalPythonCommandTime[] = "time()";
constexpr static char universalPythonCommandTimeFunction[] = "time.function";
constexpr static char universalPythonCommandTimeFunctionWithoutArg[] = "time.\x11";
constexpr static char universalPythonCommandTrunc[] = "trunc(x)";
constexpr static char universalPythonCommandTurtleFunction[] = "turtle.function";
constexpr static char universalPythonCommandTurtleFunctionWithoutArg[] = "turtle.\x11";
constexpr static char universalPythonCommandUniform[] = "uniform(a,b)";
constexpr static char universalPythonCommandUtilsFromInt16Buffer[] = "from_int16_buffer(b)";
constexpr static char universalPythonCommandUtilsFromInt32Buffer[] = "from_int32_buffer(b)";
constexpr static char universalPythonCommandUtilsFromUint16Buffer[] = "from_uint16_buffer(b)";
constexpr static char universalPythonCommandUtilsFromUint32Buffer[] = "from_uint32_buffer(b)";
constexpr static char universalPythonCommandUtilsFunction[] = "utils.function";
constexpr static char universalPythonCommandUtilsFunctionWithoutArg[] = "utils.\x11";
constexpr static char universalPythonCommandUtilsSpectrogram[] = "spectrogram(a)";
constexpr static char universalPythonCommandVerticalBar[] = "|";
constexpr static char universalPythonConstantE[] = "2.718281828459045";
constexpr static char universalPythonConstantPi[] = "3.141592653589793";
constexpr static char universalPythonOsCommandGetlogin[] = "getlogin()";
constexpr static char universalPythonOsCommandListdir[] = "listdir()";
constexpr static char universalPythonOsCommandRemove[] = "remove(filename)";
constexpr static char universalPythonOsCommandRemoveWithoutArg[] = "remove(\x11)";
constexpr static char universalPythonOsCommandRename[] = "rename(oldname, newname)";
constexpr static char universalPythonOsCommandRenameWithoutArg[] = "rename(\x11,)";
constexpr static char universalPythonOsCommandUname[] = "uname()";
constexpr static char universalPythonSysCommandByteorder[] = "byteorder";
constexpr static char universalPythonSysCommandExit[] = "exit()";
constexpr static char universalPythonSysCommandImplementation[] = "implementation";
constexpr static char universalPythonSysCommandModules[] = "modules";
constexpr static char universalPythonSysCommandPrintexception[] = "print_exception(exc)";
constexpr static char universalPythonSysCommandPrintexceptionWithoutArg[] = "print_exception(\x11)";
constexpr static char universalPythonSysCommandVersion[] = "version";
constexpr static char universalPythonSysCommandVersioninfo[] = "version_info";
constexpr static char universalPythonTurtleCommandBackward[] = "backward(x)";
constexpr static char universalPythonTurtleCommandCircle[] = "circle(r)";
constexpr static char universalPythonTurtleCommandColor[] = "color('c')";
constexpr static char universalPythonTurtleCommandColorMode[] = "colormode(x)";
constexpr static char universalPythonTurtleCommandForward[] = "forward(x)";
constexpr static char universalPythonTurtleCommandGoto[] = "goto(x,y)";
constexpr static char universalPythonTurtleCommandHeading[] = "heading()";
constexpr static char universalPythonTurtleCommandHideturtle[] = "hideturtle()";
constexpr static char universalPythonTurtleCommandIsdown[] = "isdown()";
constexpr static char universalPythonTurtleCommandLeft[] = "left(a)";
constexpr static char universalPythonTurtleCommandPendown[] = "pendown()";
constexpr static char universalPythonTurtleCommandPensize[] = "pensize(x)";
constexpr static char universalPythonTurtleCommandPenup[] = "penup()";
constexpr static char universalPythonTurtleCommandPosition[] = "position()";
constexpr static char universalPythonTurtleCommandReset[] = "reset()";
constexpr static char universalPythonTurtleCommandRight[] = "right(a)";
constexpr static char universalPythonTurtleCommandSetheading[] = "setheading(a)";
constexpr static char universalPythonTurtleCommandShowturtle[] = "showturtle()";
constexpr static char universalPythonTurtleCommandSpeed[] = "speed(x)";
constexpr static char universalPythonTurtleCommandWrite[] = "write(\"text\")";
constexpr static char universalQuadraticRegressionFormula[] = " y=a·x^2+b·x+c ";
constexpr static char universalQuarticRegressionFormula[] = " y=a·x^4+b·x^3+c·x^2+d·x+e ";
constexpr static char universalQuentinGuidee[] = "Quentin Guidée";
constexpr static char universalQuoCommandWithArg[] = "quo(p,q)";
constexpr static char universalR[] = "r";
constexpr static char universalRad[] = "rad";
constexpr static char universalRandintCommandWithArg[] = "randint(a,b)";
constexpr static char universalRandomCommandWithArg[] = "random()";
constexpr static char universalRandomModule[] = "random";
constexpr static char universalReCommandWithArg[] = "re(z)";
constexpr static char universalReducedRowEchelonFormCommandWithArg[] = "rref(M)";
constexpr static char universalReg[] = "reg";
constexpr static char universalRemCommandWithArg[] = "rem(p,q)";
constexpr static char universalRightIntegralFirstLegend[] = "P(X≥";
constexpr static char universalRightIntegralSecondLegend[] = ")=";
constexpr static char universalRootCommandWithArg[] = "root(x,n)";
constexpr static char universalRoundCommandWithArg[] = "round(x,n)";
constexpr static char universalRowEchelonFormCommandWithArg[] = "ref(M)";
constexpr static char universalRstvt_Air[] = "1.00·10^9_Ω_m";
constexpr static char universalRstvt_Aluminium[] = "2.65·10^-8_Ω_m";
constexpr static char universalRstvt_Calcium[] = "3.36·10^-8_Ω_m";
constexpr static char universalRstvt_Cobalt[] = "6.24·10^-8_Ω_m";
constexpr static char universalRstvt_Copper[] = "1.68·10^-8_Ω_m";
constexpr static char universalRstvt_Glass[] = "5.00·10^14_Ω_m";
constexpr static char universalRstvt_Gold[] = "2.44·10^-8_Ω_m";
constexpr static char universalRstvt_Iron[] = "9.70·10^-8_Ω_m";
constexpr static char universalRstvt_Lithium[] = "9.28·10^-8_Ω_m";
constexpr static char universalRstvt_Nickel[] = "6.99·10^-8_Ω_m";
constexpr static char universalRstvt_Platinum[] = "1.06·10^-7_Ω_m";
constexpr static char universalRstvt_Sea_water[] = "2.1·10^-1_Ω_m";
constexpr static char universalRstvt_Silver[] = "1.59·10^-8_Ω_m";
constexpr static char universalRstvt_Tin[] = "1.09·10^-7_Ω_m";
constexpr static char universalRstvt_Tungsten[] = "5.60·10^-8_Ω_m";
constexpr static char universalRstvt_Water[] = "1.01·10^3_Ω_m";
constexpr static char universalRstvt_Wood[] = "1.00·10^3_Ω_m";
constexpr static char universalRstvt_Zinc[] = "5.90·10^-8_Ω_m";
constexpr static char universalRydbergConstant[] = "10973731.568160_m^-1";
constexpr static char universalSandraSimmons[] = "Sandra Simmons";
constexpr static char universalScipyLinalgModule[] = "linalg";
constexpr static char universalScipyModule[] = "scipy";
constexpr static char universalScipyOptimizeModule[] = "optimize";
constexpr static char universalScipySignalModule[] = "signal";
constexpr static char universalScipySpecialModule[] = "special";
constexpr static char universalShift[] = "shift";
constexpr static char universalSigma[] = "σ";
constexpr static char universalSinhCommandWithArg[] = "sinh(x)";
constexpr static char universalSortCommandWithArg[] = "sort<(L)";
constexpr static char universalSpeedOfLight[] = "2.99792458·10^8_m_s^-1";
constexpr static char universalSpeedOfSound0[] = "343.4_m_s^-1";
constexpr static char universalSpeedOfSoundGlass[] = "5300_m_s^-1";
constexpr static char universalSpeedOfSoundSteel[] = "5600_m_s^-1";
constexpr static char universalSpeedOfSoundWater[] = "1480_m_s^-1";
constexpr static char universalStefanBoltzmann[] = "5.670374419·10^-8_W_m^-2_K^-4";
constexpr static char universalStudent[] = "Student";
constexpr static char universalSumCommand[] = "sum(\x11,n,\x11,\x11)";
constexpr static char universalSumCommandWithArg[] = "sum(f(n),n,nmin,nmax)";
constexpr static char universalSunMass[] = "1.989·10^30_kg";
constexpr static char universalSunRadius[] = "696000000_m";
constexpr static char universalSuperiorCondition[] = ">=";
constexpr static char universalSuperiorConditionWithArg[] = "x>=y";
constexpr static char universalSuperiorStrictCondition[] = ">";
constexpr static char universalSuperiorStrictConditionWithArg[] = "x>y";
constexpr static char universalSxy[] = "∑xy";
constexpr static char universalSysModule[] = "sys";
constexpr static char universalSzaboLevente[] = "Szabó Levente";
constexpr static char universalT[] = "t";
constexpr static char universalTMax[] = "Tmax";
constexpr static char universalTMin[] = "Tmin";
constexpr static char universalTanhCommandWithArg[] = "tanh(x)";
constexpr static char universalTauonMass[] = "3.16754·10^-27_kg";
constexpr static char universalTheta[] = "θ";
constexpr static char universalThetaMax[] = "θmax";
constexpr static char universalThetaMin[] = "θmin";
constexpr static char universalTimeModule[] = "time";
constexpr static char universalTraceCommandWithArg[] = "trace(M)";
constexpr static char universalTransposeCommandWithArg[] = "transpose(M)";
constexpr static char universalTrigonometricRegressionFormula[] = " y=a·sin(b·x+c)+d ";
constexpr static char universalTryExcept1Error[] = "try:\n  \nexcept \x11:\n  ";
constexpr static char universalTryExcept1ErrorElse[] = "try:\n  \nexcept \x11:\n  \nelse:\n  ";
constexpr static char universalTryExcept1ErrorElseWithArg[] = "try:\n  instruction\nexcept Error:\n  reaction\nelse:\n  clean";
constexpr static char universalTryExcept1ErrorWithArg[] = "try:\n  instruction\nexcept Error:\n  reaction";
constexpr static char universalTryExcept2Error[] = "try:\n  \nexcept (\x11):\n  ";
constexpr static char universalTryExcept2ErrorWithArg[] = "try:\n  instruction\nexcept (Error1, Error2):\n  reaction";
constexpr static char universalTurtleModule[] = "turtle";
constexpr static char universalURL[] = "zardam.github.io/nw-external-apps/";
constexpr static char universalUSBAppCapital[] = "USB";
constexpr static char universalUlabDocumentationLink[] = "micropython-ulab.readthedocs.io";
constexpr static char universalUlabModule[] = "ulab";
constexpr static char universalUltimateAnswer[] = "Ultimate Answer";
constexpr static char universalUltimateAnswerValue[] = "42";
constexpr static char universalUnitAmountMoleMicroSymbol[] = "_μmol";
constexpr static char universalUnitAmountMoleMilliSymbol[] = "_mmol";
constexpr static char universalUnitAmountMoleSymbol[] = "_mol";
constexpr static char universalUnitCapacitanceFarad[] = "Farad";
constexpr static char universalUnitCapacitanceFaradMicroSymbol[] = "_μF";
constexpr static char universalUnitCapacitanceFaradMilliSymbol[] = "_mF";
constexpr static char universalUnitCapacitanceFaradSymbol[] = "_F";
constexpr static char universalUnitChargeCoulomb[] = "Coulomb";
constexpr static char universalUnitChargeCoulombSymbol[] = "_C";
constexpr static char universalUnitConductanceSiemens[] = "Siemens";
constexpr static char universalUnitConductanceSiemensMilliSymbol[] = "_mS";
constexpr static char universalUnitConductanceSiemensSymbol[] = "_S";
constexpr static char universalUnitCurrentAmpereMicroSymbol[] = "_μA";
constexpr static char universalUnitCurrentAmpereMilliSymbol[] = "_mA";
constexpr static char universalUnitCurrentAmpereSymbol[] = "_A";
constexpr static char universalUnitDistanceAstronomicalUnitSymbol[] = "_au";
constexpr static char universalUnitDistanceFootSymbol[] = "_ft";
constexpr static char universalUnitDistanceInchSymbol[] = "_in";
constexpr static char universalUnitDistanceLightYearSymbol[] = "_ly";
constexpr static char universalUnitDistanceMeterKiloSymbol[] = "_km";
constexpr static char universalUnitDistanceMeterMicroSymbol[] = "_μm";
constexpr static char universalUnitDistanceMeterMilliSymbol[] = "_mm";
constexpr static char universalUnitDistanceMeterNanoSymbol[] = "_nm";
constexpr static char universalUnitDistanceMeterPicoSymbol[] = "_pm";
constexpr static char universalUnitDistanceMeterSymbol[] = "_m";
constexpr static char universalUnitDistanceMileSymbol[] = "_mi";
constexpr static char universalUnitDistanceParsecSymbol[] = "_pc";
constexpr static char universalUnitDistanceYardSymbol[] = "_yd";
constexpr static char universalUnitEnergyElectronVoltKiloSymbol[] = "_keV";
constexpr static char universalUnitEnergyElectronVoltMegaSymbol[] = "_MeV";
constexpr static char universalUnitEnergyElectronVoltMilliSymbol[] = "_meV";
constexpr static char universalUnitEnergyElectronVoltSymbol[] = "_eV";
constexpr static char universalUnitEnergyJoule[] = "Joule";
constexpr static char universalUnitEnergyJouleKilo[] = "Kilojoule";
constexpr static char universalUnitEnergyJouleKiloSymbol[] = "_kJ";
constexpr static char universalUnitEnergyJouleMenu[] = "Joule";
constexpr static char universalUnitEnergyJouleMilliSymbol[] = "_mJ";
constexpr static char universalUnitEnergyJouleSymbol[] = "_J";
constexpr static char universalUnitForceNewton[] = "Newton";
constexpr static char universalUnitForceNewtonKilo[] = "Kilonewton";
constexpr static char universalUnitForceNewtonKiloSymbol[] = "_kN";
constexpr static char universalUnitForceNewtonMilliSymbol[] = "_mN";
constexpr static char universalUnitForceNewtonSymbol[] = "_N";
constexpr static char universalUnitFrequencyHertz[] = "Hertz";
constexpr static char universalUnitFrequencyHertzGiga[] = "Gigahertz";
constexpr static char universalUnitFrequencyHertzGigaSymbol[] = "_GHz";
constexpr static char universalUnitFrequencyHertzKilo[] = "Kilohertz";
constexpr static char universalUnitFrequencyHertzKiloSymbol[] = "_kHz";
constexpr static char universalUnitFrequencyHertzMegaSymbol[] = "_MHz";
constexpr static char universalUnitFrequencyHertzSymbol[] = "_Hz";
constexpr static char universalUnitIlluminanceLuxSymbol[] = "_lx";
constexpr static char universalUnitInductanceHenry[] = "Henry";
constexpr static char universalUnitInductanceHenrySymbol[] = "_H";
constexpr static char universalUnitLuminousFluxLumenSymbol[] = "_lm";
constexpr static char universalUnitLuminousIntensityCandela[] = "Candela";
constexpr static char universalUnitLuminousIntensityCandelaSymbol[] = "_cd";
constexpr static char universalUnitMagneticFieldTesla[] = "Tesla";
constexpr static char universalUnitMagneticFieldTeslaSymbol[] = "_T";
constexpr static char universalUnitMassGramKiloSymbol[] = "_kg";
constexpr static char universalUnitMassGramMicroSymbol[] = "_μg";
constexpr static char universalUnitMassGramMilliSymbol[] = "_mg";
constexpr static char universalUnitMassGramSymbol[] = "_g";
constexpr static char universalUnitMassLongTonSymbol[] = "_lgtn";
constexpr static char universalUnitMassOunceSymbol[] = "_oz";
constexpr static char universalUnitMassPoundSymbol[] = "_lb";
constexpr static char universalUnitMassShortTonSymbol[] = "_shtn";
constexpr static char universalUnitMassTonneSymbol[] = "_t";
constexpr static char universalUnitPotentialVolt[] = "Volt";
constexpr static char universalUnitPotentialVoltKilo[] = "Kilovolt";
constexpr static char universalUnitPotentialVoltKiloSymbol[] = "_kV";
constexpr static char universalUnitPotentialVoltMicroSymbol[] = "_μV";
constexpr static char universalUnitPotentialVoltMilliSymbol[] = "_mV";
constexpr static char universalUnitPotentialVoltSymbol[] = "_V";
constexpr static char universalUnitPowerWatt[] = "Watt";
constexpr static char universalUnitPowerWattGiga[] = "Gigawatt";
constexpr static char universalUnitPowerWattGigaSymbol[] = "_GW";
constexpr static char universalUnitPowerWattKilo[] = "Kilowatt";
constexpr static char universalUnitPowerWattKiloSymbol[] = "_kW";
constexpr static char universalUnitPowerWattMegaSymbol[] = "_MW";
constexpr static char universalUnitPowerWattMicroSymbol[] = "_μW";
constexpr static char universalUnitPowerWattMilliSymbol[] = "_mW";
constexpr static char universalUnitPowerWattSymbol[] = "_W";
constexpr static char universalUnitPressureAtmSymbol[] = "_atm";
constexpr static char universalUnitPressureBar[] = "Bar";
constexpr static char universalUnitPressureBarSymbol[] = "_bar";
constexpr static char universalUnitPressurePascal[] = "Pascal";
constexpr static char universalUnitPressurePascalHectoSymbol[] = "_hPa";
constexpr static char universalUnitPressurePascalSymbol[] = "_Pa";
constexpr static char universalUnitResistanceOhm[] = "Ohm";
constexpr static char universalUnitResistanceOhmKilo[] = "Kiloohm";
constexpr static char universalUnitResistanceOhmKiloSymbol[] = "_kΩ";
constexpr static char universalUnitResistanceOhmSymbol[] = "_Ω";
constexpr static char universalUnitSolidAngleSteradianSymbol[] = "_sr";
constexpr static char universalUnitSurfaceAcreSymbol[] = "_acre";
constexpr static char universalUnitSurfaceHectarSymbol[] = "_ha";
constexpr static char universalUnitTemperatureCelsius[] = "Celsius";
constexpr static char universalUnitTemperatureCelsiusSymbol[] = "_°C";
constexpr static char universalUnitTemperatureFahrenheit[] = "Fahrenheit";
constexpr static char universalUnitTemperatureFahrenheitSymbol[] = "_°F";
constexpr static char universalUnitTemperatureKelvin[] = "Kelvin";
constexpr static char universalUnitTemperatureKelvinSymbol[] = "_K";
constexpr static char universalUnitTimeDaySymbol[] = "_day";
constexpr static char universalUnitTimeHourSymbol[] = "_h";
constexpr static char universalUnitTimeMinuteSymbol[] = "_min";
constexpr static char universalUnitTimeMonthSymbol[] = "_month";
constexpr static char universalUnitTimeSecondMicroSymbol[] = "_μs";
constexpr static char universalUnitTimeSecondMilliSymbol[] = "_ms";
constexpr static char universalUnitTimeSecondNanoSymbol[] = "_ns";
constexpr static char universalUnitTimeSecondSymbol[] = "_s";
constexpr static char universalUnitTimeWeekSymbol[] = "_week";
constexpr static char universalUnitTimeYearSymbol[] = "_year";
constexpr static char universalUnitVolumeCupSymbol[] = "_cup";
constexpr static char universalUnitVolumeFluidOunceSymbol[] = "_floz";
constexpr static char universalUnitVolumeGallonSymbol[] = "_gal";
constexpr static char universalUnitVolumeLiterCentiSymbol[] = "_cL";
constexpr static char universalUnitVolumeLiterDeciSymbol[] = "_dL";
constexpr static char universalUnitVolumeLiterMilliSymbol[] = "_mL";
constexpr static char universalUnitVolumeLiterSymbol[] = "_L";
constexpr static char universalUnitVolumePintSymbol[] = "_pt";
constexpr static char universalUnitVolumeQuartSymbol[] = "_qt";
constexpr static char universalUnitVolumeTablespoonSymbol[] = "_tbsp";
constexpr static char universalUnitVolumeTeaspoonSymbol[] = "_tsp";
constexpr static char universalUsbSetting[] = "USB";
constexpr static char universalUtilsModule[] = "utils";
constexpr static char universalVacuumImpedance[] = "376.730313668_Ω";
constexpr static char universalVacuum_permeability[] = "1.25663706212·10^-6_H_m^-1";
constexpr static char universalVacuum_permittivity[] = "8.8541878128·10^-12_F_m^-1";
constexpr static char universalVenceslasDuet[] = "Venceslas Duet";
constexpr static char universalVictorKretz[] = "Victor Kretz";
constexpr static char universalWBosonMass[] = "1.4334·10^-25_kg";
constexpr static char universalWaterTriplePoint[] = "273.16_K";
constexpr static char universalWhileLoop[] = "while \x11:\n  ";
constexpr static char universalWhileLoopMenu[] = "While";
constexpr static char universalWhileLoopWithArg[] = "while condition:\n  instruction";
constexpr static char universalWien[] = "2.897771955·10^-3_K_m";
constexpr static char universalWithInstruction[] = "with \x11 as :\n  ";
constexpr static char universalWithInstructionWithArg[] = "with expression as target:\n  instructions";
constexpr static char universalX[] = "x";
constexpr static char universalXMax[] = "Xmax";
constexpr static char universalXMin[] = "Xmin";
constexpr static char universalY[] = "y";
constexpr static char universalYMax[] = "Ymax";
constexpr static char universalYMin[] = "Ymin";
constexpr static char universalYannCouturier[] = "Yann Couturier";
constexpr static char universalZBosonMass[] = "1.62556·10^-25_kg";

constexpr static const char * universalMessages[1085] = {
  universalDefault,
  universalA,
  universalAbsCommandWithArg,
  universalAcoshCommandWithArg,
  universalAlmostEqual,
  universalAlpha,
  universalAndreiTetrel,
  universalAntoninLoubiere,
  universalArgCommandWithArg,
  universalAsinhCommandWithArg,
  universalAtanhCommandWithArg,
  universalAtmosphericPressure,
  universalAtomName_Bohrium,
  universalAtomName_Hassium,
  universalAtomName_Livermorium,
  universalAtomName_Moscovium,
  universalAtomName_Nihonium,
  universalAtomName_Oganesson,
  universalAtomName_Tennessine,
  universalAtomicApp,
  universalAtomicAppCapital,
  universalAtomicMassUnit,
  universalAvogadro,
  universalAxelMontlahuc,
  universalB,
  universalBinomialCDFCommandWithArg,
  universalBinomialCommandWithArg,
  universalBinomialPDFCommandWithArg,
  universalBlankMessage,
  universalBohrMagneton,
  universalBohrRadius,
  universalBoltzmann,
  universalC,
  universalCapitalAlpha,
  universalCeilCommandWithArg,
  universalCharlotteThomas,
  universalCirculationQuantum,
  universalCmathModule,
  universalCndcvt_Air,
  universalCndcvt_Aluminium,
  universalCndcvt_Calcium,
  universalCndcvt_Cobalt,
  universalCndcvt_Copper,
  universalCndcvt_Glass,
  universalCndcvt_Gold,
  universalCndcvt_Iron,
  universalCndcvt_Lithium,
  universalCndcvt_Nickel,
  universalCndcvt_Platinum,
  universalCndcvt_Sea_water,
  universalCndcvt_Silver,
  universalCndcvt_Tin,
  universalCndcvt_Tungsten,
  universalCndcvt_Water,
  universalCndcvt_Wood,
  universalCndcvt_Zinc,
  universalCodeApp,
  universalCodeAppCapital,
  universalConditionAnd,
  universalConditionNot,
  universalConditionOr,
  universalConditionsMenu,
  universalConductanceQuantum,
  universalConfidenceCommandWithArg,
  universalConjCommandWithArg,
  universalConsolePrompt,
  universalCoshCommandWithArg,
  universalCoulomb,
  universalCrossCommandWithArg,
  universalCubicRegressionFormula,
  universalCyprienMejat,
  universalD,
  universalD1,
  universalD2,
  universalDamienNicolet,
  universalDash,
  universalDavid,
  universalDavidLuca,
  universalDefaultSetting,
  universalDeltaSystem,
  universalDeterminantCommandWithArg,
  universalDiffCommand,
  universalDiffCommandWithArg,
  universalDimensionCommandWithArg,
  universalDiscreteLegend,
  universalDotCommandWithArg,
  universalE,
  universalEarthMass,
  universalEarthMoonDistance,
  universalEarthRadius,
  universalEarthSunDistance,
  universalElectronMass,
  universalElementAcMass,
  universalElementAgMass,
  universalElementAlMass,
  universalElementAmMass,
  universalElementArMass,
  universalElementAsMass,
  universalElementAtMass,
  universalElementAuMass,
  universalElementBMass,
  universalElementBaMass,
  universalElementBeMass,
  universalElementBhMass,
  universalElementBiMass,
  universalElementBkMass,
  universalElementBrMass,
  universalElementCMass,
  universalElementCaMass,
  universalElementCdMass,
  universalElementCeMass,
  universalElementCfMass,
  universalElementClMass,
  universalElementCmMass,
  universalElementCnMass,
  universalElementCoMass,
  universalElementCrMass,
  universalElementCsMass,
  universalElementCuMass,
  universalElementDbMass,
  universalElementDsMass,
  universalElementDyMass,
  universalElementErMass,
  universalElementEsMass,
  universalElementEuMass,
  universalElementFMass,
  universalElementFeMass,
  universalElementFlMass,
  universalElementFmMass,
  universalElementFrMass,
  universalElementGaMass,
  universalElementGdMass,
  universalElementGeMass,
  universalElementHMass,
  universalElementHeMass,
  universalElementHfMass,
  universalElementHgMass,
  universalElementHoMass,
  universalElementHsMass,
  universalElementIMass,
  universalElementInMass,
  universalElementIrMass,
  universalElementKMass,
  universalElementKrMass,
  universalElementLaMass,
  universalElementLiMass,
  universalElementLrMass,
  universalElementLuMass,
  universalElementLvMass,
  universalElementMcMass,
  universalElementMdMass,
  universalElementMgMass,
  universalElementMnMass,
  universalElementMoMass,
  universalElementMtMass,
  universalElementNMass,
  universalElementNaMass,
  universalElementNbMass,
  universalElementNdMass,
  universalElementNeMass,
  universalElementNhMass,
  universalElementNiMass,
  universalElementNoMass,
  universalElementNpMass,
  universalElementOMass,
  universalElementOgMass,
  universalElementOsMass,
  universalElementPMass,
  universalElementPaMass,
  universalElementPbMass,
  universalElementPdMass,
  universalElementPmMass,
  universalElementPoMass,
  universalElementPrMass,
  universalElementPtMass,
  universalElementPuMass,
  universalElementRaMass,
  universalElementRbMass,
  universalElementReMass,
  universalElementRfMass,
  universalElementRgMass,
  universalElementRhMass,
  universalElementRnMass,
  universalElementRuMass,
  universalElementSMass,
  universalElementSbMass,
  universalElementScMass,
  universalElementSeMass,
  universalElementSgMass,
  universalElementSiMass,
  universalElementSmMass,
  universalElementSnMass,
  universalElementSrMass,
  universalElementTaMass,
  universalElementTbMass,
  universalElementTcMass,
  universalElementTeMass,
  universalElementThMass,
  universalElementTiMass,
  universalElementTlMass,
  universalElementTmMass,
  universalElementTsMass,
  universalElementUMass,
  universalElementUbnMass,
  universalElementUueMass,
  universalElementVMass,
  universalElementWMass,
  universalElementXeMass,
  universalElementYMass,
  universalElementYbMass,
  universalElementZnMass,
  universalElementZrMass,
  universalElementalCharge,
  universalEqual,
  universalEqualityCondition,
  universalEqualityConditionWithArg,
  universalEscapeVelocityOfEarth,
  universalEscapeVelocityOfMoon,
  universalEscapeVelocityOfSun,
  universalEvannDreumont,
  universalExponentialRegressionFormula,
  universalFactorCommandWithArg,
  universalFaradayConstant,
  universalFccId,
  universalFineStructure,
  universalFiniteIntegralFirstLegend,
  universalFiniteIntegralLegend,
  universalFisher,
  universalFloorCommandWithArg,
  universalForInListLoop,
  universalForInListLoopWithArg,
  universalForInRange1ArgLoop,
  universalForInRange1ArgLoopWithArg,
  universalForInRange2ArgsLoop,
  universalForInRange2ArgsLoopWithArg,
  universalForInRange3ArgsLoop,
  universalForInRange3ArgsLoopWithArg,
  universalForLoopMenu,
  universalFracCommandWithArg,
  universalGAcceleration,
  universalGConstant,
  universalGas,
  universalGcdCommandWithArg,
  universalGon,
  universalHartreeConstant,
  universalIfAndIfElseStatement,
  universalIfAndIfElseStatementWithArg,
  universalIfElifElseStatement,
  universalIfElifElseStatementWithArg,
  universalIfElseStatement,
  universalIfElseStatementWithArg,
  universalIfOrIfElseStatement,
  universalIfOrIfElseStatementWithArg,
  universalIfStatementMenu,
  universalIfThenStatement,
  universalIfThenStatementWithArg,
  universalImCommandWithArg,
  universalIndentityCommandWithArg,
  universalInferiorCondition,
  universalInferiorConditionWithArg,
  universalInferiorStrictCondition,
  universalInferiorStrictConditionWithArg,
  universalInfinity,
  universalIntCommand,
  universalIntCommandWithArg,
  universalInvBinomialCommandWithArg,
  universalInvNormCommandWithArg,
  universalInvSortCommandWithArg,
  universalInverseCommandWithArg,
  universalIonModule,
  universalJeanBaptisteBoric,
  universalJoachimLeFournis,
  universalK,
  universalKandinskyModule,
  universalLambda,
  universalLanguageDE,
  universalLanguageEN,
  universalLanguageES,
  universalLanguageFR,
  universalLanguageHU,
  universalLanguageIT,
  universalLanguageNL,
  universalLanguagePT,
  universalLaurianFournier,
  universalLcmCommandWithArg,
  universalLeftIntegralFirstLegend,
  universalLeftIntegralSecondLegend,
  universalLinearRegressionFormula,
  universalLogCommandWithArg,
  universalLogarithmicRegressionFormula,
  universalLogisticRegressionFormula,
  universalLoicE,
  universalMagneticFluxQuantum,
  universalMathModule,
  universalMatplotlibPyplotModule,
  universalMatrixCommand,
  universalMatrixCommandWithArg,
  universalMaxCommandWithArg,
  universalMaximeFriess,
  universalMinCommandWithArg,
  universalMoonMass,
  universalMoonRadius,
  universalMu,
  universalMuonMass,
  universalN,
  universalNeutronMass,
  universalNonEqualityCondition,
  universalNonEqualityConditionWithArg,
  universalNormCDF2CommandWithArg,
  universalNormCDFCommandWithArg,
  universalNormPDFCommandWithArg,
  universalNormVectorCommandWithArg,
  universalNuclearMagneton,
  universalNumpyFftModule,
  universalNumpyLinalgModule,
  universalNumpyModule,
  universalNumpyNdarray,
  universalOsModule,
  universalP,
  universalPAndreiTetrel,
  universalPAntoninLoubiere,
  universalPAxelMontlahuc,
  universalPCharlotteThomas,
  universalPCyprienMejat,
  universalPDamienNicolet,
  universalPDavid,
  universalPDavidLuca,
  universalPDeltaSystem,
  universalPEvannDreumont,
  universalPJeanBaptisteBoric,
  universalPJoachimLeFournis,
  universalPLaurianFournier,
  universalPLoicE,
  universalPMaximeFriess,
  universalPQuentinGuidee,
  universalPSandraSimmons,
  universalPSzaboLevente,
  universalPVenceslasDuet,
  universalPVictorKretz,
  universalPYannCouturier,
  universalPermuteCommandWithArg,
  universalPka,
  universalPka01,
  universalPka01Value,
  universalPka02,
  universalPka02Value,
  universalPka03,
  universalPka03Value,
  universalPka04,
  universalPka04Value,
  universalPka05,
  universalPka05Value,
  universalPka06,
  universalPka06Value,
  universalPka07,
  universalPka07Value,
  universalPka08,
  universalPka08Value,
  universalPka09,
  universalPka09Value,
  universalPka10,
  universalPka10Value,
  universalPka11,
  universalPka11Value,
  universalPka12,
  universalPka12Value,
  universalPka13,
  universalPka13Value,
  universalPka14,
  universalPka14Value,
  universalPka15,
  universalPka15Value,
  universalPka16,
  universalPka16Value,
  universalPlanck,
  universalPlanckCharge,
  universalPlanckCurrent,
  universalPlanckDensity,
  universalPlanckEnergy,
  universalPlanckForce,
  universalPlanckImpedance,
  universalPlanckLength,
  universalPlanckLinearMass,
  universalPlanckMass,
  universalPlanckPower,
  universalPlanckPressure,
  universalPlanckQuantityMovement,
  universalPlanckReduce,
  universalPlanckTemperature,
  universalPlanckTension,
  universalPlanckTime,
  universalPoisson,
  universalPowerRegressionFormula,
  universalPrediction95CommandWithArg,
  universalPredictionCommandWithArg,
  universalProductCommand,
  universalProductCommandWithArg,
  universalProportionalRegressionFormula,
  universalProtonMass,
  universalPythonCommand1J,
  universalPythonCommandAbs,
  universalPythonCommandAcos,
  universalPythonCommandAcosh,
  universalPythonCommandAmpersand,
  universalPythonCommandAppend,
  universalPythonCommandAppendWithoutArg,
  universalPythonCommandArrow,
  universalPythonCommandAsin,
  universalPythonCommandAsinh,
  universalPythonCommandAtan,
  universalPythonCommandAtan2,
  universalPythonCommandAtanh,
  universalPythonCommandAxis,
  universalPythonCommandAxisWithoutArg,
  universalPythonCommandBar,
  universalPythonCommandBattery,
  universalPythonCommandBatteryIscharging,
  universalPythonCommandBatteryLevel,
  universalPythonCommandBin,
  universalPythonCommandCeil,
  universalPythonCommandChoice,
  universalPythonCommandClear,
  universalPythonCommandClearWithoutArg,
  universalPythonCommandCmathFunction,
  universalPythonCommandCmathFunctionWithoutArg,
  universalPythonCommandColor,
  universalPythonCommandColorBlack,
  universalPythonCommandColorBlue,
  universalPythonCommandColorBrown,
  universalPythonCommandColorGray,
  universalPythonCommandColorGreen,
  universalPythonCommandColorOrange,
  universalPythonCommandColorPink,
  universalPythonCommandColorPurple,
  universalPythonCommandColorRed,
  universalPythonCommandColorWhite,
  universalPythonCommandColorYellow,
  universalPythonCommandComplex,
  universalPythonCommandConstantE,
  universalPythonCommandConstantPi,
  universalPythonCommandCopySign,
  universalPythonCommandCos,
  universalPythonCommandCosComplex,
  universalPythonCommandCosh,
  universalPythonCommandCount,
  universalPythonCommandCountWithoutArg,
  universalPythonCommandDef,
  universalPythonCommandDefWithArg,
  universalPythonCommandDegrees,
  universalPythonCommandDivMod,
  universalPythonCommandDrawCircle,
  universalPythonCommandDrawLine,
  universalPythonCommandDrawString,
  universalPythonCommandErf,
  universalPythonCommandErfc,
  universalPythonCommandEval,
  universalPythonCommandExp,
  universalPythonCommandExpComplex,
  universalPythonCommandExpm1,
  universalPythonCommandFabs,
  universalPythonCommandFactorial,
  universalPythonCommandFileClose,
  universalPythonCommandFileCloseWithoutArg,
  universalPythonCommandFileClosed,
  universalPythonCommandFileClosedWithoutArg,
  universalPythonCommandFileMode,
  universalPythonCommandFileModeWithoutArg,
  universalPythonCommandFileName,
  universalPythonCommandFileNameWithoutArg,
  universalPythonCommandFileOpen,
  universalPythonCommandFileOpenWithoutArg,
  universalPythonCommandFileRead,
  universalPythonCommandFileReadWithoutArg,
  universalPythonCommandFileReadable,
  universalPythonCommandFileReadableWithoutArg,
  universalPythonCommandFileReadline,
  universalPythonCommandFileReadlineWithoutArg,
  universalPythonCommandFileReadlines,
  universalPythonCommandFileReadlinesWithoutArg,
  universalPythonCommandFileSeek,
  universalPythonCommandFileSeekWithoutArg,
  universalPythonCommandFileSeekable,
  universalPythonCommandFileSeekableWithoutArg,
  universalPythonCommandFileTell,
  universalPythonCommandFileTellWithoutArg,
  universalPythonCommandFileTruncate,
  universalPythonCommandFileTruncateWithoutArg,
  universalPythonCommandFileWritable,
  universalPythonCommandFileWritableWithoutArg,
  universalPythonCommandFileWrite,
  universalPythonCommandFileWriteWithoutArg,
  universalPythonCommandFileWritelines,
  universalPythonCommandFileWritelinesWithoutArg,
  universalPythonCommandFillCircle,
  universalPythonCommandFillPolygon,
  universalPythonCommandFillRect,
  universalPythonCommandFloat,
  universalPythonCommandFloor,
  universalPythonCommandFmod,
  universalPythonCommandFrExp,
  universalPythonCommandGamma,
  universalPythonCommandGetBrightness,
  universalPythonCommandGetKeys,
  universalPythonCommandGetPalette,
  universalPythonCommandGetPixel,
  universalPythonCommandGetrandbits,
  universalPythonCommandGrid,
  universalPythonCommandHex,
  universalPythonCommandHist,
  universalPythonCommandImag,
  universalPythonCommandImagWithoutArg,
  universalPythonCommandImportCmath,
  universalPythonCommandImportFromCmath,
  universalPythonCommandImportFromIon,
  universalPythonCommandImportFromKandinsky,
  universalPythonCommandImportFromMath,
  universalPythonCommandImportFromMatplotlibPyplot,
  universalPythonCommandImportFromNumpy,
  universalPythonCommandImportFromOs,
  universalPythonCommandImportFromRandom,
  universalPythonCommandImportFromScipy,
  universalPythonCommandImportFromSys,
  universalPythonCommandImportFromTime,
  universalPythonCommandImportFromTurtle,
  universalPythonCommandImportFromUtils,
  universalPythonCommandImportIon,
  universalPythonCommandImportKandinsky,
  universalPythonCommandImportMath,
  universalPythonCommandImportMatplotlibPyplot,
  universalPythonCommandImportOs,
  universalPythonCommandImportRandom,
  universalPythonCommandImportSys,
  universalPythonCommandImportTime,
  universalPythonCommandImportTurtle,
  universalPythonCommandIndex,
  universalPythonCommandIndexWithoutArg,
  universalPythonCommandInput,
  universalPythonCommandInsert,
  universalPythonCommandInsertWithoutArg,
  universalPythonCommandInt,
  universalPythonCommandIonFunction,
  universalPythonCommandIonFunctionWithoutArg,
  universalPythonCommandIsFinite,
  universalPythonCommandIsInfinite,
  universalPythonCommandIsKeyDown,
  universalPythonCommandIsNaN,
  universalPythonCommandKandinskyFunction,
  universalPythonCommandKandinskyFunctionWithoutArg,
  universalPythonCommandKeyAlpha,
  universalPythonCommandKeyAns,
  universalPythonCommandKeyBack,
  universalPythonCommandKeyBackspace,
  universalPythonCommandKeyComma,
  universalPythonCommandKeyCosine,
  universalPythonCommandKeyDivision,
  universalPythonCommandKeyDot,
  universalPythonCommandKeyDown,
  universalPythonCommandKeyEe,
  universalPythonCommandKeyEight,
  universalPythonCommandKeyExe,
  universalPythonCommandKeyExp,
  universalPythonCommandKeyFive,
  universalPythonCommandKeyFour,
  universalPythonCommandKeyHome,
  universalPythonCommandKeyImaginary,
  universalPythonCommandKeyLeft,
  universalPythonCommandKeyLeftParenthesis,
  universalPythonCommandKeyLn,
  universalPythonCommandKeyLog,
  universalPythonCommandKeyMinus,
  universalPythonCommandKeyMultiplication,
  universalPythonCommandKeyNine,
  universalPythonCommandKeyOk,
  universalPythonCommandKeyOnOff,
  universalPythonCommandKeyOne,
  universalPythonCommandKeyPi,
  universalPythonCommandKeyPlus,
  universalPythonCommandKeyPower,
  universalPythonCommandKeyRight,
  universalPythonCommandKeyRightParenthesis,
  universalPythonCommandKeySeven,
  universalPythonCommandKeyShift,
  universalPythonCommandKeySine,
  universalPythonCommandKeySix,
  universalPythonCommandKeySqrt,
  universalPythonCommandKeySquare,
  universalPythonCommandKeyTangent,
  universalPythonCommandKeyThree,
  universalPythonCommandKeyToolbox,
  universalPythonCommandKeyTwo,
  universalPythonCommandKeyUp,
  universalPythonCommandKeyVar,
  universalPythonCommandKeyXnt,
  universalPythonCommandKeyZero,
  universalPythonCommandLF,
  universalPythonCommandLdexp,
  universalPythonCommandLength,
  universalPythonCommandLgamma,
  universalPythonCommandLocalTime,
  universalPythonCommandLog,
  universalPythonCommandLog10,
  universalPythonCommandLog2,
  universalPythonCommandLogComplex,
  universalPythonCommandMathFunction,
  universalPythonCommandMathFunctionWithoutArg,
  universalPythonCommandMatplotlibPyplotFunction,
  universalPythonCommandMatplotlibPyplotFunctionWithoutArg,
  universalPythonCommandMax,
  universalPythonCommandMin,
  universalPythonCommandMktime,
  universalPythonCommandModf,
  universalPythonCommandMonotonic,
  universalPythonCommandNumpyAcos,
  universalPythonCommandNumpyAcosh,
  universalPythonCommandNumpyAll,
  universalPythonCommandNumpyAny,
  universalPythonCommandNumpyArange,
  universalPythonCommandNumpyArctan2,
  universalPythonCommandNumpyArgmax,
  universalPythonCommandNumpyArgmin,
  universalPythonCommandNumpyArgsort,
  universalPythonCommandNumpyAround,
  universalPythonCommandNumpyArray,
  universalPythonCommandNumpyAsin,
  universalPythonCommandNumpyAsinh,
  universalPythonCommandNumpyAtan,
  universalPythonCommandNumpyAtanh,
  universalPythonCommandNumpyBool,
  universalPythonCommandNumpyCeil,
  universalPythonCommandNumpyCholesky,
  universalPythonCommandNumpyClip,
  universalPythonCommandNumpyConcatenate,
  universalPythonCommandNumpyConvolve,
  universalPythonCommandNumpyCopy,
  universalPythonCommandNumpyCopyWithoutArg,
  universalPythonCommandNumpyCos,
  universalPythonCommandNumpyCosh,
  universalPythonCommandNumpyCross,
  universalPythonCommandNumpyDegrees,
  universalPythonCommandNumpyDet,
  universalPythonCommandNumpyDiag,
  universalPythonCommandNumpyDiff,
  universalPythonCommandNumpyDot,
  universalPythonCommandNumpyDtype,
  universalPythonCommandNumpyDtypeWithoutArg,
  universalPythonCommandNumpyE,
  universalPythonCommandNumpyEig,
  universalPythonCommandNumpyEmpty,
  universalPythonCommandNumpyEqual,
  universalPythonCommandNumpyExp,
  universalPythonCommandNumpyExpm1,
  universalPythonCommandNumpyEye,
  universalPythonCommandNumpyFft,
  universalPythonCommandNumpyFftFunction,
  universalPythonCommandNumpyFftFunctionWithoutArg,
  universalPythonCommandNumpyFlat,
  universalPythonCommandNumpyFlatWithoutArg,
  universalPythonCommandNumpyFlatten,
  universalPythonCommandNumpyFlattenWithoutArg,
  universalPythonCommandNumpyFlip,
  universalPythonCommandNumpyFloat,
  universalPythonCommandNumpyFloor,
  universalPythonCommandNumpyFromBuffer,
  universalPythonCommandNumpyFull,
  universalPythonCommandNumpyFunction,
  universalPythonCommandNumpyFunctionWithoutArg,
  universalPythonCommandNumpyGetPrintOptions,
  universalPythonCommandNumpyIfft,
  universalPythonCommandNumpyInf,
  universalPythonCommandNumpyInt16,
  universalPythonCommandNumpyInt8,
  universalPythonCommandNumpyInterp,
  universalPythonCommandNumpyInv,
  universalPythonCommandNumpyIsfinite,
  universalPythonCommandNumpyIsinf,
  universalPythonCommandNumpyLinalgFunction,
  universalPythonCommandNumpyLinalgFunctionWithoutArg,
  universalPythonCommandNumpyLinspace,
  universalPythonCommandNumpyLog,
  universalPythonCommandNumpyLog10,
  universalPythonCommandNumpyLog2,
  universalPythonCommandNumpyLogspace,
  universalPythonCommandNumpyMax,
  universalPythonCommandNumpyMaximum,
  universalPythonCommandNumpyMean,
  universalPythonCommandNumpyMedian,
  universalPythonCommandNumpyMin,
  universalPythonCommandNumpyMinimum,
  universalPythonCommandNumpyNan,
  universalPythonCommandNumpyNdinfo,
  universalPythonCommandNumpyNorm,
  universalPythonCommandNumpyNot_equal,
  universalPythonCommandNumpyOnes,
  universalPythonCommandNumpyPi,
  universalPythonCommandNumpyPolyfit,
  universalPythonCommandNumpyPolyval,
  universalPythonCommandNumpyRadians,
  universalPythonCommandNumpyReshape,
  universalPythonCommandNumpyReshapeWithoutArg,
  universalPythonCommandNumpyRoll,
  universalPythonCommandNumpySetPrintOptions,
  universalPythonCommandNumpyShape,
  universalPythonCommandNumpyShapeWithoutArg,
  universalPythonCommandNumpySin,
  universalPythonCommandNumpySinh,
  universalPythonCommandNumpySize,
  universalPythonCommandNumpySizeWithoutArg,
  universalPythonCommandNumpySort,
  universalPythonCommandNumpySortWithArguments,
  universalPythonCommandNumpySortWithoutArg,
  universalPythonCommandNumpySqrt,
  universalPythonCommandNumpyStd,
  universalPythonCommandNumpySum,
  universalPythonCommandNumpyTan,
  universalPythonCommandNumpyTanh,
  universalPythonCommandNumpyToBytes,
  universalPythonCommandNumpyToBytesWithoutArg,
  universalPythonCommandNumpyTrace,
  universalPythonCommandNumpyTranspose,
  universalPythonCommandNumpyTransposeWithoutArg,
  universalPythonCommandNumpyTrapz,
  universalPythonCommandNumpyUint16,
  universalPythonCommandNumpyUint8,
  universalPythonCommandNumpyVectorize,
  universalPythonCommandNumpyWhere,
  universalPythonCommandNumpyZeros,
  universalPythonCommandOct,
  universalPythonCommandPercent,
  universalPythonCommandPhase,
  universalPythonCommandPlot,
  universalPythonCommandPolar,
  universalPythonCommandPop,
  universalPythonCommandPopWithoutArg,
  universalPythonCommandPound,
  universalPythonCommandPower,
  universalPythonCommandPrint,
  universalPythonCommandRTCmode,
  universalPythonCommandRadians,
  universalPythonCommandRandint,
  universalPythonCommandRandom,
  universalPythonCommandRandomFunction,
  universalPythonCommandRandomFunctionWithoutArg,
  universalPythonCommandRandrange,
  universalPythonCommandRangeStartStop,
  universalPythonCommandRangeStop,
  universalPythonCommandReal,
  universalPythonCommandRealWithoutArg,
  universalPythonCommandRect,
  universalPythonCommandRemove,
  universalPythonCommandRemoveWithoutArg,
  universalPythonCommandReturn,
  universalPythonCommandReverse,
  universalPythonCommandReverseWithoutArg,
  universalPythonCommandRound,
  universalPythonCommandScatter,
  universalPythonCommandScipyFunction,
  universalPythonCommandScipyFunctionWithoutArg,
  universalPythonCommandScipyLinalgChoSolve,
  universalPythonCommandScipyLinalgFunction,
  universalPythonCommandScipyLinalgFunctionWithoutArg,
  universalPythonCommandScipyLinalgSolveTriangular,
  universalPythonCommandScipyOptimizeBisect,
  universalPythonCommandScipyOptimizeFmin,
  universalPythonCommandScipyOptimizeFunction,
  universalPythonCommandScipyOptimizeFunctionWithoutArg,
  universalPythonCommandScipyOptimizeNewton,
  universalPythonCommandScipySignalFunction,
  universalPythonCommandScipySignalFunctionWithoutArg,
  universalPythonCommandScipySignalSosfilt,
  universalPythonCommandScipySignalSpectrogram,
  universalPythonCommandScipySpecialErf,
  universalPythonCommandScipySpecialErfc,
  universalPythonCommandScipySpecialFunction,
  universalPythonCommandScipySpecialFunctionWithoutArg,
  universalPythonCommandScipySpecialGamma,
  universalPythonCommandScipySpecialGammaln,
  universalPythonCommandSeed,
  universalPythonCommandSetBrightness,
  universalPythonCommandSetLocaltime,
  universalPythonCommandSetPixel,
  universalPythonCommandSetRTCmode,
  universalPythonCommandShow,
  universalPythonCommandSin,
  universalPythonCommandSinComplex,
  universalPythonCommandSingleQuote,
  universalPythonCommandSinh,
  universalPythonCommandSleep,
  universalPythonCommandSort,
  universalPythonCommandSortWithoutArg,
  universalPythonCommandSorted,
  universalPythonCommandSqrt,
  universalPythonCommandSqrtComplex,
  universalPythonCommandSum,
  universalPythonCommandSymbolExp,
  universalPythonCommandTab,
  universalPythonCommandTan,
  universalPythonCommandTanh,
  universalPythonCommandText,
  universalPythonCommandTime,
  universalPythonCommandTimeFunction,
  universalPythonCommandTimeFunctionWithoutArg,
  universalPythonCommandTrunc,
  universalPythonCommandTurtleFunction,
  universalPythonCommandTurtleFunctionWithoutArg,
  universalPythonCommandUniform,
  universalPythonCommandUtilsFromInt16Buffer,
  universalPythonCommandUtilsFromInt32Buffer,
  universalPythonCommandUtilsFromUint16Buffer,
  universalPythonCommandUtilsFromUint32Buffer,
  universalPythonCommandUtilsFunction,
  universalPythonCommandUtilsFunctionWithoutArg,
  universalPythonCommandUtilsSpectrogram,
  universalPythonCommandVerticalBar,
  universalPythonConstantE,
  universalPythonConstantPi,
  universalPythonOsCommandGetlogin,
  universalPythonOsCommandListdir,
  universalPythonOsCommandRemove,
  universalPythonOsCommandRemoveWithoutArg,
  universalPythonOsCommandRename,
  universalPythonOsCommandRenameWithoutArg,
  universalPythonOsCommandUname,
  universalPythonSysCommandByteorder,
  universalPythonSysCommandExit,
  universalPythonSysCommandImplementation,
  universalPythonSysCommandModules,
  universalPythonSysCommandPrintexception,
  universalPythonSysCommandPrintexceptionWithoutArg,
  universalPythonSysCommandVersion,
  universalPythonSysCommandVersioninfo,
  universalPythonTurtleCommandBackward,
  universalPythonTurtleCommandCircle,
  universalPythonTurtleCommandColor,
  universalPythonTurtleCommandColorMode,
  universalPythonTurtleCommandForward,
  universalPythonTurtleCommandGoto,
  universalPythonTurtleCommandHeading,
  universalPythonTurtleCommandHideturtle,
  universalPythonTurtleCommandIsdown,
  universalPythonTurtleCommandLeft,
  universalPythonTurtleCommandPendown,
  universalPythonTurtleCommandPensize,
  universalPythonTurtleCommandPenup,
  universalPythonTurtleCommandPosition,
  universalPythonTurtleCommandReset,
  universalPythonTurtleCommandRight,
  universalPythonTurtleCommandSetheading,
  universalPythonTurtleCommandShowturtle,
  universalPythonTurtleCommandSpeed,
  universalPythonTurtleCommandWrite,
  universalQuadraticRegressionFormula,
  universalQuarticRegressionFormula,
  universalQuentinGuidee,
  universalQuoCommandWithArg,
  universalR,
  universalRad,
  universalRandintCommandWithArg,
  universalRandomCommandWithArg,
  universalRandomModule,
  universalReCommandWithArg,
  universalReducedRowEchelonFormCommandWithArg,
  universalReg,
  universalRemCommandWithArg,
  universalRightIntegralFirstLegend,
  universalRightIntegralSecondLegend,
  universalRootCommandWithArg,
  universalRoundCommandWithArg,
  universalRowEchelonFormCommandWithArg,
  universalRstvt_Air,
  universalRstvt_Aluminium,
  universalRstvt_Calcium,
  universalRstvt_Cobalt,
  universalRstvt_Copper,
  universalRstvt_Glass,
  universalRstvt_Gold,
  universalRstvt_Iron,
  universalRstvt_Lithium,
  universalRstvt_Nickel,
  universalRstvt_Platinum,
  universalRstvt_Sea_water,
  universalRstvt_Silver,
  universalRstvt_Tin,
  universalRstvt_Tungsten,
  universalRstvt_Water,
  universalRstvt_Wood,
  universalRstvt_Zinc,
  universalRydbergConstant,
  universalSandraSimmons,
  universalScipyLinalgModule,
  universalScipyModule,
  universalScipyOptimizeModule,
  universalScipySignalModule,
  universalScipySpecialModule,
  universalShift,
  universalSigma,
  universalSinhCommandWithArg,
  universalSortCommandWithArg,
  universalSpeedOfLight,
  universalSpeedOfSound0,
  universalSpeedOfSoundGlass,
  universalSpeedOfSoundSteel,
  universalSpeedOfSoundWater,
  universalStefanBoltzmann,
  universalStudent,
  universalSumCommand,
  universalSumCommandWithArg,
  universalSunMass,
  universalSunRadius,
  universalSuperiorCondition,
  universalSuperiorConditionWithArg,
  universalSuperiorStrictCondition,
  universalSuperiorStrictConditionWithArg,
  universalSxy,
  universalSysModule,
  universalSzaboLevente,
  universalT,
  universalTMax,
  universalTMin,
  universalTanhCommandWithArg,
  universalTauonMass,
  universalTheta,
  universalThetaMax,
  universalThetaMin,
  universalTimeModule,
  universalTraceCommandWithArg,
  universalTransposeCommandWithArg,
  universalTrigonometricRegressionFormula,
  universalTryExcept1Error,
  universalTryExcept1ErrorElse,
  universalTryExcept1ErrorElseWithArg,
  universalTryExcept1ErrorWithArg,
  universalTryExcept2Error,
  universalTryExcept2ErrorWithArg,
  universalTurtleModule,
  universalURL,
  universalUSBAppCapital,
  universalUlabDocumentationLink,
  universalUlabModule,
  universalUltimateAnswer,
  universalUltimateAnswerValue,
  universalUnitAmountMoleMicroSymbol,
  universalUnitAmountMoleMilliSymbol,
  universalUnitAmountMoleSymbol,
  universalUnitCapacitanceFarad,
  universalUnitCapacitanceFaradMicroSymbol,
  universalUnitCapacitanceFaradMilliSymbol,
  universalUnitCapacitanceFaradSymbol,
  universalUnitChargeCoulomb,
  universalUnitChargeCoulombSymbol,
  universalUnitConductanceSiemens,
  universalUnitConductanceSiemensMilliSymbol,
  universalUnitConductanceSiemensSymbol,
  universalUnitCurrentAmpereMicroSymbol,
  universalUnitCurrentAmpereMilliSymbol,
  universalUnitCurrentAmpereSymbol,
  universalUnitDistanceAstronomicalUnitSymbol,
  universalUnitDistanceFootSymbol,
  universalUnitDistanceInchSymbol,
  universalUnitDistanceLightYearSymbol,
  universalUnitDistanceMeterKiloSymbol,
  universalUnitDistanceMeterMicroSymbol,
  universalUnitDistanceMeterMilliSymbol,
  universalUnitDistanceMeterNanoSymbol,
  universalUnitDistanceMeterPicoSymbol,
  universalUnitDistanceMeterSymbol,
  universalUnitDistanceMileSymbol,
  universalUnitDistanceParsecSymbol,
  universalUnitDistanceYardSymbol,
  universalUnitEnergyElectronVoltKiloSymbol,
  universalUnitEnergyElectronVoltMegaSymbol,
  universalUnitEnergyElectronVoltMilliSymbol,
  universalUnitEnergyElectronVoltSymbol,
  universalUnitEnergyJoule,
  universalUnitEnergyJouleKilo,
  universalUnitEnergyJouleKiloSymbol,
  universalUnitEnergyJouleMenu,
  universalUnitEnergyJouleMilliSymbol,
  universalUnitEnergyJouleSymbol,
  universalUnitForceNewton,
  universalUnitForceNewtonKilo,
  universalUnitForceNewtonKiloSymbol,
  universalUnitForceNewtonMilliSymbol,
  universalUnitForceNewtonSymbol,
  universalUnitFrequencyHertz,
  universalUnitFrequencyHertzGiga,
  universalUnitFrequencyHertzGigaSymbol,
  universalUnitFrequencyHertzKilo,
  universalUnitFrequencyHertzKiloSymbol,
  universalUnitFrequencyHertzMegaSymbol,
  universalUnitFrequencyHertzSymbol,
  universalUnitIlluminanceLuxSymbol,
  universalUnitInductanceHenry,
  universalUnitInductanceHenrySymbol,
  universalUnitLuminousFluxLumenSymbol,
  universalUnitLuminousIntensityCandela,
  universalUnitLuminousIntensityCandelaSymbol,
  universalUnitMagneticFieldTesla,
  universalUnitMagneticFieldTeslaSymbol,
  universalUnitMassGramKiloSymbol,
  universalUnitMassGramMicroSymbol,
  universalUnitMassGramMilliSymbol,
  universalUnitMassGramSymbol,
  universalUnitMassLongTonSymbol,
  universalUnitMassOunceSymbol,
  universalUnitMassPoundSymbol,
  universalUnitMassShortTonSymbol,
  universalUnitMassTonneSymbol,
  universalUnitPotentialVolt,
  universalUnitPotentialVoltKilo,
  universalUnitPotentialVoltKiloSymbol,
  universalUnitPotentialVoltMicroSymbol,
  universalUnitPotentialVoltMilliSymbol,
  universalUnitPotentialVoltSymbol,
  universalUnitPowerWatt,
  universalUnitPowerWattGiga,
  universalUnitPowerWattGigaSymbol,
  universalUnitPowerWattKilo,
  universalUnitPowerWattKiloSymbol,
  universalUnitPowerWattMegaSymbol,
  universalUnitPowerWattMicroSymbol,
  universalUnitPowerWattMilliSymbol,
  universalUnitPowerWattSymbol,
  universalUnitPressureAtmSymbol,
  universalUnitPressureBar,
  universalUnitPressureBarSymbol,
  universalUnitPressurePascal,
  universalUnitPressurePascalHectoSymbol,
  universalUnitPressurePascalSymbol,
  universalUnitResistanceOhm,
  universalUnitResistanceOhmKilo,
  universalUnitResistanceOhmKiloSymbol,
  universalUnitResistanceOhmSymbol,
  universalUnitSolidAngleSteradianSymbol,
  universalUnitSurfaceAcreSymbol,
  universalUnitSurfaceHectarSymbol,
  universalUnitTemperatureCelsius,
  universalUnitTemperatureCelsiusSymbol,
  universalUnitTemperatureFahrenheit,
  universalUnitTemperatureFahrenheitSymbol,
  universalUnitTemperatureKelvin,
  universalUnitTemperatureKelvinSymbol,
  universalUnitTimeDaySymbol,
  universalUnitTimeHourSymbol,
  universalUnitTimeMinuteSymbol,
  universalUnitTimeMonthSymbol,
  universalUnitTimeSecondMicroSymbol,
  universalUnitTimeSecondMilliSymbol,
  universalUnitTimeSecondNanoSymbol,
  universalUnitTimeSecondSymbol,
  universalUnitTimeWeekSymbol,
  universalUnitTimeYearSymbol,
  universalUnitVolumeCupSymbol,
  universalUnitVolumeFluidOunceSymbol,
  universalUnitVolumeGallonSymbol,
  universalUnitVolumeLiterCentiSymbol,
  universalUnitVolumeLiterDeciSymbol,
  universalUnitVolumeLiterMilliSymbol,
  universalUnitVolumeLiterSymbol,
  universalUnitVolumePintSymbol,
  universalUnitVolumeQuartSymbol,
  universalUnitVolumeTablespoonSymbol,
  universalUnitVolumeTeaspoonSymbol,
  universalUsbSetting,
  universalUtilsModule,
  universalVacuumImpedance,
  universalVacuum_permeability,
  universalVacuum_permittivity,
  universalVenceslasDuet,
  universalVictorKretz,
  universalWBosonMass,
  universalWaterTriplePoint,
  universalWhileLoop,
  universalWhileLoopMenu,
  universalWhileLoopWithArg,
  universalWien,
  universalWithInstruction,
  universalWithInstructionWithArg,
  universalX,
  universalXMax,
  universalXMin,
  universalY,
  universalYMax,
  universalYMin,
  universalYannCouturier,
  universalZBosonMass,
};

constexpr static char enAbout[] = "About";
constexpr static char frAbout[] = "A propos";
constexpr static char nlAbout[] = "Over deze rekenmachine";
constexpr static char ptAbout[] = "Acerca";
constexpr static char itAbout[] = "Informazioni su";
constexpr static char deAbout[] = "Uber";
constexpr static char esAbout[] = "Acerca";
constexpr static char huAbout[] = "Apropó";
constexpr static char enAboutWarning1[] = "Caution: you're using an";
constexpr static char frAboutWarning1[] = "Attention, vous utilisez une version";
constexpr static char nlAboutWarning1[] = "Let op: je gebruikt een";
constexpr static char ptAboutWarning1[] = "Cuidado: está a usar uma";
constexpr static char itAboutWarning1[] = "Attenzione, voi utilizzate una versione";
constexpr static char deAboutWarning1[] = "Caution: you're using an";
constexpr static char esAboutWarning1[] = "Caution: you're using an";
constexpr static char huAboutWarning1[] = "Vigyázat: a használt szoftver";
constexpr static char enAboutWarning2[] = "unofficial software version.";
constexpr static char frAboutWarning2[] = "non officielle du logiciel. NumWorks";
constexpr static char nlAboutWarning2[] = "onofficiële softwareversie.";
constexpr static char ptAboutWarning2[] = "versão não oficial do software.";
constexpr static char itAboutWarning2[] = "non ufficiale del software. NumWorks";
constexpr static char deAboutWarning2[] = "unofficial software version.";
constexpr static char esAboutWarning2[] = "unofficial software version.";
constexpr static char huAboutWarning2[] = "nem hivatalos. A NumWorks nem";
constexpr static char enAboutWarning3[] = "NumWorks can't be held responsible";
constexpr static char frAboutWarning3[] = "ne saurait être tenu responsable des";
constexpr static char nlAboutWarning3[] = "NumWorks is niet verantwoordelijk";
constexpr static char ptAboutWarning3[] = "A NumWorks não pode ser responsável";
constexpr static char itAboutWarning3[] = "non potrà essere ritenuto responsabile dei";
constexpr static char deAboutWarning3[] = "NumWorks can't be held responsible";
constexpr static char esAboutWarning3[] = "NumWorks can't be held responsible";
constexpr static char huAboutWarning3[] = "vállal felelösséget az";
constexpr static char enAboutWarning4[] = "for any resulting damage.";
constexpr static char frAboutWarning4[] = "problèmes que cela pourrait entraîner.";
constexpr static char nlAboutWarning4[] = "voor mogelijke resulterende schade";
constexpr static char ptAboutWarning4[] = "por qualquer dano resultante.";
constexpr static char itAboutWarning4[] = "problemi che questo potrebbe comportare.";
constexpr static char deAboutWarning4[] = "for any resulting damage.";
constexpr static char esAboutWarning4[] = "for any resulting damage.";
constexpr static char huAboutWarning4[] = "esetleges károkért.";
constexpr static char enAbsoluteValue[] = "Absolute value";
constexpr static char frAbsoluteValue[] = "Valeur absolue";
constexpr static char nlAbsoluteValue[] = "Absolute waarde";
constexpr static char ptAbsoluteValue[] = "Valor absoluto";
constexpr static char itAbsoluteValue[] = "Valore assoluto";
constexpr static char deAbsoluteValue[] = "Betragsfunktion";
constexpr static char esAbsoluteValue[] = "Valor absoluto";
constexpr static char huAbsoluteValue[] = "Abszolút érték";
constexpr static char enAccessibility[] = "Accessibility";
constexpr static char frAccessibility[] = "Accessibilité";
constexpr static char nlAccessibility[] = "Accessibility";
constexpr static char ptAccessibility[] = "Acessibilidade";
constexpr static char itAccessibility[] = "Accessibility";
constexpr static char deAccessibility[] = "Barrierefreiheit";
constexpr static char esAccessibility[] = "Accesibilidad";
constexpr static char huAccessibility[] = "Több vizuális beállitások";
constexpr static char enAccessibilityGamma[] = "Gamma correction";
constexpr static char frAccessibilityGamma[] = "Correction gamma";
constexpr static char nlAccessibilityGamma[] = "Gamma correction";
constexpr static char ptAccessibilityGamma[] = "Correção gama";
constexpr static char itAccessibilityGamma[] = "Gamma correction";
constexpr static char deAccessibilityGamma[] = "Gammakorrektur";
constexpr static char esAccessibilityGamma[] = "Corrección gamma";
constexpr static char huAccessibilityGamma[] = "Gamma korrekció";
constexpr static char enAccessibilityGammaBlue[] = "Blue gamma";
constexpr static char frAccessibilityGammaBlue[] = "Gamma bleu";
constexpr static char nlAccessibilityGammaBlue[] = "Blue gamma";
constexpr static char ptAccessibilityGammaBlue[] = "Gama azul";
constexpr static char itAccessibilityGammaBlue[] = "Blue gamma";
constexpr static char deAccessibilityGammaBlue[] = "Blaues Gamma";
constexpr static char esAccessibilityGammaBlue[] = "Gamma azul";
constexpr static char huAccessibilityGammaBlue[] = "Kék gamma";
constexpr static char enAccessibilityGammaGreen[] = "Green gamma";
constexpr static char frAccessibilityGammaGreen[] = "Gamma vert";
constexpr static char nlAccessibilityGammaGreen[] = "Green gamma";
constexpr static char ptAccessibilityGammaGreen[] = "Gama verde";
constexpr static char itAccessibilityGammaGreen[] = "Green gamma";
constexpr static char deAccessibilityGammaGreen[] = "Grünes Gamma";
constexpr static char esAccessibilityGammaGreen[] = "Gamma verde";
constexpr static char huAccessibilityGammaGreen[] = "Zöld gamma";
constexpr static char enAccessibilityGammaRed[] = "Red gamma";
constexpr static char frAccessibilityGammaRed[] = "Gamma rouge";
constexpr static char nlAccessibilityGammaRed[] = "Red gamma";
constexpr static char ptAccessibilityGammaRed[] = "Gama vermelha";
constexpr static char itAccessibilityGammaRed[] = "Red gamma";
constexpr static char deAccessibilityGammaRed[] = "Rotes Gamma";
constexpr static char esAccessibilityGammaRed[] = "Gamma roja";
constexpr static char huAccessibilityGammaRed[] = "Piros gamma";
constexpr static char enAccessibilityInvertColors[] = "Invert colors";
constexpr static char frAccessibilityInvertColors[] = "Inverser couleurs";
constexpr static char nlAccessibilityInvertColors[] = "Invert colors";
constexpr static char ptAccessibilityInvertColors[] = "Cores invertidas";
constexpr static char itAccessibilityInvertColors[] = "Invert colors";
constexpr static char deAccessibilityInvertColors[] = "Farbumkehrung";
constexpr static char esAccessibilityInvertColors[] = "Colores invertidos";
constexpr static char huAccessibilityInvertColors[] = "Invertált színek";
constexpr static char enAccessibilityMagnify[] = "Magnify";
constexpr static char frAccessibilityMagnify[] = "Loupe";
constexpr static char nlAccessibilityMagnify[] = "Magnify";
constexpr static char ptAccessibilityMagnify[] = "Lupa";
constexpr static char itAccessibilityMagnify[] = "Magnify";
constexpr static char deAccessibilityMagnify[] = "Lupe";
constexpr static char esAccessibilityMagnify[] = "Lupa";
constexpr static char huAccessibilityMagnify[] = "Nagyító";
constexpr static char enActivateClock[] = "Activate clock";
constexpr static char frActivateClock[] = "Activer horloge";
constexpr static char nlActivateClock[] = "Activate clock";
constexpr static char ptActivateClock[] = "Activate clock";
constexpr static char itActivateClock[] = "Activate clock";
constexpr static char deActivateClock[] = "Uhr aktivieren";
constexpr static char esActivateClock[] = "Activar el reloj";
constexpr static char huActivateClock[] = "Ora bekapcsolása";
constexpr static char enActivateDeactivate[] = "Turn on/off";
constexpr static char frActivateDeactivate[] = "Activer/Désactiver";
constexpr static char nlActivateDeactivate[] = "Zet aan/uit";
constexpr static char ptActivateDeactivate[] = "Ativar/Desativar";
constexpr static char itActivateDeactivate[] = "Attivare/Disattivare";
constexpr static char deActivateDeactivate[] = "Aktivieren/Deaktivieren";
constexpr static char esActivateDeactivate[] = "Activar/Desactivar";
constexpr static char huActivateDeactivate[] = "Ki/Be kapcsolás";
constexpr static char enActivateExamMode[] = "Activate exam mode";
constexpr static char frActivateExamMode[] = "Activer le mode examen";
constexpr static char nlActivateExamMode[] = "Internationale examenst.";
constexpr static char ptActivateExamMode[] = "Ativar o modo de exame";
constexpr static char itActivateExamMode[] = "Attiva modalità d'esame";
constexpr static char deActivateExamMode[] = "Prüfungsmodus starten";
constexpr static char esActivateExamMode[] = "Activar el modo examen";
constexpr static char huActivateExamMode[] = "A vizsgálati mód aktiválása";
constexpr static char enActiveExamModeMessage1[] = "All your data will be ";
constexpr static char frActiveExamModeMessage1[] = "Toutes vos données seront ";
constexpr static char nlActiveExamModeMessage1[] = "Al je gegevens worden ";
constexpr static char ptActiveExamModeMessage1[] = "Todos os seus dados serão ";
constexpr static char itActiveExamModeMessage1[] = "Tutti i tuoi dati saranno ";
constexpr static char deActiveExamModeMessage1[] = "Alle Ihre Daten werden ";
constexpr static char esActiveExamModeMessage1[] = "Todos sus datos se ";
constexpr static char huActiveExamModeMessage1[] = "Az összes adatod";
constexpr static char enActiveExamModeMessage2[] = "deleted when you activate ";
constexpr static char frActiveExamModeMessage2[] = "supprimées si vous activez ";
constexpr static char nlActiveExamModeMessage2[] = "gewist wanneer je de ";
constexpr static char ptActiveExamModeMessage2[] = "apagados se ativar ";
constexpr static char itActiveExamModeMessage2[] = "cancellati se attivi ";
constexpr static char deActiveExamModeMessage2[] = "gelöscht, wenn Sie den ";
constexpr static char esActiveExamModeMessage2[] = "eliminaran al activar ";
constexpr static char huActiveExamModeMessage2[] = "törölve lesz ha";
constexpr static char enActiveExamModeMessage3[] = "the exam mode.";
constexpr static char frActiveExamModeMessage3[] = "le mode examen.";
constexpr static char nlActiveExamModeMessage3[] = "examenstand activeert.";
constexpr static char ptActiveExamModeMessage3[] = "o modo de exame.";
constexpr static char itActiveExamModeMessage3[] = "la modalità d'esame.";
constexpr static char deActiveExamModeMessage3[] = "Prüfungsmodus einschalten.";
constexpr static char esActiveExamModeMessage3[] = "el modo examen.";
constexpr static char huActiveExamModeMessage3[] = "a vizsga módot aktiválja.";
constexpr static char enAddEquation[] = "Add equation";
constexpr static char frAddEquation[] = "Ajouter une équation";
constexpr static char nlAddEquation[] = "Vergelijking toevoegen";
constexpr static char ptAddEquation[] = "Adicione uma equação";
constexpr static char itAddEquation[] = "Aggiungi equazione";
constexpr static char deAddEquation[] = "Gleichung hinzufügen";
constexpr static char esAddEquation[] = "Agregar una ecuación";
constexpr static char huAddEquation[] = "Egyenlet hozzáadás";
constexpr static char enAddFunction[] = "Add function";
constexpr static char frAddFunction[] = "Ajouter une fonction";
constexpr static char nlAddFunction[] = "Functie toevoegen";
constexpr static char ptAddFunction[] = "Adicionar uma função";
constexpr static char itAddFunction[] = "Aggiungi funzione";
constexpr static char deAddFunction[] = "Funktion hinzufügen";
constexpr static char esAddFunction[] = "Agregar una función";
constexpr static char huAddFunction[] = "Funkció hozzáadása";
constexpr static char enAddScript[] = "Add a script";
constexpr static char frAddScript[] = "Ajouter un script";
constexpr static char nlAddScript[] = "Script toevoegen";
constexpr static char ptAddScript[] = "Adicionar um script";
constexpr static char itAddScript[] = "Aggiungere script";
constexpr static char deAddScript[] = "Skript hinzufügen";
constexpr static char esAddScript[] = "Agregar un archivo";
constexpr static char huAddScript[] = "Script hozzáadása";
constexpr static char enAddSequence[] = "Add sequence";
constexpr static char frAddSequence[] = "Ajouter une suite";
constexpr static char nlAddSequence[] = "Rij toevoegen";
constexpr static char ptAddSequence[] = "Adicionar uma sequência";
constexpr static char itAddSequence[] = "Aggiungi successione";
constexpr static char deAddSequence[] = "Folge hinzufügen";
constexpr static char esAddSequence[] = "Agregar una sucesión";
constexpr static char huAddSequence[] = "Szekvencia hozzáadása";
constexpr static char enAdditionalDeterminant[] = "Determinant";
constexpr static char frAdditionalDeterminant[] = "Déterminant";
constexpr static char nlAdditionalDeterminant[] = "Determinant";
constexpr static char ptAdditionalDeterminant[] = "Determinante";
constexpr static char itAdditionalDeterminant[] = "Determinante";
constexpr static char deAdditionalDeterminant[] = "Determinante";
constexpr static char esAdditionalDeterminant[] = "Determinante";
constexpr static char huAdditionalDeterminant[] = "Meghatározó";
constexpr static char enAdditionalInverse[] = "Inverse";
constexpr static char frAdditionalInverse[] = "Inverse";
constexpr static char nlAdditionalInverse[] = "Inverse";
constexpr static char ptAdditionalInverse[] = "Matriz inversa";
constexpr static char itAdditionalInverse[] = "Inversa";
constexpr static char deAdditionalInverse[] = "Inverse";
constexpr static char esAdditionalInverse[] = "Inversa";
constexpr static char huAdditionalInverse[] = "inverz";
constexpr static char enAdditionalReducedRowEchelonForm[] = "Reduced row echelon form";
constexpr static char frAdditionalReducedRowEchelonForm[] = "Forme échelonnée réduite";
constexpr static char nlAdditionalReducedRowEchelonForm[] = "Gereduceerde echelonvorm";
constexpr static char ptAdditionalReducedRowEchelonForm[] = "Matriz escalonada reduzida";
constexpr static char itAdditionalReducedRowEchelonForm[] = "Matrice ridotta a scalini";
constexpr static char deAdditionalReducedRowEchelonForm[] = "Reduzierte Stufenform";
constexpr static char esAdditionalReducedRowEchelonForm[] = "Matriz escalonada reducida";
constexpr static char huAdditionalReducedRowEchelonForm[] = "Csökkentett sorú Echelon forma";
constexpr static char enAdditionalResults[] = "Additional results";
constexpr static char frAdditionalResults[] = "Résultats complémentaires";
constexpr static char nlAdditionalResults[] = "Aanvullende resultaten";
constexpr static char ptAdditionalResults[] = "Resultados adicionais";
constexpr static char itAdditionalResults[] = "Risultati complementari";
constexpr static char deAdditionalResults[] = "Weitere Ergebnisse";
constexpr static char esAdditionalResults[] = "Resultados adicionales";
constexpr static char huAdditionalResults[] = "További eredmények";
constexpr static char enAdditionalRowEchelonForm[] = "Row echelon form";
constexpr static char frAdditionalRowEchelonForm[] = "Forme échelonnée";
constexpr static char nlAdditionalRowEchelonForm[] = "Echelonvorm";
constexpr static char ptAdditionalRowEchelonForm[] = "Matriz escalonada";
constexpr static char itAdditionalRowEchelonForm[] = "Matrice a scalini";
constexpr static char deAdditionalRowEchelonForm[] = "Stufenform";
constexpr static char esAdditionalRowEchelonForm[] = "Matriz escalonada";
constexpr static char huAdditionalRowEchelonForm[] = "Sor echelon forma";
constexpr static char enAdditionalTrace[] = "Trace";
constexpr static char frAdditionalTrace[] = "Trace";
constexpr static char nlAdditionalTrace[] = "Spoor";
constexpr static char ptAdditionalTrace[] = "Traço";
constexpr static char itAdditionalTrace[] = "Traccia";
constexpr static char deAdditionalTrace[] = "Spur";
constexpr static char esAdditionalTrace[] = "Traza";
constexpr static char huAdditionalTrace[] = "Nyomkövetés";
constexpr static char enAir[] = "Air";
constexpr static char frAir[] = "Air";
constexpr static char nlAir[] = "Lucht";
constexpr static char ptAir[] = "Ar";
constexpr static char itAir[] = "Aria";
constexpr static char deAir[] = "Luft";
constexpr static char esAir[] = "Aire";
constexpr static char huAir[] = "Air";
constexpr static char enAllowedCharactersAZaz09[] = "Allowed characters: A.Z, a..z, 0..9, _";
constexpr static char frAllowedCharactersAZaz09[] = "Caractères autorisés : A..Z, a..z, 0..9, _";
constexpr static char nlAllowedCharactersAZaz09[] = "Toegestane tekens: A-Z, a-z, 0-9, _";
constexpr static char ptAllowedCharactersAZaz09[] = "Caracteres permitidos : A..Z, a..z, 0..9, _";
constexpr static char itAllowedCharactersAZaz09[] = "Caratteri consentiti : A-Z, a-z, 0-9, _";
constexpr static char deAllowedCharactersAZaz09[] = "Erlaubt: A..Z, a..z, 0..9, _";
constexpr static char esAllowedCharactersAZaz09[] = "Caracteres permitidos : A..Z, a..z, 0..9, _";
constexpr static char huAllowedCharactersAZaz09[] = "Engedélyezett karakterek: A..Z, a..z, 0..9, _";
constexpr static char enAllowedCharactersaz09[] = "Allowed characters: a-z, 0-9, _";
constexpr static char frAllowedCharactersaz09[] = "Caractères autorisés : a-z, 0-9, _";
constexpr static char nlAllowedCharactersaz09[] = "Toegestane tekens: a-z, 0-9, _";
constexpr static char ptAllowedCharactersaz09[] = "Caracteres permitidos : a-z, 0-9, _";
constexpr static char itAllowedCharactersaz09[] = "Caratteri consentiti : a-z, 0-9, _";
constexpr static char deAllowedCharactersaz09[] = "Erlaubte Zeichen: a-z, 0-9, _";
constexpr static char esAllowedCharactersaz09[] = "Caracteres permitidos : a-z, 0-9, _";
constexpr static char huAllowedCharactersaz09[] = "Engedélyezett karakterek: a-z, 0-9, _";
constexpr static char enAlphaElementAc[] = "Ac - Actinium (89)";
constexpr static char frAlphaElementAc[] = "Ac - Actinium (89)";
constexpr static char nlAlphaElementAc[] = "Ac - Actinium (89)";
constexpr static char ptAlphaElementAc[] = "Ac - Actínio (89)";
constexpr static char itAlphaElementAc[] = "Ac - Actinium (89)";
constexpr static char deAlphaElementAc[] = "Ac - Aktinium (89)";
constexpr static char esAlphaElementAc[] = "Ac - Actinio (89)";
constexpr static char huAlphaElementAc[] = "Ac - Aktinium (89)";
constexpr static char enAlphaElementAg[] = "Ag - Money (47)";
constexpr static char frAlphaElementAg[] = "Ag - Argent (47)";
constexpr static char nlAlphaElementAg[] = "Ag - Money (47)";
constexpr static char ptAlphaElementAg[] = "Ag - Dinheiro (47)";
constexpr static char itAlphaElementAg[] = "Ag - Money (47)";
constexpr static char deAlphaElementAg[] = "Ag - Geld (47)";
constexpr static char esAlphaElementAg[] = "Ag - Dinero (47)";
constexpr static char huAlphaElementAg[] = "Ag - Pénz (47)";
constexpr static char enAlphaElementAl[] = "Al - Aluminum (13)";
constexpr static char frAlphaElementAl[] = "Al - Aluminium (13)";
constexpr static char nlAlphaElementAl[] = "Al - Aluminum (13)";
constexpr static char ptAlphaElementAl[] = "Al - Alumínio (13)";
constexpr static char itAlphaElementAl[] = "Al - Aluminum (13)";
constexpr static char deAlphaElementAl[] = "Al - Aluminium (13)";
constexpr static char esAlphaElementAl[] = "Al - Aluminio (13)";
constexpr static char huAlphaElementAl[] = "Al - Alumínium (13)";
constexpr static char enAlphaElementAm[] = "Am - Americium (95)";
constexpr static char frAlphaElementAm[] = "Am - Américium (95)";
constexpr static char nlAlphaElementAm[] = "Am - Americium (95)";
constexpr static char ptAlphaElementAm[] = "Am - Amerício (95)";
constexpr static char itAlphaElementAm[] = "Am - Americium (95)";
constexpr static char deAlphaElementAm[] = "Am - Americium (95)";
constexpr static char esAlphaElementAm[] = "Am - Americio (95)";
constexpr static char huAlphaElementAm[] = "Am - Americium (95)";
constexpr static char enAlphaElementAr[] = "Ar - Argon (18)";
constexpr static char frAlphaElementAr[] = "Ar - Argon (18)";
constexpr static char nlAlphaElementAr[] = "Ar - Argon (18)";
constexpr static char ptAlphaElementAr[] = "Ar - Argão (18)";
constexpr static char itAlphaElementAr[] = "Ar - Argon (18)";
constexpr static char deAlphaElementAr[] = "Ar - Argon (18)";
constexpr static char esAlphaElementAr[] = "Ar - Argón (18)";
constexpr static char huAlphaElementAr[] = "Ar - Argon (18)";
constexpr static char enAlphaElementAs[] = "As - Arsenic (33)";
constexpr static char frAlphaElementAs[] = "As - Arsenic (33)";
constexpr static char nlAlphaElementAs[] = "As - Arsenic (33)";
constexpr static char ptAlphaElementAs[] = "As - Arsênico (33)";
constexpr static char itAlphaElementAs[] = "As - Arsenic (33)";
constexpr static char deAlphaElementAs[] = "As - Arsen (33)";
constexpr static char esAlphaElementAs[] = "As - Arsénico (33)";
constexpr static char huAlphaElementAs[] = "As - Arzén (33)";
constexpr static char enAlphaElementAt[] = "At - astatine (85)";
constexpr static char frAlphaElementAt[] = "At - Astate (85)";
constexpr static char nlAlphaElementAt[] = "At - astatine (85)";
constexpr static char ptAlphaElementAt[] = "At - Astatine (85)";
constexpr static char itAlphaElementAt[] = "At - astatine (85)";
constexpr static char deAlphaElementAt[] = "At - Astat (85)";
constexpr static char esAlphaElementAt[] = "At - Astato (85)";
constexpr static char huAlphaElementAt[] = "At - Asztatin (85)";
constexpr static char enAlphaElementAu[] = "Au - Gold (79)";
constexpr static char frAlphaElementAu[] = "Au - Or (79)";
constexpr static char nlAlphaElementAu[] = "Au - Gold (79)";
constexpr static char ptAlphaElementAu[] = "Au - Ouro (79)";
constexpr static char itAlphaElementAu[] = "Au - Gold (79)";
constexpr static char deAlphaElementAu[] = "Au - Gold (79)";
constexpr static char esAlphaElementAu[] = "Au - Oro (79)";
constexpr static char huAlphaElementAu[] = "Au - Arany (79)";
constexpr static char enAlphaElementB[] = "B - Boron (5)";
constexpr static char frAlphaElementB[] = "B - Bore (5)";
constexpr static char nlAlphaElementB[] = "B - Boron (5)";
constexpr static char ptAlphaElementB[] = "B - Boro (5)";
constexpr static char itAlphaElementB[] = "B - Boron (5)";
constexpr static char deAlphaElementB[] = "B - Bor (5)";
constexpr static char esAlphaElementB[] = "B - Boro (5)";
constexpr static char huAlphaElementB[] = "B - Bór (5)";
constexpr static char enAlphaElementBa[] = "Ba - Barium (56)";
constexpr static char frAlphaElementBa[] = "Ba - Baryum (56)";
constexpr static char nlAlphaElementBa[] = "Ba - Barium (56)";
constexpr static char ptAlphaElementBa[] = "Ba - Bário (56)";
constexpr static char itAlphaElementBa[] = "Ba - Barium (56)";
constexpr static char deAlphaElementBa[] = "Ba - Barium (56)";
constexpr static char esAlphaElementBa[] = "Ba - Bario (56)";
constexpr static char huAlphaElementBa[] = "Ba - Bárium (56)";
constexpr static char enAlphaElementBe[] = "Be - Beryllium (4)";
constexpr static char frAlphaElementBe[] = "Be - Béryllium (4)";
constexpr static char nlAlphaElementBe[] = "Be - Beryllium (4)";
constexpr static char ptAlphaElementBe[] = "Be - Berílio (4)";
constexpr static char itAlphaElementBe[] = "Be - Beryllium (4)";
constexpr static char deAlphaElementBe[] = "Be - Beryllium (4)";
constexpr static char esAlphaElementBe[] = "Be - Berilio (4)";
constexpr static char huAlphaElementBe[] = "Be - Berillium (4)";
constexpr static char enAlphaElementBh[] = "Bh - Bohrium (107)";
constexpr static char frAlphaElementBh[] = "Bh - Bohrium (107)";
constexpr static char nlAlphaElementBh[] = "Bh - Bohrium (107)";
constexpr static char ptAlphaElementBh[] = "Bh - Bohrium (107)";
constexpr static char itAlphaElementBh[] = "Bh - Bohrium (107)";
constexpr static char deAlphaElementBh[] = "Bh - Bohrium (107)";
constexpr static char esAlphaElementBh[] = "Bh - Bohrio (107)";
constexpr static char huAlphaElementBh[] = "Bh - Bohrium (107)";
constexpr static char enAlphaElementBi[] = "Bi - Bismuth (83)";
constexpr static char frAlphaElementBi[] = "Bi - Bismuth (83)";
constexpr static char nlAlphaElementBi[] = "Bi - Bismuth (83)";
constexpr static char ptAlphaElementBi[] = "Bi - Bismuto (83)";
constexpr static char itAlphaElementBi[] = "Bi - Bismuth (83)";
constexpr static char deAlphaElementBi[] = "Bi - Wismut (83)";
constexpr static char esAlphaElementBi[] = "Bi - Bismuto (83)";
constexpr static char huAlphaElementBi[] = "Bi - Bizmut (83)";
constexpr static char enAlphaElementBk[] = "Bk - Berkelium (97)";
constexpr static char frAlphaElementBk[] = "Bk - Berkélium (97)";
constexpr static char nlAlphaElementBk[] = "Bk - Berkelium (97)";
constexpr static char ptAlphaElementBk[] = "Bk - Berkelium (97)";
constexpr static char itAlphaElementBk[] = "Bk - Berkelium (97)";
constexpr static char deAlphaElementBk[] = "Bk - Berkelium (97)";
constexpr static char esAlphaElementBk[] = "Bk - Berkelio (97)";
constexpr static char huAlphaElementBk[] = "Bk - Berkelium (97)";
constexpr static char enAlphaElementBr[] = "Br - Bromine (35)";
constexpr static char frAlphaElementBr[] = "Br - Brome (35)";
constexpr static char nlAlphaElementBr[] = "Br - Bromine (35)";
constexpr static char ptAlphaElementBr[] = "Br - Bromo (35)";
constexpr static char itAlphaElementBr[] = "Br - Bromine (35)";
constexpr static char deAlphaElementBr[] = "Br - Brom (35)";
constexpr static char esAlphaElementBr[] = "Br - Bromo (35)";
constexpr static char huAlphaElementBr[] = "Br - Bróm (35)";
constexpr static char enAlphaElementC[] = "C - Carbon (6)";
constexpr static char frAlphaElementC[] = "C - Carbone (6)";
constexpr static char nlAlphaElementC[] = "C - Carbon (6)";
constexpr static char ptAlphaElementC[] = "C - Carbono (6)";
constexpr static char itAlphaElementC[] = "C - Carbon (6)";
constexpr static char deAlphaElementC[] = "C - Kohlenstoff (6)";
constexpr static char esAlphaElementC[] = "C - Carbono (6)";
constexpr static char huAlphaElementC[] = "C - Szén (6)";
constexpr static char enAlphaElementCa[] = "Ca - Calcium (20)";
constexpr static char frAlphaElementCa[] = "Ca - Calcium (20)";
constexpr static char nlAlphaElementCa[] = "Ca - Calcium (20)";
constexpr static char ptAlphaElementCa[] = "Ca - Cálcio (20)";
constexpr static char itAlphaElementCa[] = "Ca - Calcium (20)";
constexpr static char deAlphaElementCa[] = "Ca - Kalzium (20)";
constexpr static char esAlphaElementCa[] = "Ca - Calcio (20)";
constexpr static char huAlphaElementCa[] = "Ca - Kalcium (20)";
constexpr static char enAlphaElementCd[] = "Cd - Cadmium (48)";
constexpr static char frAlphaElementCd[] = "Cd - Cadmium (48)";
constexpr static char nlAlphaElementCd[] = "Cd - Cadmium (48)";
constexpr static char ptAlphaElementCd[] = "Cd - Cádmio (48)";
constexpr static char itAlphaElementCd[] = "Cd - Cadmium (48)";
constexpr static char deAlphaElementCd[] = "Cd - Cadmium (48)";
constexpr static char esAlphaElementCd[] = "Cd - Cadmio (48)";
constexpr static char huAlphaElementCd[] = "Cd - Kadmium (48)";
constexpr static char enAlphaElementCe[] = "Ce - Cerium (58)";
constexpr static char frAlphaElementCe[] = "Ce - Cérium (58)";
constexpr static char nlAlphaElementCe[] = "Ce - Cerium (58)";
constexpr static char ptAlphaElementCe[] = "Ce - Cério (58)";
constexpr static char itAlphaElementCe[] = "Ce - Cerium (58)";
constexpr static char deAlphaElementCe[] = "Ce - Cer (58)";
constexpr static char esAlphaElementCe[] = "Ce - Cerio (58)";
constexpr static char huAlphaElementCe[] = "Ce - Cerium (58)";
constexpr static char enAlphaElementCf[] = "Cf - Californium (98)";
constexpr static char frAlphaElementCf[] = "Cf - Californium (98)";
constexpr static char nlAlphaElementCf[] = "Cf - Californium (98)";
constexpr static char ptAlphaElementCf[] = "Cf - Californium (98)";
constexpr static char itAlphaElementCf[] = "Cf - Californium (98)";
constexpr static char deAlphaElementCf[] = "Cf - Californium (98)";
constexpr static char esAlphaElementCf[] = "Cf - Californio (98)";
constexpr static char huAlphaElementCf[] = "Cf - Californium (98)";
constexpr static char enAlphaElementCl[] = "Cl - Chlorine (17)";
constexpr static char frAlphaElementCl[] = "Cl - Chlore (17)";
constexpr static char nlAlphaElementCl[] = "Cl - Chlorine (17)";
constexpr static char ptAlphaElementCl[] = "Cl - Cloro (17)";
constexpr static char itAlphaElementCl[] = "Cl - Chlorine (17)";
constexpr static char deAlphaElementCl[] = "Cl - Chlor (17)";
constexpr static char esAlphaElementCl[] = "Cl - Cloro (17)";
constexpr static char huAlphaElementCl[] = "Cl - Klór (17)";
constexpr static char enAlphaElementCm[] = "Cm - Curium (96)";
constexpr static char frAlphaElementCm[] = "Cm - Curium (96)";
constexpr static char nlAlphaElementCm[] = "Cm - Curium (96)";
constexpr static char ptAlphaElementCm[] = "Cm - Curandeiro (96)";
constexpr static char itAlphaElementCm[] = "Cm - Curium (96)";
constexpr static char deAlphaElementCm[] = "Cm - Curium (96)";
constexpr static char esAlphaElementCm[] = "Cm - Curio (96)";
constexpr static char huAlphaElementCm[] = "Cm - Kurium (96)";
constexpr static char enAlphaElementCn[] = "Cn - Copernicium (112)";
constexpr static char frAlphaElementCn[] = "Cn - Copernicium (112)";
constexpr static char nlAlphaElementCn[] = "Cn - Copernicium (112)";
constexpr static char ptAlphaElementCn[] = "Cn - Copernicium (112)";
constexpr static char itAlphaElementCn[] = "Cn - Copernicium (112)";
constexpr static char deAlphaElementCn[] = "Cn - Copernicium (112)";
constexpr static char esAlphaElementCn[] = "Cn - Copernicio (112)";
constexpr static char huAlphaElementCn[] = "Cn - Copernicium (112)";
constexpr static char enAlphaElementCo[] = "Co - Cobalt (27)";
constexpr static char frAlphaElementCo[] = "Co - Cobalt (27)";
constexpr static char nlAlphaElementCo[] = "Co - Cobalt (27)";
constexpr static char ptAlphaElementCo[] = "Co - Cobalto (27)";
constexpr static char itAlphaElementCo[] = "Co - Cobalt (27)";
constexpr static char deAlphaElementCo[] = "Co - Kobalt (27)";
constexpr static char esAlphaElementCo[] = "Co - Cobalto (27)";
constexpr static char huAlphaElementCo[] = "Ko-kobalt (27)";
constexpr static char enAlphaElementCr[] = "Cr - Chromium (24)";
constexpr static char frAlphaElementCr[] = "Cr - Chrome (24)";
constexpr static char nlAlphaElementCr[] = "Cr - Chromium (24)";
constexpr static char ptAlphaElementCr[] = "Cr - Crômio (24)";
constexpr static char itAlphaElementCr[] = "Cr - Chromium (24)";
constexpr static char deAlphaElementCr[] = "Cr - Chrom (24)";
constexpr static char esAlphaElementCr[] = "Cr - Cromo (24)";
constexpr static char huAlphaElementCr[] = "Cr - Króm (24)";
constexpr static char enAlphaElementCs[] = "Cs - cesium (55)";
constexpr static char frAlphaElementCs[] = "Cs - Césium (55)";
constexpr static char nlAlphaElementCs[] = "Cs - cesium (55)";
constexpr static char ptAlphaElementCs[] = "Cs - Césio (55)";
constexpr static char itAlphaElementCs[] = "Cs - cesium (55)";
constexpr static char deAlphaElementCs[] = "Cs - Cäsium (55)";
constexpr static char esAlphaElementCs[] = "Cs - Cesio (55)";
constexpr static char huAlphaElementCs[] = "Cs - Cézium (55)";
constexpr static char enAlphaElementCu[] = "Cu - Copper (29)";
constexpr static char frAlphaElementCu[] = "Cu - Cuivre (29)";
constexpr static char nlAlphaElementCu[] = "Cu - Copper (29)";
constexpr static char ptAlphaElementCu[] = "Cu - Cobre (29)";
constexpr static char itAlphaElementCu[] = "Cu - Copper (29)";
constexpr static char deAlphaElementCu[] = "Cu - Kupfer (29)";
constexpr static char esAlphaElementCu[] = "Cu - Cobre (29)";
constexpr static char huAlphaElementCu[] = "Cu - Réz (29)";
constexpr static char enAlphaElementDb[] = "Db - Dubnium (105)";
constexpr static char frAlphaElementDb[] = "Db - Dubnium (105)";
constexpr static char nlAlphaElementDb[] = "Db - Dubnium (105)";
constexpr static char ptAlphaElementDb[] = "Db - Dubnium (105)";
constexpr static char itAlphaElementDb[] = "Db - Dubnium (105)";
constexpr static char deAlphaElementDb[] = "Db - Dubnium (105)";
constexpr static char esAlphaElementDb[] = "Db - dubnio (105)";
constexpr static char huAlphaElementDb[] = "Db - Dubnium (105)";
constexpr static char enAlphaElementDs[] = "Ds - Darmstadtium (110)";
constexpr static char frAlphaElementDs[] = "Ds - Darmstadtium (110)";
constexpr static char nlAlphaElementDs[] = "Ds - Darmstadtium (110)";
constexpr static char ptAlphaElementDs[] = "Ds - Darmstadtium (110)";
constexpr static char itAlphaElementDs[] = "Ds - Darmstadtium (110)";
constexpr static char deAlphaElementDs[] = "Ds - Darmstadtium (110)";
constexpr static char esAlphaElementDs[] = "Ds - Darmstadtium (110)";
constexpr static char huAlphaElementDs[] = "Ds - Darmstadtium (110)";
constexpr static char enAlphaElementDy[] = "Dy - Dysprosium (66)";
constexpr static char frAlphaElementDy[] = "Dy - Dysprosium (66)";
constexpr static char nlAlphaElementDy[] = "Dy - Dysprosium (66)";
constexpr static char ptAlphaElementDy[] = "Dy - Disprósio (66)";
constexpr static char itAlphaElementDy[] = "Dy - Dysprosium (66)";
constexpr static char deAlphaElementDy[] = "Dy - Dysprosium (66)";
constexpr static char esAlphaElementDy[] = "Dy - Disprosio (66)";
constexpr static char huAlphaElementDy[] = "Dy - Dysprosium (66)";
constexpr static char enAlphaElementEr[] = "Er - Erbium (68)";
constexpr static char frAlphaElementEr[] = "Er - Erbium (68)";
constexpr static char nlAlphaElementEr[] = "Er - Erbium (68)";
constexpr static char ptAlphaElementEr[] = "Er - Erbium (68)";
constexpr static char itAlphaElementEr[] = "Er - Erbium (68)";
constexpr static char deAlphaElementEr[] = "Er - Erbium (68)";
constexpr static char esAlphaElementEr[] = "Er - Erbio (68)";
constexpr static char huAlphaElementEr[] = "Er - Erbium (68)";
constexpr static char enAlphaElementEs[] = "Es - Einsteinium (99)";
constexpr static char frAlphaElementEs[] = "Es - Einsteinium (99)";
constexpr static char nlAlphaElementEs[] = "Es - Einsteinium (99)";
constexpr static char ptAlphaElementEs[] = "Es - Einsteinium (99)";
constexpr static char itAlphaElementEs[] = "Es - Einsteinium (99)";
constexpr static char deAlphaElementEs[] = "Es - Einsteinium (99)";
constexpr static char esAlphaElementEs[] = "Es - Einstenio (99)";
constexpr static char huAlphaElementEs[] = "Es - Einsteinium (99)";
constexpr static char enAlphaElementEu[] = "Eu - Europium (63)";
constexpr static char frAlphaElementEu[] = "Eu - Europium (63)";
constexpr static char nlAlphaElementEu[] = "Eu - Europium (63)";
constexpr static char ptAlphaElementEu[] = "Eu - Európio (63)";
constexpr static char itAlphaElementEu[] = "Eu - Europium (63)";
constexpr static char deAlphaElementEu[] = "Eu - Europium (63)";
constexpr static char esAlphaElementEu[] = "Eu - Europio (63)";
constexpr static char huAlphaElementEu[] = "Eu - Europium (63)";
constexpr static char enAlphaElementF[] = "F - Fluorine (9)";
constexpr static char frAlphaElementF[] = "F - Fluor (9)";
constexpr static char nlAlphaElementF[] = "F - Fluorine (9)";
constexpr static char ptAlphaElementF[] = "F - Flúor (9)";
constexpr static char itAlphaElementF[] = "F - Fluorine (9)";
constexpr static char deAlphaElementF[] = "F - Fluor (9)";
constexpr static char esAlphaElementF[] = "F - Flúor (9)";
constexpr static char huAlphaElementF[] = "F - Fluor (9)";
constexpr static char enAlphaElementFe[] = "Fe - Iron (26)";
constexpr static char frAlphaElementFe[] = "Fe - Fer (26)";
constexpr static char nlAlphaElementFe[] = "Fe - Iron (26)";
constexpr static char ptAlphaElementFe[] = "Fe - Ferro (26)";
constexpr static char itAlphaElementFe[] = "Fe - Iron (26)";
constexpr static char deAlphaElementFe[] = "Fe - Eisen (26)";
constexpr static char esAlphaElementFe[] = "Fe - Hierro (26)";
constexpr static char huAlphaElementFe[] = "Fe - Vas (26)";
constexpr static char enAlphaElementFl[] = "Fl - Flerovium (114)";
constexpr static char frAlphaElementFl[] = "Fl - Flérovium (114)";
constexpr static char nlAlphaElementFl[] = "Fl - Flerovium (114)";
constexpr static char ptAlphaElementFl[] = "Fl - Fleróvio (114)";
constexpr static char itAlphaElementFl[] = "Fl - Flerovium (114)";
constexpr static char deAlphaElementFl[] = "Fl - Flerovium (114)";
constexpr static char esAlphaElementFl[] = "Fl - Flerovium (114)";
constexpr static char huAlphaElementFl[] = "Fl - Flerovium (114)";
constexpr static char enAlphaElementFm[] = "Fm - Fermium (100)";
constexpr static char frAlphaElementFm[] = "Fm - Fermium (100)";
constexpr static char nlAlphaElementFm[] = "Fm - Fermium (100)";
constexpr static char ptAlphaElementFm[] = "Fm - Fermium (100)";
constexpr static char itAlphaElementFm[] = "Fm - Fermium (100)";
constexpr static char deAlphaElementFm[] = "Fm - Fermium (100)";
constexpr static char esAlphaElementFm[] = "Fm - Fermio (100)";
constexpr static char huAlphaElementFm[] = "Fm - Fermium (100)";
constexpr static char enAlphaElementFr[] = "Fr - francium (223)";
constexpr static char frAlphaElementFr[] = "Fr - Francium (223)";
constexpr static char nlAlphaElementFr[] = "Fr - francium (223)";
constexpr static char ptAlphaElementFr[] = "Fr - Francium (223)";
constexpr static char itAlphaElementFr[] = "Fr - francium (223)";
constexpr static char deAlphaElementFr[] = "Fr - Francium (223)";
constexpr static char esAlphaElementFr[] = "Fr - Francio (223)";
constexpr static char huAlphaElementFr[] = "Fr - Francium (223)";
constexpr static char enAlphaElementGa[] = "Ga - Gallium (32)";
constexpr static char frAlphaElementGa[] = "Ga - Gallium (32)";
constexpr static char nlAlphaElementGa[] = "Ga - Gallium (32)";
constexpr static char ptAlphaElementGa[] = "Ga - Gálio (32)";
constexpr static char itAlphaElementGa[] = "Ga - Gallium (32)";
constexpr static char deAlphaElementGa[] = "Ga - Gallium (32)";
constexpr static char esAlphaElementGa[] = "Ga - Galio (32)";
constexpr static char huAlphaElementGa[] = "Ga - Gallium (32)";
constexpr static char enAlphaElementGd[] = "Gd - Gadolinium (64)";
constexpr static char frAlphaElementGd[] = "Gd - Gadolinium (64)";
constexpr static char nlAlphaElementGd[] = "Gd - Gadolinium (64)";
constexpr static char ptAlphaElementGd[] = "Gd - Gadolínio (64)";
constexpr static char itAlphaElementGd[] = "Gd - Gadolinium (64)";
constexpr static char deAlphaElementGd[] = "Gd - Gadolinium (64)";
constexpr static char esAlphaElementGd[] = "Gd - Gadolinio (64)";
constexpr static char huAlphaElementGd[] = "Gd - Gadolinium (64)";
constexpr static char enAlphaElementGe[] = "Ge - Germanium (32)";
constexpr static char frAlphaElementGe[] = "Ge - Germanium (32)";
constexpr static char nlAlphaElementGe[] = "Ge - Germanium (32)";
constexpr static char ptAlphaElementGe[] = "Ge - Germânio (32)";
constexpr static char itAlphaElementGe[] = "Ge - Germanium (32)";
constexpr static char deAlphaElementGe[] = "Ge - Germanium (32)";
constexpr static char esAlphaElementGe[] = "Ge - Germanio (32)";
constexpr static char huAlphaElementGe[] = "Ge - Germánium (32)";
constexpr static char enAlphaElementH[] = "H - Hydrogen (1)";
constexpr static char frAlphaElementH[] = "H - Hydrogène (1)";
constexpr static char nlAlphaElementH[] = "H - Hydrogen (1)";
constexpr static char ptAlphaElementH[] = "H - Hidrogênio (1)";
constexpr static char itAlphaElementH[] = "H - Hydrogen (1)";
constexpr static char deAlphaElementH[] = "H - Wasserstoff (1)";
constexpr static char esAlphaElementH[] = "H - Hidrógeno (1)";
constexpr static char huAlphaElementH[] = "H - hidrogén (1)";
constexpr static char enAlphaElementHe[] = "He - Helium (2)";
constexpr static char frAlphaElementHe[] = "He - Hélium (2)";
constexpr static char nlAlphaElementHe[] = "He - Helium (2)";
constexpr static char ptAlphaElementHe[] = "He - Hélio (2)";
constexpr static char itAlphaElementHe[] = "He - Helium (2)";
constexpr static char deAlphaElementHe[] = "He - Helium (2)";
constexpr static char esAlphaElementHe[] = "He - Helio (2)";
constexpr static char huAlphaElementHe[] = "HE - Hélium (2)";
constexpr static char enAlphaElementHf[] = "Hf - Hafnium (72)";
constexpr static char frAlphaElementHf[] = "Hf - Hafnium (72)";
constexpr static char nlAlphaElementHf[] = "Hf - Hafnium (72)";
constexpr static char ptAlphaElementHf[] = "Hf - Háfnio (72)";
constexpr static char itAlphaElementHf[] = "Hf - Hafnium (72)";
constexpr static char deAlphaElementHf[] = "Hf - Hafnium (72)";
constexpr static char esAlphaElementHf[] = "Hf - Hafnio (72)";
constexpr static char huAlphaElementHf[] = "Hf - Hafnium (72)";
constexpr static char enAlphaElementHg[] = "Hg - Mercury (80)";
constexpr static char frAlphaElementHg[] = "Hg - Mercure (80)";
constexpr static char nlAlphaElementHg[] = "Hg - Mercury (80)";
constexpr static char ptAlphaElementHg[] = "Hg - Mercúrio (80)";
constexpr static char itAlphaElementHg[] = "Hg - Mercury (80)";
constexpr static char deAlphaElementHg[] = "Hg - Quecksilber (80)";
constexpr static char esAlphaElementHg[] = "Hg - Mercurio (80)";
constexpr static char huAlphaElementHg[] = "Hg - Higany (80)";
constexpr static char enAlphaElementHo[] = "Ho - holmium (67)";
constexpr static char frAlphaElementHo[] = "Ho - Holmium (67)";
constexpr static char nlAlphaElementHo[] = "Ho - holmium (67)";
constexpr static char ptAlphaElementHo[] = "Ho - Holmium (67)";
constexpr static char itAlphaElementHo[] = "Ho - holmium (67)";
constexpr static char deAlphaElementHo[] = "Ho - Holmium (67)";
constexpr static char esAlphaElementHo[] = "Ho - Holmio (67)";
constexpr static char huAlphaElementHo[] = "Ho - holmium (67)";
constexpr static char enAlphaElementHs[] = "Hs - Hassium (108)";
constexpr static char frAlphaElementHs[] = "Hs - Hassium (108)";
constexpr static char nlAlphaElementHs[] = "Hs - Hassium (108)";
constexpr static char ptAlphaElementHs[] = "Hs - Hassium (108)";
constexpr static char itAlphaElementHs[] = "Hs - Hassium (108)";
constexpr static char deAlphaElementHs[] = "Hs - Hassium (108)";
constexpr static char esAlphaElementHs[] = "Hs - Hassio (108)";
constexpr static char huAlphaElementHs[] = "Hs - Hassium (108)";
constexpr static char enAlphaElementI[] = "I - Iodine (53)";
constexpr static char frAlphaElementI[] = "I - Iode (53)";
constexpr static char nlAlphaElementI[] = "I - Iodine (53)";
constexpr static char ptAlphaElementI[] = "I - Iodo (53)";
constexpr static char itAlphaElementI[] = "I - Iodine (53)";
constexpr static char deAlphaElementI[] = "I - Jod (53)";
constexpr static char esAlphaElementI[] = "I - Yodo (53)";
constexpr static char huAlphaElementI[] = "I - Jód (53)";
constexpr static char enAlphaElementIn[] = "In - Indium (49)";
constexpr static char frAlphaElementIn[] = "In - Indium (49)";
constexpr static char nlAlphaElementIn[] = "In - Indium (49)";
constexpr static char ptAlphaElementIn[] = "In - Indio (49)";
constexpr static char itAlphaElementIn[] = "In - Indium (49)";
constexpr static char deAlphaElementIn[] = "In - Indium (49)";
constexpr static char esAlphaElementIn[] = "In - Indio (49)";
constexpr static char huAlphaElementIn[] = "In - Indium (49)";
constexpr static char enAlphaElementIr[] = "Ir - Iridium (77)";
constexpr static char frAlphaElementIr[] = "Ir - Iridium (77)";
constexpr static char nlAlphaElementIr[] = "Ir - Iridium (77)";
constexpr static char ptAlphaElementIr[] = "Ir - Irídio (77)";
constexpr static char itAlphaElementIr[] = "Ir - Iridium (77)";
constexpr static char deAlphaElementIr[] = "Ir - Iridium (77)";
constexpr static char esAlphaElementIr[] = "Ir - Iridio (77)";
constexpr static char huAlphaElementIr[] = "Ir - Iridium (77)";
constexpr static char enAlphaElementK[] = "K - Potassium (19)";
constexpr static char frAlphaElementK[] = "K - Potassium (19)";
constexpr static char nlAlphaElementK[] = "K - Potassium (19)";
constexpr static char ptAlphaElementK[] = "K - Potássio (19)";
constexpr static char itAlphaElementK[] = "K - Potassium (19)";
constexpr static char deAlphaElementK[] = "K - Kalium (19)";
constexpr static char esAlphaElementK[] = "K - Potasio (19)";
constexpr static char huAlphaElementK[] = "K - Kálium (19)";
constexpr static char enAlphaElementKr[] = "Kr - Krypton (36)";
constexpr static char frAlphaElementKr[] = "Kr - Krypton (36)";
constexpr static char nlAlphaElementKr[] = "Kr - Krypton (36)";
constexpr static char ptAlphaElementKr[] = "Kr - Criptônio (36)";
constexpr static char itAlphaElementKr[] = "Kr - Krypton (36)";
constexpr static char deAlphaElementKr[] = "Kr - Krypton (36)";
constexpr static char esAlphaElementKr[] = "Kr - Criptón (36)";
constexpr static char huAlphaElementKr[] = "Kr - Krypton (36)";
constexpr static char enAlphaElementLa[] = "La - Lanthanum (57)";
constexpr static char frAlphaElementLa[] = "La - Lanthane (57)";
constexpr static char nlAlphaElementLa[] = "La - Lanthanum (57)";
constexpr static char ptAlphaElementLa[] = "La - Lantânio (57)";
constexpr static char itAlphaElementLa[] = "La - Lanthanum (57)";
constexpr static char deAlphaElementLa[] = "La - Lanthan (57)";
constexpr static char esAlphaElementLa[] = "La - Lantano (57)";
constexpr static char huAlphaElementLa[] = "La - Lanthanum (57)";
constexpr static char enAlphaElementLi[] = "Li - Lithium (3)";
constexpr static char frAlphaElementLi[] = "Li - Lithium (3)";
constexpr static char nlAlphaElementLi[] = "Li - Lithium (3)";
constexpr static char ptAlphaElementLi[] = "Li - Lítio (3)";
constexpr static char itAlphaElementLi[] = "Li - Lithium (3)";
constexpr static char deAlphaElementLi[] = "Li - Lithium (3)";
constexpr static char esAlphaElementLi[] = "Li - Litio (3)";
constexpr static char huAlphaElementLi[] = "Li - lítium (3)";
constexpr static char enAlphaElementLr[] = "Lr - Lawrencium (103)";
constexpr static char frAlphaElementLr[] = "Lr - Lawrencium (103)";
constexpr static char nlAlphaElementLr[] = "Lr - Lawrencium (103)";
constexpr static char ptAlphaElementLr[] = "Lr - Lawrencium (103)";
constexpr static char itAlphaElementLr[] = "Lr - Lawrencium (103)";
constexpr static char deAlphaElementLr[] = "Lr - lawrencium (103)";
constexpr static char esAlphaElementLr[] = "Lr - Lawrencio (103)";
constexpr static char huAlphaElementLr[] = "Lr - Lawrencium (103)";
constexpr static char enAlphaElementLu[] = "Lu - Lutecium (71)";
constexpr static char frAlphaElementLu[] = "Lu - Lutécium (71)";
constexpr static char nlAlphaElementLu[] = "Lu - Lutecium (71)";
constexpr static char ptAlphaElementLu[] = "Lu - Lutécio (71)";
constexpr static char itAlphaElementLu[] = "Lu - Lutecium (71)";
constexpr static char deAlphaElementLu[] = "Lu - Lutetium (71)";
constexpr static char esAlphaElementLu[] = "Lu - Lutecio (71)";
constexpr static char huAlphaElementLu[] = "Lu - Lutecium (71)";
constexpr static char enAlphaElementLv[] = "Lv - Livermorium (116)";
constexpr static char frAlphaElementLv[] = "Lv - Livermorium (116)";
constexpr static char nlAlphaElementLv[] = "Lv - Livermorium (116)";
constexpr static char ptAlphaElementLv[] = "Lv - Livermorium (116)";
constexpr static char itAlphaElementLv[] = "Lv - Livermorium (116)";
constexpr static char deAlphaElementLv[] = "Lv - Livermorium (116)";
constexpr static char esAlphaElementLv[] = "Lv - Livermorium (116)";
constexpr static char huAlphaElementLv[] = "Lv - Livermorium (116)";
constexpr static char enAlphaElementMc[] = "Mc - Moscovium (115)";
constexpr static char frAlphaElementMc[] = "Mc - Moscovium (115)";
constexpr static char nlAlphaElementMc[] = "Mc - Moscovium (115)";
constexpr static char ptAlphaElementMc[] = "Mc - Moscovium (115)";
constexpr static char itAlphaElementMc[] = "Mc - Moscovium (115)";
constexpr static char deAlphaElementMc[] = "Mc - Moscovium (115)";
constexpr static char esAlphaElementMc[] = "Mc - Moscovium (115)";
constexpr static char huAlphaElementMc[] = "Mc - Moscovium (115)";
constexpr static char enAlphaElementMd[] = "Md - Mendélévium (101)";
constexpr static char frAlphaElementMd[] = "Md - Mendélévium (101)";
constexpr static char nlAlphaElementMd[] = "Md - Mendélévium (101)";
constexpr static char ptAlphaElementMd[] = "Md - Mendelevium (101)";
constexpr static char itAlphaElementMd[] = "Md - Mendélévium (101)";
constexpr static char deAlphaElementMd[] = "Md - Mendelevium (101)";
constexpr static char esAlphaElementMd[] = "Md - Mendelevio (101)";
constexpr static char huAlphaElementMd[] = "Md - Mendélévium (101)";
constexpr static char enAlphaElementMg[] = "Mg - Magnesium (12)";
constexpr static char frAlphaElementMg[] = "Mg - Magnésium (12)";
constexpr static char nlAlphaElementMg[] = "Mg - Magnesium (12)";
constexpr static char ptAlphaElementMg[] = "Mg - Magnésio (12)";
constexpr static char itAlphaElementMg[] = "Mg - Magnesium (12)";
constexpr static char deAlphaElementMg[] = "Mg - Magnesium (12)";
constexpr static char esAlphaElementMg[] = "Mg - Magnesio (12)";
constexpr static char huAlphaElementMg[] = "Mg - Magnézium (12)";
constexpr static char enAlphaElementMn[] = "Mn - Manganese (25)";
constexpr static char frAlphaElementMn[] = "Mn - Manganèse (25)";
constexpr static char nlAlphaElementMn[] = "Mn - Manganese (25)";
constexpr static char ptAlphaElementMn[] = "Mn - Manganês (25)";
constexpr static char itAlphaElementMn[] = "Mn - Manganese (25)";
constexpr static char deAlphaElementMn[] = "Mn - Mangan (25)";
constexpr static char esAlphaElementMn[] = "Mn - Manganeso (25)";
constexpr static char huAlphaElementMn[] = "Mn - Mangán (25)";
constexpr static char enAlphaElementMo[] = "Mo - Molybdenum (42)";
constexpr static char frAlphaElementMo[] = "Mo - Molybdène (42)";
constexpr static char nlAlphaElementMo[] = "Mo - Molybdenum (42)";
constexpr static char ptAlphaElementMo[] = "Mo - Molibdênio (42)";
constexpr static char itAlphaElementMo[] = "Mo - Molybdenum (42)";
constexpr static char deAlphaElementMo[] = "Mo - Molybdän (42)";
constexpr static char esAlphaElementMo[] = "Mo - Molibdeno (42)";
constexpr static char huAlphaElementMo[] = "Mo - Molibdén (42)";
constexpr static char enAlphaElementMt[] = "Mt - Meitnerium (109)";
constexpr static char frAlphaElementMt[] = "Mt - Meitnérium (109)";
constexpr static char nlAlphaElementMt[] = "Mt - Meitnerium (109)";
constexpr static char ptAlphaElementMt[] = "Mt - Meitnerium (109)";
constexpr static char itAlphaElementMt[] = "Mt - Meitnerium (109)";
constexpr static char deAlphaElementMt[] = "Mt - Meitnerium (109)";
constexpr static char esAlphaElementMt[] = "Mt - Meitnerio (109)";
constexpr static char huAlphaElementMt[] = "Mt - Meitnerium (109)";
constexpr static char enAlphaElementN[] = "N - Nitrogen (7)";
constexpr static char frAlphaElementN[] = "N - Azote (7)";
constexpr static char nlAlphaElementN[] = "N - Nitrogen (7)";
constexpr static char ptAlphaElementN[] = "N - Azoto (7)";
constexpr static char itAlphaElementN[] = "N - Nitrogen (7)";
constexpr static char deAlphaElementN[] = "N - Stickstoff (7)";
constexpr static char esAlphaElementN[] = "N - Nitrógeno (7)";
constexpr static char huAlphaElementN[] = "N - Nitrogén (7)";
constexpr static char enAlphaElementNa[] = "Na - Sodium (11)";
constexpr static char frAlphaElementNa[] = "Na - Sodium (11)";
constexpr static char nlAlphaElementNa[] = "Na - Sodium (11)";
constexpr static char ptAlphaElementNa[] = "Na - Sódio (11)";
constexpr static char itAlphaElementNa[] = "Na - Sodium (11)";
constexpr static char deAlphaElementNa[] = "Na - Natrium (11)";
constexpr static char esAlphaElementNa[] = "Na - Sodio (11)";
constexpr static char huAlphaElementNa[] = "Na - Nátrium (11)";
constexpr static char enAlphaElementNb[] = "Nb - Niobium (41)";
constexpr static char frAlphaElementNb[] = "Nb - Niobium (41)";
constexpr static char nlAlphaElementNb[] = "Nb - Niobium (41)";
constexpr static char ptAlphaElementNb[] = "Nb - Nióbio (41)";
constexpr static char itAlphaElementNb[] = "Nb - Niobium (41)";
constexpr static char deAlphaElementNb[] = "Nb - Niob (41)";
constexpr static char esAlphaElementNb[] = "Nb - Niobio (41)";
constexpr static char huAlphaElementNb[] = "Nb - Niobium (41)";
constexpr static char enAlphaElementNd[] = "Nd - Neodymium (60)";
constexpr static char frAlphaElementNd[] = "Nd - Néodyme (60)";
constexpr static char nlAlphaElementNd[] = "Nd - Neodymium (60)";
constexpr static char ptAlphaElementNd[] = "Nd - Neodímio (60)";
constexpr static char itAlphaElementNd[] = "Nd - Neodymium (60)";
constexpr static char deAlphaElementNd[] = "Nd - Neodym (60)";
constexpr static char esAlphaElementNd[] = "Nd - Neodimio (60)";
constexpr static char huAlphaElementNd[] = "Nd - Neodímium (60)";
constexpr static char enAlphaElementNe[] = "Ne - Neon (10)";
constexpr static char frAlphaElementNe[] = "Ne - Néon (10)";
constexpr static char nlAlphaElementNe[] = "Ne - Neon (10)";
constexpr static char ptAlphaElementNe[] = "Ne - Néon (10)";
constexpr static char itAlphaElementNe[] = "Ne - Neon (10)";
constexpr static char deAlphaElementNe[] = "Ne - Neon (10)";
constexpr static char esAlphaElementNe[] = "Ne - Neón (10)";
constexpr static char huAlphaElementNe[] = "Ne - Neon (10)";
constexpr static char enAlphaElementNh[] = "Nh - Nihonium (113)";
constexpr static char frAlphaElementNh[] = "Nh - Nihonium (113)";
constexpr static char nlAlphaElementNh[] = "Nh - Nihonium (113)";
constexpr static char ptAlphaElementNh[] = "Nh - Nihonium (113)";
constexpr static char itAlphaElementNh[] = "Nh - Nihonium (113)";
constexpr static char deAlphaElementNh[] = "Nh - Nihonium (113)";
constexpr static char esAlphaElementNh[] = "Nh - Nihonium (113)";
constexpr static char huAlphaElementNh[] = "Nh - Nihónium (113)";
constexpr static char enAlphaElementNi[] = "Ni - Nickel (28)";
constexpr static char frAlphaElementNi[] = "Ni - Nickel (28)";
constexpr static char nlAlphaElementNi[] = "Ni - Nickel (28)";
constexpr static char ptAlphaElementNi[] = "Ni - Níquel (28)";
constexpr static char itAlphaElementNi[] = "Ni - Nickel (28)";
constexpr static char deAlphaElementNi[] = "Ni - Nickel (28)";
constexpr static char esAlphaElementNi[] = "Ni - Níquel (28)";
constexpr static char huAlphaElementNi[] = "Ni - Nickel (28)";
constexpr static char enAlphaElementNo[] = "No - Nobelium (102)";
constexpr static char frAlphaElementNo[] = "No - Nobélium (102)";
constexpr static char nlAlphaElementNo[] = "No - Nobelium (102)";
constexpr static char ptAlphaElementNo[] = "No - Nobelium (102)";
constexpr static char itAlphaElementNo[] = "No - Nobelium (102)";
constexpr static char deAlphaElementNo[] = "No - nobelium (102)";
constexpr static char esAlphaElementNo[] = "No - Nobelio (102)";
constexpr static char huAlphaElementNo[] = "No - Nobelium (102)";
constexpr static char enAlphaElementNp[] = "Np - Neptunium (93)";
constexpr static char frAlphaElementNp[] = "Np - Neptunium (93)";
constexpr static char nlAlphaElementNp[] = "Np - Neptunium (93)";
constexpr static char ptAlphaElementNp[] = "Np - Neptúnio (93)";
constexpr static char itAlphaElementNp[] = "Np - Neptunium (93)";
constexpr static char deAlphaElementNp[] = "Np - Neptunium (93)";
constexpr static char esAlphaElementNp[] = "Np - Neptunio (93)";
constexpr static char huAlphaElementNp[] = "Np - Neptunium (93)";
constexpr static char enAlphaElementO[] = "O - Oxygen (8)";
constexpr static char frAlphaElementO[] = "O - Oxygène (8)";
constexpr static char nlAlphaElementO[] = "O - Oxygen (8)";
constexpr static char ptAlphaElementO[] = "O - Oxigênio (8)";
constexpr static char itAlphaElementO[] = "O - Oxygen (8)";
constexpr static char deAlphaElementO[] = "O - Sauerstoff (8)";
constexpr static char esAlphaElementO[] = "O - Oxígeno (8)";
constexpr static char huAlphaElementO[] = "O - Oxigén (8)";
constexpr static char enAlphaElementOg[] = "Og - Oganesson (118)";
constexpr static char frAlphaElementOg[] = "Og - Oganesson (118)";
constexpr static char nlAlphaElementOg[] = "Og - Oganesson (118)";
constexpr static char ptAlphaElementOg[] = "Og - Oganesson (118)";
constexpr static char itAlphaElementOg[] = "Og - Oganesson (118)";
constexpr static char deAlphaElementOg[] = "Og - Oganesson (118)";
constexpr static char esAlphaElementOg[] = "Og - Oganesson (118)";
constexpr static char huAlphaElementOg[] = "Og - Oganesson (118)";
constexpr static char enAlphaElementOs[] = "Os - Osmium (76)";
constexpr static char frAlphaElementOs[] = "Os - Osmium (76)";
constexpr static char nlAlphaElementOs[] = "Os - Osmium (76)";
constexpr static char ptAlphaElementOs[] = "Os - Osmio (76)";
constexpr static char itAlphaElementOs[] = "Os - Osmium (76)";
constexpr static char deAlphaElementOs[] = "Os - Osmium (76)";
constexpr static char esAlphaElementOs[] = "Os - Osmio (76)";
constexpr static char huAlphaElementOs[] = "Os - Osmium (76)";
constexpr static char enAlphaElementP[] = "P - Phosphorus (15)";
constexpr static char frAlphaElementP[] = "P - Phosphore (15)";
constexpr static char nlAlphaElementP[] = "P - Phosphorus (15)";
constexpr static char ptAlphaElementP[] = "P - Fósforo (15)";
constexpr static char itAlphaElementP[] = "P - Phosphorus (15)";
constexpr static char deAlphaElementP[] = "P - Phosphor (15)";
constexpr static char esAlphaElementP[] = "P - Fósforo (15)";
constexpr static char huAlphaElementP[] = "P - Foszfor (15)";
constexpr static char enAlphaElementPa[] = "Pa - Protactinium (91)";
constexpr static char frAlphaElementPa[] = "Pa - Protactinium (91)";
constexpr static char nlAlphaElementPa[] = "Pa - Protactinium (91)";
constexpr static char ptAlphaElementPa[] = "Pa - Protactínio (91)";
constexpr static char itAlphaElementPa[] = "Pa - Protactinium (91)";
constexpr static char deAlphaElementPa[] = "Pa - Protaktinium (91)";
constexpr static char esAlphaElementPa[] = "Pa - Protactinio (91)";
constexpr static char huAlphaElementPa[] = "Pa - Protactinium (91)";
constexpr static char enAlphaElementPb[] = "Pb - Lead (82)";
constexpr static char frAlphaElementPb[] = "Pb - Plomb (82)";
constexpr static char nlAlphaElementPb[] = "Pb - Lead (82)";
constexpr static char ptAlphaElementPb[] = "Pb - Levar (82)";
constexpr static char itAlphaElementPb[] = "Pb - Lead (82)";
constexpr static char deAlphaElementPb[] = "Pb - führen (82)";
constexpr static char esAlphaElementPb[] = "Pb - Conducir (82)";
constexpr static char huAlphaElementPb[] = "Pb - Olom (82)";
constexpr static char enAlphaElementPd[] = "Pd - Palladium (46)";
constexpr static char frAlphaElementPd[] = "Pd - Palladium (46)";
constexpr static char nlAlphaElementPd[] = "Pd - Palladium (46)";
constexpr static char ptAlphaElementPd[] = "Pd - Paládio (46)";
constexpr static char itAlphaElementPd[] = "Pd - Palladium (46)";
constexpr static char deAlphaElementPd[] = "Pd - Palladium (46)";
constexpr static char esAlphaElementPd[] = "Pd - Paladio (46)";
constexpr static char huAlphaElementPd[] = "Pd - Palládium (46)";
constexpr static char enAlphaElementPm[] = "Pm - Promethium (61)";
constexpr static char frAlphaElementPm[] = "Pm - Prométhium (61)";
constexpr static char nlAlphaElementPm[] = "Pm - Promethium (61)";
constexpr static char ptAlphaElementPm[] = "Pm - Promécio (61)";
constexpr static char itAlphaElementPm[] = "Pm - Promethium (61)";
constexpr static char deAlphaElementPm[] = "Pm - Promethium (61)";
constexpr static char esAlphaElementPm[] = "Pm - Prometeo (61)";
constexpr static char huAlphaElementPm[] = "Pm - Promethium (61)";
constexpr static char enAlphaElementPo[] = "Po - Polonium (84)";
constexpr static char frAlphaElementPo[] = "Po - Polonium (84)";
constexpr static char nlAlphaElementPo[] = "Po - Polonium (84)";
constexpr static char ptAlphaElementPo[] = "Po - Polônio (84)";
constexpr static char itAlphaElementPo[] = "Po - Polonium (84)";
constexpr static char deAlphaElementPo[] = "Po - Polonium (84)";
constexpr static char esAlphaElementPo[] = "Po - Polonio (84)";
constexpr static char huAlphaElementPo[] = "Po - Polónium (84)";
constexpr static char enAlphaElementPr[] = "Pr - praseodymium (59)";
constexpr static char frAlphaElementPr[] = "Pr - Praséodyme (59)";
constexpr static char nlAlphaElementPr[] = "Pr - praseodymium (59)";
constexpr static char ptAlphaElementPr[] = "Pr - Praseodímio (59)";
constexpr static char itAlphaElementPr[] = "Pr - praseodymium (59)";
constexpr static char deAlphaElementPr[] = "Pr - Praseodym (59)";
constexpr static char esAlphaElementPr[] = "Pr - Praseodimio (59)";
constexpr static char huAlphaElementPr[] = "Pr - prazeodímium (59)";
constexpr static char enAlphaElementPt[] = "Pt - Platinum (78)";
constexpr static char frAlphaElementPt[] = "Pt - Platine (78)";
constexpr static char nlAlphaElementPt[] = "Pt - Platinum (78)";
constexpr static char ptAlphaElementPt[] = "Pt - Platina (78)";
constexpr static char itAlphaElementPt[] = "Pt - Platinum (78)";
constexpr static char deAlphaElementPt[] = "Pt - Platin (78)";
constexpr static char esAlphaElementPt[] = "Pt - Platino (78)";
constexpr static char huAlphaElementPt[] = "Pt - platina (78)";
constexpr static char enAlphaElementPu[] = "Pu - Plutonium (94)";
constexpr static char frAlphaElementPu[] = "Pu - Plutonium (94)";
constexpr static char nlAlphaElementPu[] = "Pu - Plutonium (94)";
constexpr static char ptAlphaElementPu[] = "Pu - Plutônio (94)";
constexpr static char itAlphaElementPu[] = "Pu - Plutonium (94)";
constexpr static char deAlphaElementPu[] = "Pu - Plutonium (94)";
constexpr static char esAlphaElementPu[] = "Pu - Plutonio (94)";
constexpr static char huAlphaElementPu[] = "Pu - plutónium (94)";
constexpr static char enAlphaElementRa[] = "Ra - Radium (88)";
constexpr static char frAlphaElementRa[] = "Ra - Radium (88)";
constexpr static char nlAlphaElementRa[] = "Ra - Radium (88)";
constexpr static char ptAlphaElementRa[] = "Ra - Rádio (88)";
constexpr static char itAlphaElementRa[] = "Ra - Radium (88)";
constexpr static char deAlphaElementRa[] = "Ra - Radium (88)";
constexpr static char esAlphaElementRa[] = "Ra - Radio (88)";
constexpr static char huAlphaElementRa[] = "Ra - Rádium (88)";
constexpr static char enAlphaElementRb[] = "Rb - Rubidium (37)";
constexpr static char frAlphaElementRb[] = "Rb - Rubidium (37)";
constexpr static char nlAlphaElementRb[] = "Rb - Rubidium (37)";
constexpr static char ptAlphaElementRb[] = "Rb - Rubídio (37)";
constexpr static char itAlphaElementRb[] = "Rb - Rubidium (37)";
constexpr static char deAlphaElementRb[] = "Rb - Rubidium (37)";
constexpr static char esAlphaElementRb[] = "Rb - Rubidio (37)";
constexpr static char huAlphaElementRb[] = "Rb - Rubídium (37) ";
constexpr static char enAlphaElementRe[] = "Re - Rhenium (75)";
constexpr static char frAlphaElementRe[] = "Re - Rhénium (75)";
constexpr static char nlAlphaElementRe[] = "Re - Rhenium (75)";
constexpr static char ptAlphaElementRe[] = "Re - Rênio (75)";
constexpr static char itAlphaElementRe[] = "Re - Rhenium (75)";
constexpr static char deAlphaElementRe[] = "Re - Rhenium (75)";
constexpr static char esAlphaElementRe[] = "Re - Renio (75)";
constexpr static char huAlphaElementRe[] = "Re - Renium (75)";
constexpr static char enAlphaElementRf[] = "Rf - Rutherfordium (104)";
constexpr static char frAlphaElementRf[] = "Rf - Rutherfordium (104)";
constexpr static char nlAlphaElementRf[] = "Rf - Rutherfordium (104)";
constexpr static char ptAlphaElementRf[] = "Rf - Rutherfordium (104)";
constexpr static char itAlphaElementRf[] = "Rf - Rutherfordium (104)";
constexpr static char deAlphaElementRf[] = "Rf - rutherfordium (104)";
constexpr static char esAlphaElementRf[] = "Rf - Rutherfordio (104)";
constexpr static char huAlphaElementRf[] = "Rf - Rutherfordium (104)";
constexpr static char enAlphaElementRg[] = "Rg - Roentgenium (111)";
constexpr static char frAlphaElementRg[] = "Rg - Roentgenium (111)";
constexpr static char nlAlphaElementRg[] = "Rg - Roentgenium (111)";
constexpr static char ptAlphaElementRg[] = "Rg - Roentgenium (111)";
constexpr static char itAlphaElementRg[] = "Rg - Roentgenium (111)";
constexpr static char deAlphaElementRg[] = "Rg - Roentgenium (111)";
constexpr static char esAlphaElementRg[] = "Rg - Roentgenio (111)";
constexpr static char huAlphaElementRg[] = "Rg - Roentgenium (111)";
constexpr static char enAlphaElementRh[] = "Rh - rhodium (45)";
constexpr static char frAlphaElementRh[] = "Rh - Rhodium (45)";
constexpr static char nlAlphaElementRh[] = "Rh - rhodium (45)";
constexpr static char ptAlphaElementRh[] = "Rh - Ródio (45)";
constexpr static char itAlphaElementRh[] = "Rh - rhodium (45)";
constexpr static char deAlphaElementRh[] = "Rh - Rhodium (45)";
constexpr static char esAlphaElementRh[] = "Rh - Rodio (45)";
constexpr static char huAlphaElementRh[] = "Rh - Ródium (45)";
constexpr static char enAlphaElementRn[] = "Rn - Radon (86)";
constexpr static char frAlphaElementRn[] = "Rn - Radon (86)";
constexpr static char nlAlphaElementRn[] = "Rn - Radon (86)";
constexpr static char ptAlphaElementRn[] = "Rn - Radão (86)";
constexpr static char itAlphaElementRn[] = "Rn - Radon (86)";
constexpr static char deAlphaElementRn[] = "Rn - Radon (86)";
constexpr static char esAlphaElementRn[] = "Rn - Radón (86)";
constexpr static char huAlphaElementRn[] = "Rn - Radon (86)";
constexpr static char enAlphaElementRu[] = "Ru - Ruthenium (44)";
constexpr static char frAlphaElementRu[] = "Ru - Ruthénium (44)";
constexpr static char nlAlphaElementRu[] = "Ru - Ruthenium (44)";
constexpr static char ptAlphaElementRu[] = "Ru - Rutênio (44)";
constexpr static char itAlphaElementRu[] = "Ru - Ruthenium (44)";
constexpr static char deAlphaElementRu[] = "Ru - Ruthenium (44)";
constexpr static char esAlphaElementRu[] = "Ru - Rutenio (44)";
constexpr static char huAlphaElementRu[] = "Ru - Ruténium (44)";
constexpr static char enAlphaElementS[] = "S - Sulfur (16)";
constexpr static char frAlphaElementS[] = "S - Soufre (16)";
constexpr static char nlAlphaElementS[] = "S - Sulfur (16)";
constexpr static char ptAlphaElementS[] = "S - Enxofre (16)";
constexpr static char itAlphaElementS[] = "S - Sulfur (16)";
constexpr static char deAlphaElementS[] = "S - Schwefel (16)";
constexpr static char esAlphaElementS[] = "S - Azufre (16)";
constexpr static char huAlphaElementS[] = "S - Kén (16)";
constexpr static char enAlphaElementSb[] = "Sb - Antimony (51)";
constexpr static char frAlphaElementSb[] = "Sb - Antimoine (51)";
constexpr static char nlAlphaElementSb[] = "Sb - Antimony (51)";
constexpr static char ptAlphaElementSb[] = "Sb - Antimônio (51)";
constexpr static char itAlphaElementSb[] = "Sb - Antimony (51)";
constexpr static char deAlphaElementSb[] = "Sb - Antimon (51)";
constexpr static char esAlphaElementSb[] = "Sb - Antimonio (51)";
constexpr static char huAlphaElementSb[] = "Sb - Antimon (51)";
constexpr static char enAlphaElementSc[] = "Sc - Scandium (21)";
constexpr static char frAlphaElementSc[] = "Sc - Scandium (21)";
constexpr static char nlAlphaElementSc[] = "Sc - Scandium (21)";
constexpr static char ptAlphaElementSc[] = "Sc - Escândio (21)";
constexpr static char itAlphaElementSc[] = "Sc - Scandium (21)";
constexpr static char deAlphaElementSc[] = "Sc - Scandium (21)";
constexpr static char esAlphaElementSc[] = "Sc - Escandio (21)";
constexpr static char huAlphaElementSc[] = "Sc - Scandium (21)";
constexpr static char enAlphaElementSe[] = "Se - Selenium (34)";
constexpr static char frAlphaElementSe[] = "Se - Sélénium (34)";
constexpr static char nlAlphaElementSe[] = "Se - Selenium (34)";
constexpr static char ptAlphaElementSe[] = "Se - Selênio (34)";
constexpr static char itAlphaElementSe[] = "Se - Selenium (34)";
constexpr static char deAlphaElementSe[] = "Se - Selen (34)";
constexpr static char esAlphaElementSe[] = "Se - Selenio (34)";
constexpr static char huAlphaElementSe[] = "Se - Szelén (34)";
constexpr static char enAlphaElementSg[] = "Sg - Seaborgium (106)";
constexpr static char frAlphaElementSg[] = "Sg - Seaborgium (106)";
constexpr static char nlAlphaElementSg[] = "Sg - Seaborgium (106)";
constexpr static char ptAlphaElementSg[] = "Sg - Seaborgium (106)";
constexpr static char itAlphaElementSg[] = "Sg - Seaborgium (106)";
constexpr static char deAlphaElementSg[] = "Sg - Seaborgium (106)";
constexpr static char esAlphaElementSg[] = "Sg - Seaborgio (106)";
constexpr static char huAlphaElementSg[] = "Sg - Seaborgium (106)";
constexpr static char enAlphaElementSi[] = "Si - Silicon (14)";
constexpr static char frAlphaElementSi[] = "Si - Silicium (14)";
constexpr static char nlAlphaElementSi[] = "Si - Silicon (14)";
constexpr static char ptAlphaElementSi[] = "Si - Silício (14)";
constexpr static char itAlphaElementSi[] = "Si - Silicon (14)";
constexpr static char deAlphaElementSi[] = "Si - Silizium (14)";
constexpr static char esAlphaElementSi[] = "Si - Silicio (14)";
constexpr static char huAlphaElementSi[] = "Si - Szilícium (14)";
constexpr static char enAlphaElementSm[] = "Sm - Samarium (62)";
constexpr static char frAlphaElementSm[] = "Sm - Samarium (62)";
constexpr static char nlAlphaElementSm[] = "Sm - Samarium (62)";
constexpr static char ptAlphaElementSm[] = "Sm - Samário (62)";
constexpr static char itAlphaElementSm[] = "Sm - Samarium (62)";
constexpr static char deAlphaElementSm[] = "Sm - Samarium (62)";
constexpr static char esAlphaElementSm[] = "Sm - Samario (62)";
constexpr static char huAlphaElementSm[] = "Sm - Samarium (62)";
constexpr static char enAlphaElementSn[] = "Sn - Tin (50)";
constexpr static char frAlphaElementSn[] = "Sn - Etain (50)";
constexpr static char nlAlphaElementSn[] = "Sn - Tin (50)";
constexpr static char ptAlphaElementSn[] = "Sn - Estanho (50)";
constexpr static char itAlphaElementSn[] = "Sn - Tin (50)";
constexpr static char deAlphaElementSn[] = "Sn - Zinn (50)";
constexpr static char esAlphaElementSn[] = "Sn - Estaño (50)";
constexpr static char huAlphaElementSn[] = "Sn - On (50)";
constexpr static char enAlphaElementSr[] = "Sr - Strontium (38)";
constexpr static char frAlphaElementSr[] = "Sr - Strontium (38)";
constexpr static char nlAlphaElementSr[] = "Sr - Strontium (38)";
constexpr static char ptAlphaElementSr[] = "Sr - Estrôncio (38)";
constexpr static char itAlphaElementSr[] = "Sr - Strontium (38)";
constexpr static char deAlphaElementSr[] = "Sr - Strontium (38)";
constexpr static char esAlphaElementSr[] = "Sr - Estroncio (38)";
constexpr static char huAlphaElementSr[] = "Sr - Stroncium (38)";
constexpr static char enAlphaElementTa[] = "Ta - Tantalum (73)";
constexpr static char frAlphaElementTa[] = "Ta - Tantale (73)";
constexpr static char nlAlphaElementTa[] = "Ta - Tantalum (73)";
constexpr static char ptAlphaElementTa[] = "Ta - Tântalo (73)";
constexpr static char itAlphaElementTa[] = "Ta - Tantalum (73)";
constexpr static char deAlphaElementTa[] = "Ta - Tantal (73)";
constexpr static char esAlphaElementTa[] = "Ta - Tantalio (73)";
constexpr static char huAlphaElementTa[] = "Ta - Tantál (73)";
constexpr static char enAlphaElementTb[] = "Tb - Terbium (65)";
constexpr static char frAlphaElementTb[] = "Tb - Terbium (65)";
constexpr static char nlAlphaElementTb[] = "Tb - Terbium (65)";
constexpr static char ptAlphaElementTb[] = "Tb - Térbio (65)";
constexpr static char itAlphaElementTb[] = "Tb - Terbium (65)";
constexpr static char deAlphaElementTb[] = "Tb - Terbium (65)";
constexpr static char esAlphaElementTb[] = "Tb - Terbio (65)";
constexpr static char huAlphaElementTb[] = "Tb - Terbium (65)";
constexpr static char enAlphaElementTc[] = "Tc - Technetium (43)";
constexpr static char frAlphaElementTc[] = "Tc - Technétium (43)";
constexpr static char nlAlphaElementTc[] = "Tc - Technetium (43)";
constexpr static char ptAlphaElementTc[] = "Tc - Tecnécio (43)";
constexpr static char itAlphaElementTc[] = "Tc - Technetium (43)";
constexpr static char deAlphaElementTc[] = "Tc - Technetium (43)";
constexpr static char esAlphaElementTc[] = "Tc - Tecnecio (43)";
constexpr static char huAlphaElementTc[] = "Tc - Technecium (43)";
constexpr static char enAlphaElementTe[] = "Te - Tellurium (52)";
constexpr static char frAlphaElementTe[] = "Te - Tellure (52)";
constexpr static char nlAlphaElementTe[] = "Te - Tellurium (52)";
constexpr static char ptAlphaElementTe[] = "Te - Telúrio (52)";
constexpr static char itAlphaElementTe[] = "Te - Tellurium (52)";
constexpr static char deAlphaElementTe[] = "Te - Tellur (52)";
constexpr static char esAlphaElementTe[] = "Te - Telurio (52)";
constexpr static char huAlphaElementTe[] = "Te - Tellúr (52)";
constexpr static char enAlphaElementTh[] = "Th - Thorium (90)";
constexpr static char frAlphaElementTh[] = "Th - Thorium (90)";
constexpr static char nlAlphaElementTh[] = "Th - Thorium (90)";
constexpr static char ptAlphaElementTh[] = "Th - Tório (90)";
constexpr static char itAlphaElementTh[] = "Th - Thorium (90)";
constexpr static char deAlphaElementTh[] = "Th - Thorium (90)";
constexpr static char esAlphaElementTh[] = "Th - Torio (90)";
constexpr static char huAlphaElementTh[] = "Th - Torium (90)";
constexpr static char enAlphaElementTi[] = "Ti - Titanium (22)";
constexpr static char frAlphaElementTi[] = "Ti - Titane (22)";
constexpr static char nlAlphaElementTi[] = "Ti - Titanium (22)";
constexpr static char ptAlphaElementTi[] = "Ti - Titânio (22)";
constexpr static char itAlphaElementTi[] = "Ti - Titanium (22)";
constexpr static char deAlphaElementTi[] = "Ti - Titan (22)";
constexpr static char esAlphaElementTi[] = "Ti - Titanio (22)";
constexpr static char huAlphaElementTi[] = "Ti - Titán (22)";
constexpr static char enAlphaElementTl[] = "Tl - Thallium (81)";
constexpr static char frAlphaElementTl[] = "Tl - Thallium (81)";
constexpr static char nlAlphaElementTl[] = "Tl - Thallium (81)";
constexpr static char ptAlphaElementTl[] = "Tl - Tálio (81)";
constexpr static char itAlphaElementTl[] = "Tl - Thallium (81)";
constexpr static char deAlphaElementTl[] = "Tl - Thallium (81)";
constexpr static char esAlphaElementTl[] = "Tl - Talio (81)";
constexpr static char huAlphaElementTl[] = "Tl - Tallium (81)";
constexpr static char enAlphaElementTm[] = "Tm - Thulium (69)";
constexpr static char frAlphaElementTm[] = "Tm - Thulium (69)";
constexpr static char nlAlphaElementTm[] = "Tm - Thulium (69)";
constexpr static char ptAlphaElementTm[] = "Tm - Túlio (69)";
constexpr static char itAlphaElementTm[] = "Tm - Thulium (69)";
constexpr static char deAlphaElementTm[] = "Tm - Thulium (69)";
constexpr static char esAlphaElementTm[] = "Tm - Tulio (69)";
constexpr static char huAlphaElementTm[] = "Tm - Thulium (69)";
constexpr static char enAlphaElementTs[] = "Ts - Tennesse (117)";
constexpr static char frAlphaElementTs[] = "Ts - Tennesse (117)";
constexpr static char nlAlphaElementTs[] = "Ts - Tennesse (117)";
constexpr static char ptAlphaElementTs[] = "Ts - Tennesse (117)";
constexpr static char itAlphaElementTs[] = "Ts - Tennesse (117)";
constexpr static char deAlphaElementTs[] = "Ts - Tennesse (117)";
constexpr static char esAlphaElementTs[] = "Ts - Tennesse (117)";
constexpr static char huAlphaElementTs[] = "Ts - Tennesse (117)";
constexpr static char enAlphaElementU[] = "U - Uranium (92)";
constexpr static char frAlphaElementU[] = "U - Uranium (92)";
constexpr static char nlAlphaElementU[] = "U - Uranium (92)";
constexpr static char ptAlphaElementU[] = "U - Urânio (92)";
constexpr static char itAlphaElementU[] = "U - Uranium (92)";
constexpr static char deAlphaElementU[] = "U - Uran (92)";
constexpr static char esAlphaElementU[] = "U - Uranio (92)";
constexpr static char huAlphaElementU[] = "U - Urán (92)";
constexpr static char enAlphaElementUbn[] = "Ubn - Unbinilium (120)";
constexpr static char frAlphaElementUbn[] = "Ubn - Unbinilium (120)";
constexpr static char nlAlphaElementUbn[] = "Ubn - Unbinilium (120)";
constexpr static char ptAlphaElementUbn[] = "Ubn - Unbinílio (120)";
constexpr static char itAlphaElementUbn[] = "Ubn - Unbinilium (120)";
constexpr static char deAlphaElementUbn[] = "Ubn - Unbinilium (120)";
constexpr static char esAlphaElementUbn[] = "Ubn - Unbinilio (120)";
constexpr static char huAlphaElementUbn[] = "Ubn - Unbinilium (120)";
constexpr static char enAlphaElementUue[] = "Uue - Ununennium (119)";
constexpr static char frAlphaElementUue[] = "Uue - Ununennium (119)";
constexpr static char nlAlphaElementUue[] = "Uue - Ununennium (119)";
constexpr static char ptAlphaElementUue[] = "Uue - Ununénnio (119)";
constexpr static char itAlphaElementUue[] = "Uue - Ununennium (119)";
constexpr static char deAlphaElementUue[] = "Uue - Ununennium (119)";
constexpr static char esAlphaElementUue[] = "Uue - Ununennio (119)";
constexpr static char huAlphaElementUue[] = "Uue - Ununennium (119)";
constexpr static char enAlphaElementV[] = "V - Vanadium (23)";
constexpr static char frAlphaElementV[] = "V - Vanadium (23)";
constexpr static char nlAlphaElementV[] = "V - Vanadium (23)";
constexpr static char ptAlphaElementV[] = "V - Vanádio (23)";
constexpr static char itAlphaElementV[] = "V - Vanadium (23)";
constexpr static char deAlphaElementV[] = "V - Vanadium (23)";
constexpr static char esAlphaElementV[] = "V - Vanadio (23)";
constexpr static char huAlphaElementV[] = "V - vanádium (23)";
constexpr static char enAlphaElementW[] = "W - Tungsten (74)";
constexpr static char frAlphaElementW[] = "W - Tungstène (74)";
constexpr static char nlAlphaElementW[] = "W - Tungsten (74)";
constexpr static char ptAlphaElementW[] = "W - Tungstênio (74)";
constexpr static char itAlphaElementW[] = "W - Tungsten (74)";
constexpr static char deAlphaElementW[] = "W - Wolfram (74)";
constexpr static char esAlphaElementW[] = "W - Tungsteno (74)";
constexpr static char huAlphaElementW[] = "W - Tungsten (74)";
constexpr static char enAlphaElementXe[] = "Xe - Xenon (54)";
constexpr static char frAlphaElementXe[] = "Xe - Xénon (54)";
constexpr static char nlAlphaElementXe[] = "Xe - Xenon (54)";
constexpr static char ptAlphaElementXe[] = "Xe - Xênon (54)";
constexpr static char itAlphaElementXe[] = "Xe - Xenon (54)";
constexpr static char deAlphaElementXe[] = "Xe - Xenon (54)";
constexpr static char esAlphaElementXe[] = "Xe - Cenón (54)";
constexpr static char huAlphaElementXe[] = "Xe - Xenon (54)";
constexpr static char enAlphaElementY[] = "Y - Yttrium (39)";
constexpr static char frAlphaElementY[] = "Y - Yttrium (39)";
constexpr static char nlAlphaElementY[] = "Y - Yttrium (39)";
constexpr static char ptAlphaElementY[] = "Y - Itrio (39)";
constexpr static char itAlphaElementY[] = "Y - Yttrium (39)";
constexpr static char deAlphaElementY[] = "Y - Yttrium (39)";
constexpr static char esAlphaElementY[] = "Y - Itrio (39)";
constexpr static char huAlphaElementY[] = "Y - Ittrium (39)";
constexpr static char enAlphaElementYb[] = "Yb - Ytterbium (70)";
constexpr static char frAlphaElementYb[] = "Yb - Ytterbium (70)";
constexpr static char nlAlphaElementYb[] = "Yb - Ytterbium (70)";
constexpr static char ptAlphaElementYb[] = "Yb - Itérbio (70)";
constexpr static char itAlphaElementYb[] = "Yb - Ytterbium (70)";
constexpr static char deAlphaElementYb[] = "Yb - Ytterbium (70)";
constexpr static char esAlphaElementYb[] = "Yb - Iterbio (70)";
constexpr static char huAlphaElementYb[] = "Yb - Ytterbium (70)";
constexpr static char enAlphaElementZn[] = "Zn - Zinc (30)";
constexpr static char frAlphaElementZn[] = "Zn - Zinc (30)";
constexpr static char nlAlphaElementZn[] = "Zn - Zinc (30)";
constexpr static char ptAlphaElementZn[] = "Zn - Zinco (30)";
constexpr static char itAlphaElementZn[] = "Zn - Zinc (30)";
constexpr static char deAlphaElementZn[] = "Zn - Zink (30)";
constexpr static char esAlphaElementZn[] = "Zn - Zinc (30)";
constexpr static char huAlphaElementZn[] = "Zn - Cink (30)";
constexpr static char enAlphaElementZr[] = "Zr - Zirconium (40)";
constexpr static char frAlphaElementZr[] = "Zr - Zirconium (40)";
constexpr static char nlAlphaElementZr[] = "Zr - Zirconium (40)";
constexpr static char ptAlphaElementZr[] = "Zr - Zircônio (40)";
constexpr static char itAlphaElementZr[] = "Zr - Zirconium (40)";
constexpr static char deAlphaElementZr[] = "Zr - Zirkonium (40)";
constexpr static char esAlphaElementZr[] = "Zr - Circonio (40)";
constexpr static char huAlphaElementZr[] = "Zr - Cirkonium (40)";
constexpr static char enAluminium[] = "Aluminium";
constexpr static char frAluminium[] = "Aluminium";
constexpr static char nlAluminium[] = "Aluminium";
constexpr static char ptAluminium[] = "Alumínio";
constexpr static char itAluminium[] = "Aluminio";
constexpr static char deAluminium[] = "Aluminium";
constexpr static char esAluminium[] = "Aluminio";
constexpr static char huAluminium[] = "Alumínium";
constexpr static char enAmountOfSubstanceDimension[] = "Quantity of matter";
constexpr static char frAmountOfSubstanceDimension[] = "Quantité de matière";
constexpr static char nlAmountOfSubstanceDimension[] = "Hoeveelheid materie";
constexpr static char ptAmountOfSubstanceDimension[] = "Quantidade de matéria";
constexpr static char itAmountOfSubstanceDimension[] = "Quantità di materia";
constexpr static char deAmountOfSubstanceDimension[] = "Quantität der Materie";
constexpr static char esAmountOfSubstanceDimension[] = "cantidad de materia";
constexpr static char huAmountOfSubstanceDimension[] = "Az anyag mennyisége";
constexpr static char enAngleUnit[] = "Angle measure";
constexpr static char frAngleUnit[] = "Unité d'angle";
constexpr static char nlAngleUnit[] = "Hoekmaat";
constexpr static char ptAngleUnit[] = "Valor do ângulo";
constexpr static char itAngleUnit[] = "Misura angolo";
constexpr static char deAngleUnit[] = "Winkeleinheit";
constexpr static char esAngleUnit[] = "Medida del ángulo";
constexpr static char huAngleUnit[] = "Szögmérö";
constexpr static char enApproximateSolution[] = "Approximate solution";
constexpr static char frApproximateSolution[] = "Solution approchée";
constexpr static char nlApproximateSolution[] = "Benaderde oplossing";
constexpr static char ptApproximateSolution[] = "Solução aproximada";
constexpr static char itApproximateSolution[] = "Soluzione approssimata";
constexpr static char deApproximateSolution[] = "Ungefähre Lösung";
constexpr static char esApproximateSolution[] = "Solución aproximada";
constexpr static char huApproximateSolution[] = "Hozzávetöleges megoldás";
constexpr static char enApproximateSolutionIntervalInstruction0[] = "Enter the interval to search";
constexpr static char frApproximateSolutionIntervalInstruction0[] = "Entrez l'intervalle dans lequel";
constexpr static char nlApproximateSolutionIntervalInstruction0[] = "Bepaal het interval waarin";
constexpr static char ptApproximateSolutionIntervalInstruction0[] = "Digite o intervalo para procurar";
constexpr static char itApproximateSolutionIntervalInstruction0[] = "Inserire l'intervallo dentro al quale";
constexpr static char deApproximateSolutionIntervalInstruction0[] = "Geben Sie das Suchintervall";
constexpr static char esApproximateSolutionIntervalInstruction0[] = "Introduzca el intervalo para";
constexpr static char huApproximateSolutionIntervalInstruction0[] = "Irja be a keresés intervallumot";
constexpr static char enApproximateSolutionIntervalInstruction1[] = "for an approximate solution";
constexpr static char frApproximateSolutionIntervalInstruction1[] = "rechercher une solution approchée";
constexpr static char nlApproximateSolutionIntervalInstruction1[] = "de oplossing moet liggen";
constexpr static char ptApproximateSolutionIntervalInstruction1[] = "uma solução aproximada";
constexpr static char itApproximateSolutionIntervalInstruction1[] = "ricercare una soluzione approssimata";
constexpr static char deApproximateSolutionIntervalInstruction1[] = "für eine ungefähre Lösung ein";
constexpr static char esApproximateSolutionIntervalInstruction1[] = "buscar una solución aproximada";
constexpr static char huApproximateSolutionIntervalInstruction1[] = "amelyikbe egy hozzávetöleges megoldást keressen";
constexpr static char enApps[] = "Applications";
constexpr static char frApps[] = "Applications";
constexpr static char nlApps[] = "Applicaties";
constexpr static char ptApps[] = "Aplicações";
constexpr static char itApps[] = "Applicazioni";
constexpr static char deApps[] = "Anwendungen";
constexpr static char esApps[] = "Aplicaciones";
constexpr static char huApps[] = "Alkalmazások";
constexpr static char enAppsCapital[] = "ΣOS by Symplex";
constexpr static char frAppsCapital[] = "ΣOS by Symplex";
constexpr static char nlAppsCapital[] = "ΣOS by Symplex";
constexpr static char ptAppsCapital[] = "ΣOS by Symplex";
constexpr static char itAppsCapital[] = "ΣOS by Symplex";
constexpr static char deAppsCapital[] = "ΣOS by Symplex";
constexpr static char esAppsCapital[] = "ΣOS by Symplex";
constexpr static char huAppsCapital[] = "ΣOS by Symplex";
constexpr static char enArgument[] = "Argument";
constexpr static char frArgument[] = "Argument";
constexpr static char nlArgument[] = "Argument";
constexpr static char ptArgument[] = "Argumento";
constexpr static char itArgument[] = "Argomento";
constexpr static char deArgument[] = "Argument";
constexpr static char esArgument[] = "Argumento";
constexpr static char huArgument[] = "érv";
constexpr static char enArithmetic[] = "Arithmetic";
constexpr static char frArithmetic[] = "Arithmétique";
constexpr static char nlArithmetic[] = "Rekenkunde";
constexpr static char ptArithmetic[] = "Aritmética";
constexpr static char itArithmetic[] = "Aritmetica";
constexpr static char deArithmetic[] = "Arithmetik";
constexpr static char esArithmetic[] = "Aritmética";
constexpr static char huArithmetic[] = "számtani";
constexpr static char enAtmosphericPressureTag[] = "Atmospheric Pressure";
constexpr static char frAtmosphericPressureTag[] = "Pression Atmosphérique";
constexpr static char nlAtmosphericPressureTag[] = "Atmosferische Druk";
constexpr static char ptAtmosphericPressureTag[] = "Pressão atmosférica";
constexpr static char itAtmosphericPressureTag[] = "Pressione atmosferica";
constexpr static char deAtmosphericPressureTag[] = "Atmosphärischer Druck";
constexpr static char esAtmosphericPressureTag[] = "Presión Atmosférica";
constexpr static char huAtmosphericPressureTag[] = "Légköri nyomás";
constexpr static char enAtomEC[] = "EC";
constexpr static char frAtomEC[] = "CE";
constexpr static char nlAtomEC[] = "EC";
constexpr static char ptAtomEC[] = "CE";
constexpr static char itAtomEC[] = "CE";
constexpr static char deAtomEC[] = "EK";
constexpr static char esAtomEC[] = "CE";
constexpr static char huAtomEC[] = "EK";
constexpr static char enAtomElectroneg[] = "Electronegativity";
constexpr static char frAtomElectroneg[] = "Electronégativité ";
constexpr static char nlAtomElectroneg[] = "Elektronegativiteit ";
constexpr static char ptAtomElectroneg[] = "Eletro-negatividade";
constexpr static char itAtomElectroneg[] = "Elettronegatività";
constexpr static char deAtomElectroneg[] = "Elektronegativität";
constexpr static char esAtomElectroneg[] = "Electronegatividad";
constexpr static char huAtomElectroneg[] = "Elektronegativitás ";
constexpr static char enAtomMass[] = "Molar mass";
constexpr static char frAtomMass[] = "Masse molaire";
constexpr static char nlAtomMass[] = "Molaire massa";
constexpr static char ptAtomMass[] = "Massa molar";
constexpr static char itAtomMass[] = "Massa molare";
constexpr static char deAtomMass[] = "Molar Masse";
constexpr static char esAtomMass[] = "Masa molar";
constexpr static char huAtomMass[] = "Moláris tömeg";
constexpr static char enAtomName_Actinium[] = "Actinium";
constexpr static char frAtomName_Actinium[] = "Actinium";
constexpr static char nlAtomName_Actinium[] = "Actinium";
constexpr static char ptAtomName_Actinium[] = "Actínio";
constexpr static char itAtomName_Actinium[] = "Attinio";
constexpr static char deAtomName_Actinium[] = "Aktinium";
constexpr static char esAtomName_Actinium[] = "Actinio";
constexpr static char huAtomName_Actinium[] = "Aktínium";
constexpr static char enAtomName_Aluminium[] = "Aluminium";
constexpr static char frAtomName_Aluminium[] = "Aluminium";
constexpr static char nlAtomName_Aluminium[] = "Aluminium";
constexpr static char ptAtomName_Aluminium[] = "Alumínio";
constexpr static char itAtomName_Aluminium[] = "Alluminio";
constexpr static char deAtomName_Aluminium[] = "Aluminium";
constexpr static char esAtomName_Aluminium[] = "Aluminio";
constexpr static char huAtomName_Aluminium[] = "Alumínium";
constexpr static char enAtomName_Americium[] = "Americium";
constexpr static char frAtomName_Americium[] = "Américium";
constexpr static char nlAtomName_Americium[] = "Americium";
constexpr static char ptAtomName_Americium[] = "Americium";
constexpr static char itAtomName_Americium[] = "Americio";
constexpr static char deAtomName_Americium[] = "Americium";
constexpr static char esAtomName_Americium[] = "Americio";
constexpr static char huAtomName_Americium[] = "Americium";
constexpr static char enAtomName_Antimony[] = "Antimony";
constexpr static char frAtomName_Antimony[] = "Antimoine";
constexpr static char nlAtomName_Antimony[] = "Antimoon";
constexpr static char ptAtomName_Antimony[] = "Antimônio";
constexpr static char itAtomName_Antimony[] = "Antimonio";
constexpr static char deAtomName_Antimony[] = "Antimon";
constexpr static char esAtomName_Antimony[] = "Antimonio";
constexpr static char huAtomName_Antimony[] = "Antimon";
constexpr static char enAtomName_Argon[] = "Argon";
constexpr static char frAtomName_Argon[] = "Argon";
constexpr static char nlAtomName_Argon[] = "Argon";
constexpr static char ptAtomName_Argon[] = "Argônio";
constexpr static char itAtomName_Argon[] = "Argon";
constexpr static char deAtomName_Argon[] = "Argon";
constexpr static char esAtomName_Argon[] = "Argón";
constexpr static char huAtomName_Argon[] = "Argon";
constexpr static char enAtomName_Arsenic[] = "Arsenic";
constexpr static char frAtomName_Arsenic[] = "Arsenic";
constexpr static char nlAtomName_Arsenic[] = "Arseen";
constexpr static char ptAtomName_Arsenic[] = "Arsênico";
constexpr static char itAtomName_Arsenic[] = "Arsenico";
constexpr static char deAtomName_Arsenic[] = "Arsen";
constexpr static char esAtomName_Arsenic[] = "Arsénico";
constexpr static char huAtomName_Arsenic[] = "Arzén";
constexpr static char enAtomName_Astatine[] = "Astatine";
constexpr static char frAtomName_Astatine[] = "Astatine";
constexpr static char nlAtomName_Astatine[] = "Astatine";
constexpr static char ptAtomName_Astatine[] = "Astatine";
constexpr static char itAtomName_Astatine[] = "Astato";
constexpr static char deAtomName_Astatine[] = "Astatine";
constexpr static char esAtomName_Astatine[] = "Astatine";
constexpr static char huAtomName_Astatine[] = "Asztatin";
constexpr static char enAtomName_Barium[] = "Barium";
constexpr static char frAtomName_Barium[] = "Baryum";
constexpr static char nlAtomName_Barium[] = "Barium";
constexpr static char ptAtomName_Barium[] = "Bário";
constexpr static char itAtomName_Barium[] = "Bario";
constexpr static char deAtomName_Barium[] = "Barium";
constexpr static char esAtomName_Barium[] = "Bario";
constexpr static char huAtomName_Barium[] = "Bárium";
constexpr static char enAtomName_Berkelium[] = "Berkelium";
constexpr static char frAtomName_Berkelium[] = "Berkelium";
constexpr static char nlAtomName_Berkelium[] = "Berkelium";
constexpr static char ptAtomName_Berkelium[] = "Berquélio";
constexpr static char itAtomName_Berkelium[] = "Berkelium";
constexpr static char deAtomName_Berkelium[] = "Berkelium";
constexpr static char esAtomName_Berkelium[] = "Berkelio";
constexpr static char huAtomName_Berkelium[] = "Berkelium";
constexpr static char enAtomName_Beryllium[] = "Beryllium";
constexpr static char frAtomName_Beryllium[] = "Béryllium";
constexpr static char nlAtomName_Beryllium[] = "Beryllium";
constexpr static char ptAtomName_Beryllium[] = "Berílio";
constexpr static char itAtomName_Beryllium[] = "Berillio";
constexpr static char deAtomName_Beryllium[] = "Beryllium";
constexpr static char esAtomName_Beryllium[] = "Berilio";
constexpr static char huAtomName_Beryllium[] = "Berillium";
constexpr static char enAtomName_Bismuth[] = "Bismuth";
constexpr static char frAtomName_Bismuth[] = "Bismuth";
constexpr static char nlAtomName_Bismuth[] = "Bismut";
constexpr static char ptAtomName_Bismuth[] = "Bismuto";
constexpr static char itAtomName_Bismuth[] = "Bismuto";
constexpr static char deAtomName_Bismuth[] = "Wismut";
constexpr static char esAtomName_Bismuth[] = "Bismuto";
constexpr static char huAtomName_Bismuth[] = "Bizmut";
constexpr static char enAtomName_Boron[] = "Boron";
constexpr static char frAtomName_Boron[] = "Bore";
constexpr static char nlAtomName_Boron[] = "Borium";
constexpr static char ptAtomName_Boron[] = "Boro";
constexpr static char itAtomName_Boron[] = "Boro";
constexpr static char deAtomName_Boron[] = "Bor";
constexpr static char esAtomName_Boron[] = "Boro";
constexpr static char huAtomName_Boron[] = "Bór";
constexpr static char enAtomName_Bromine[] = "Bromine";
constexpr static char frAtomName_Bromine[] = "Brome";
constexpr static char nlAtomName_Bromine[] = "Broom";
constexpr static char ptAtomName_Bromine[] = "Bromo";
constexpr static char itAtomName_Bromine[] = "Bromo";
constexpr static char deAtomName_Bromine[] = "Brom";
constexpr static char esAtomName_Bromine[] = "Bromo";
constexpr static char huAtomName_Bromine[] = "Bróm";
constexpr static char enAtomName_Cadmium[] = "Cadmium";
constexpr static char frAtomName_Cadmium[] = "Cadmium";
constexpr static char nlAtomName_Cadmium[] = "Cadmium";
constexpr static char ptAtomName_Cadmium[] = "Cádmio";
constexpr static char itAtomName_Cadmium[] = "Cadmio";
constexpr static char deAtomName_Cadmium[] = "Cadmium";
constexpr static char esAtomName_Cadmium[] = "Cadmio";
constexpr static char huAtomName_Cadmium[] = "Kadmium";
constexpr static char enAtomName_Caesium[] = "Caesium";
constexpr static char frAtomName_Caesium[] = "Césium";
constexpr static char nlAtomName_Caesium[] = "Cesium";
constexpr static char ptAtomName_Caesium[] = "Césio";
constexpr static char itAtomName_Caesium[] = "Cesio";
constexpr static char deAtomName_Caesium[] = "Cäsium";
constexpr static char esAtomName_Caesium[] = "Cesio";
constexpr static char huAtomName_Caesium[] = "Cézium";
constexpr static char enAtomName_Calcium[] = "Calcium";
constexpr static char frAtomName_Calcium[] = "Calcium";
constexpr static char nlAtomName_Calcium[] = "Calcium";
constexpr static char ptAtomName_Calcium[] = "Cálcio";
constexpr static char itAtomName_Calcium[] = "Calcio";
constexpr static char deAtomName_Calcium[] = "Kalzium";
constexpr static char esAtomName_Calcium[] = "Calcio";
constexpr static char huAtomName_Calcium[] = "Kalcium";
constexpr static char enAtomName_Californium[] = "Californium";
constexpr static char frAtomName_Californium[] = "Californium";
constexpr static char nlAtomName_Californium[] = "Californium";
constexpr static char ptAtomName_Californium[] = "Californium";
constexpr static char itAtomName_Californium[] = "Californio";
constexpr static char deAtomName_Californium[] = "Californium";
constexpr static char esAtomName_Californium[] = "Californio";
constexpr static char huAtomName_Californium[] = "Californium";
constexpr static char enAtomName_Carbon[] = "Carbon";
constexpr static char frAtomName_Carbon[] = "Carbone";
constexpr static char nlAtomName_Carbon[] = "Koolstof";
constexpr static char ptAtomName_Carbon[] = "Carbono";
constexpr static char itAtomName_Carbon[] = "Carbonio";
constexpr static char deAtomName_Carbon[] = "Kohlenstoff";
constexpr static char esAtomName_Carbon[] = "Carbón";
constexpr static char huAtomName_Carbon[] = "Szén";
constexpr static char enAtomName_Cerium[] = "Cerium";
constexpr static char frAtomName_Cerium[] = "Cérium";
constexpr static char nlAtomName_Cerium[] = "Cerium";
constexpr static char ptAtomName_Cerium[] = "Cério";
constexpr static char itAtomName_Cerium[] = "Cerio";
constexpr static char deAtomName_Cerium[] = "Cer";
constexpr static char esAtomName_Cerium[] = "Cerio";
constexpr static char huAtomName_Cerium[] = "Cérium";
constexpr static char enAtomName_Chlorine[] = "Chlorine";
constexpr static char frAtomName_Chlorine[] = "Chlore";
constexpr static char nlAtomName_Chlorine[] = "Chloor";
constexpr static char ptAtomName_Chlorine[] = "Cloro";
constexpr static char itAtomName_Chlorine[] = "Cloro";
constexpr static char deAtomName_Chlorine[] = "Chlor";
constexpr static char esAtomName_Chlorine[] = "Cloro";
constexpr static char huAtomName_Chlorine[] = "Klór";
constexpr static char enAtomName_Chromium[] = "Chromium";
constexpr static char frAtomName_Chromium[] = "Chrome";
constexpr static char nlAtomName_Chromium[] = "Chroom";
constexpr static char ptAtomName_Chromium[] = "Cromo";
constexpr static char itAtomName_Chromium[] = "Cromo";
constexpr static char deAtomName_Chromium[] = "Chrom";
constexpr static char esAtomName_Chromium[] = "Cromo";
constexpr static char huAtomName_Chromium[] = "Króm";
constexpr static char enAtomName_Cobalt[] = "Cobalt";
constexpr static char frAtomName_Cobalt[] = "Cobalt";
constexpr static char nlAtomName_Cobalt[] = "Kobalt";
constexpr static char ptAtomName_Cobalt[] = "Cobalto";
constexpr static char itAtomName_Cobalt[] = "Cobalto";
constexpr static char deAtomName_Cobalt[] = "Kobalt";
constexpr static char esAtomName_Cobalt[] = "Cobalto";
constexpr static char huAtomName_Cobalt[] = "Kobalt";
constexpr static char enAtomName_Copernicium[] = "Copernicium";
constexpr static char frAtomName_Copernicium[] = "Copernicium";
constexpr static char nlAtomName_Copernicium[] = "Copernicium";
constexpr static char ptAtomName_Copernicium[] = "Copernicium";
constexpr static char itAtomName_Copernicium[] = "Copernicium";
constexpr static char deAtomName_Copernicium[] = "Copernicium";
constexpr static char esAtomName_Copernicium[] = "Copérnico";
constexpr static char huAtomName_Copernicium[] = "Copernicium";
constexpr static char enAtomName_Copper[] = "Copper";
constexpr static char frAtomName_Copper[] = "Cuivre";
constexpr static char nlAtomName_Copper[] = "Koper";
constexpr static char ptAtomName_Copper[] = "Cobre";
constexpr static char itAtomName_Copper[] = "Rame";
constexpr static char deAtomName_Copper[] = "Kupfer";
constexpr static char esAtomName_Copper[] = "Cobre";
constexpr static char huAtomName_Copper[] = "Réz";
constexpr static char enAtomName_Curium[] = "Curium";
constexpr static char frAtomName_Curium[] = "Curium";
constexpr static char nlAtomName_Curium[] = "Curium";
constexpr static char ptAtomName_Curium[] = "Curium";
constexpr static char itAtomName_Curium[] = "Curio";
constexpr static char deAtomName_Curium[] = "Curium";
constexpr static char esAtomName_Curium[] = "Curio";
constexpr static char huAtomName_Curium[] = "Kúrium";
constexpr static char enAtomName_Darmstadtium[] = "Darmstadtium";
constexpr static char frAtomName_Darmstadtium[] = "Darmstadtium";
constexpr static char nlAtomName_Darmstadtium[] = "Darmstadtium";
constexpr static char ptAtomName_Darmstadtium[] = "Darmstádio";
constexpr static char itAtomName_Darmstadtium[] = "Darmstadtium";
constexpr static char deAtomName_Darmstadtium[] = "Darmstadtium";
constexpr static char esAtomName_Darmstadtium[] = "Darmstadtium";
constexpr static char huAtomName_Darmstadtium[] = "Darmstadtium";
constexpr static char enAtomName_Dubnium[] = "Dubnium";
constexpr static char frAtomName_Dubnium[] = "Dubnium";
constexpr static char nlAtomName_Dubnium[] = "Dubnium";
constexpr static char ptAtomName_Dubnium[] = "Dubnium";
constexpr static char itAtomName_Dubnium[] = "Dubnio";
constexpr static char deAtomName_Dubnium[] = "Dubnium";
constexpr static char esAtomName_Dubnium[] = "Dubnium";
constexpr static char huAtomName_Dubnium[] = "Dubnium";
constexpr static char enAtomName_Dyxprosium[] = "Dyxprosium";
constexpr static char frAtomName_Dyxprosium[] = "Dyxprosium";
constexpr static char nlAtomName_Dyxprosium[] = "Dyxprosium";
constexpr static char ptAtomName_Dyxprosium[] = "Dyxprósio";
constexpr static char itAtomName_Dyxprosium[] = "Dyxprosium";
constexpr static char deAtomName_Dyxprosium[] = "Dyxprosium";
constexpr static char esAtomName_Dyxprosium[] = "Dyxprosium";
constexpr static char huAtomName_Dyxprosium[] = "Dyxprosium";
constexpr static char enAtomName_Einsteinium[] = "Einsteinium";
constexpr static char frAtomName_Einsteinium[] = "Einsteinium";
constexpr static char nlAtomName_Einsteinium[] = "Einsteinium";
constexpr static char ptAtomName_Einsteinium[] = "Einsteinium";
constexpr static char itAtomName_Einsteinium[] = "Einsteinio";
constexpr static char deAtomName_Einsteinium[] = "Einsteinium";
constexpr static char esAtomName_Einsteinium[] = "Einstenio";
constexpr static char huAtomName_Einsteinium[] = "Einsteinium";
constexpr static char enAtomName_Erbium[] = "Erbium";
constexpr static char frAtomName_Erbium[] = "Erbium";
constexpr static char nlAtomName_Erbium[] = "Erbium";
constexpr static char ptAtomName_Erbium[] = "Erbium";
constexpr static char itAtomName_Erbium[] = "Erbio";
constexpr static char deAtomName_Erbium[] = "Erbium";
constexpr static char esAtomName_Erbium[] = "Erbio";
constexpr static char huAtomName_Erbium[] = "Erbium";
constexpr static char enAtomName_Europium[] = "Europium";
constexpr static char frAtomName_Europium[] = "Europium";
constexpr static char nlAtomName_Europium[] = "Europium";
constexpr static char ptAtomName_Europium[] = "Europium";
constexpr static char itAtomName_Europium[] = "Europium";
constexpr static char deAtomName_Europium[] = "Europium";
constexpr static char esAtomName_Europium[] = "Europio";
constexpr static char huAtomName_Europium[] = "Europium";
constexpr static char enAtomName_Fermium[] = "Fermium";
constexpr static char frAtomName_Fermium[] = "Fermium";
constexpr static char nlAtomName_Fermium[] = "Fermium";
constexpr static char ptAtomName_Fermium[] = "Fermium";
constexpr static char itAtomName_Fermium[] = "Fermio";
constexpr static char deAtomName_Fermium[] = "Fermium";
constexpr static char esAtomName_Fermium[] = "Fermio";
constexpr static char huAtomName_Fermium[] = "Fermium";
constexpr static char enAtomName_Flerovium[] = "Flerovium";
constexpr static char frAtomName_Flerovium[] = "Flerovium";
constexpr static char nlAtomName_Flerovium[] = "Flerovium";
constexpr static char ptAtomName_Flerovium[] = "Flerovium";
constexpr static char itAtomName_Flerovium[] = "Flerovium";
constexpr static char deAtomName_Flerovium[] = "Flerovium";
constexpr static char esAtomName_Flerovium[] = "Flerovio";
constexpr static char huAtomName_Flerovium[] = "Flerovium";
constexpr static char enAtomName_Fluorine[] = "Fluorine";
constexpr static char frAtomName_Fluorine[] = "Fluor";
constexpr static char nlAtomName_Fluorine[] = "Fluor";
constexpr static char ptAtomName_Fluorine[] = "Flúor";
constexpr static char itAtomName_Fluorine[] = "Fluoro";
constexpr static char deAtomName_Fluorine[] = "Fluor";
constexpr static char esAtomName_Fluorine[] = "Flúor";
constexpr static char huAtomName_Fluorine[] = "Fluor";
constexpr static char enAtomName_Francium[] = "Francium";
constexpr static char frAtomName_Francium[] = "Francium";
constexpr static char nlAtomName_Francium[] = "Francium";
constexpr static char ptAtomName_Francium[] = "Francium";
constexpr static char itAtomName_Francium[] = "Francium";
constexpr static char deAtomName_Francium[] = "Francium";
constexpr static char esAtomName_Francium[] = "Francio";
constexpr static char huAtomName_Francium[] = "Francium";
constexpr static char enAtomName_Gadolinium[] = "Gadolinium";
constexpr static char frAtomName_Gadolinium[] = "Gadolinium";
constexpr static char nlAtomName_Gadolinium[] = "Gadolinium";
constexpr static char ptAtomName_Gadolinium[] = "Gadolínio";
constexpr static char itAtomName_Gadolinium[] = "Gadolinio";
constexpr static char deAtomName_Gadolinium[] = "Gadolinium";
constexpr static char esAtomName_Gadolinium[] = "Gadolinio";
constexpr static char huAtomName_Gadolinium[] = "Gadolínium";
constexpr static char enAtomName_Gallium[] = "Gallium";
constexpr static char frAtomName_Gallium[] = "Gallium";
constexpr static char nlAtomName_Gallium[] = "Gallium";
constexpr static char ptAtomName_Gallium[] = "Gálio";
constexpr static char itAtomName_Gallium[] = "Gallio";
constexpr static char deAtomName_Gallium[] = "Gallium";
constexpr static char esAtomName_Gallium[] = "Galio";
constexpr static char huAtomName_Gallium[] = "Gallium";
constexpr static char enAtomName_Germanium[] = "Germanium";
constexpr static char frAtomName_Germanium[] = "Germanium";
constexpr static char nlAtomName_Germanium[] = "Germanium";
constexpr static char ptAtomName_Germanium[] = "Germânio";
constexpr static char itAtomName_Germanium[] = "Germanio";
constexpr static char deAtomName_Germanium[] = "Germanium";
constexpr static char esAtomName_Germanium[] = "Germanio";
constexpr static char huAtomName_Germanium[] = "Germánium";
constexpr static char enAtomName_Gold[] = "Gold";
constexpr static char frAtomName_Gold[] = "Or";
constexpr static char nlAtomName_Gold[] = "Goud";
constexpr static char ptAtomName_Gold[] = "Ouro";
constexpr static char itAtomName_Gold[] = "Oro";
constexpr static char deAtomName_Gold[] = "Gold";
constexpr static char esAtomName_Gold[] = "Oro";
constexpr static char huAtomName_Gold[] = "Arany";
constexpr static char enAtomName_Hafnium[] = "Hafnium";
constexpr static char frAtomName_Hafnium[] = "Hafnium";
constexpr static char nlAtomName_Hafnium[] = "Hafnium";
constexpr static char ptAtomName_Hafnium[] = "Háfnio";
constexpr static char itAtomName_Hafnium[] = "Afnio";
constexpr static char deAtomName_Hafnium[] = "Hafnium";
constexpr static char esAtomName_Hafnium[] = "Hafnio";
constexpr static char huAtomName_Hafnium[] = "Hafnium";
constexpr static char enAtomName_Helium[] = "Helium";
constexpr static char frAtomName_Helium[] = "Hélium";
constexpr static char nlAtomName_Helium[] = "Helium";
constexpr static char ptAtomName_Helium[] = "Hélio";
constexpr static char itAtomName_Helium[] = "Elio";
constexpr static char deAtomName_Helium[] = "Helium";
constexpr static char esAtomName_Helium[] = "Helio";
constexpr static char huAtomName_Helium[] = "Hélium";
constexpr static char enAtomName_Holmium[] = "Holmium";
constexpr static char frAtomName_Holmium[] = "Holmium";
constexpr static char nlAtomName_Holmium[] = "Holmium";
constexpr static char ptAtomName_Holmium[] = "Holmium";
constexpr static char itAtomName_Holmium[] = "Olmio";
constexpr static char deAtomName_Holmium[] = "Holmium";
constexpr static char esAtomName_Holmium[] = "Holmio";
constexpr static char huAtomName_Holmium[] = "Holmium";
constexpr static char enAtomName_Hydrogen[] = "Hydrogen";
constexpr static char frAtomName_Hydrogen[] = "Hydrogène";
constexpr static char nlAtomName_Hydrogen[] = "Waterstof";
constexpr static char ptAtomName_Hydrogen[] = "Hidrogênio";
constexpr static char itAtomName_Hydrogen[] = "Idrogeno";
constexpr static char deAtomName_Hydrogen[] = "Wasserstoff";
constexpr static char esAtomName_Hydrogen[] = "Hidrógeno";
constexpr static char huAtomName_Hydrogen[] = "Hidrogén";
constexpr static char enAtomName_Indine[] = "Iodure";
constexpr static char frAtomName_Indine[] = "Iode";
constexpr static char nlAtomName_Indine[] = "Indine";
constexpr static char ptAtomName_Indine[] = "Indine";
constexpr static char itAtomName_Indine[] = "Iodio";
constexpr static char deAtomName_Indine[] = "Jod";
constexpr static char esAtomName_Indine[] = "Yodo";
constexpr static char huAtomName_Indine[] = "Indin";
constexpr static char enAtomName_Indium[] = "Indium";
constexpr static char frAtomName_Indium[] = "Indium";
constexpr static char nlAtomName_Indium[] = "Indium";
constexpr static char ptAtomName_Indium[] = "Indio";
constexpr static char itAtomName_Indium[] = "Indio";
constexpr static char deAtomName_Indium[] = "Indium";
constexpr static char esAtomName_Indium[] = "Indio";
constexpr static char huAtomName_Indium[] = "Indium";
constexpr static char enAtomName_Iridium[] = "Iridium";
constexpr static char frAtomName_Iridium[] = "Iridium";
constexpr static char nlAtomName_Iridium[] = "Iridium";
constexpr static char ptAtomName_Iridium[] = "Iridium";
constexpr static char itAtomName_Iridium[] = "Iridio";
constexpr static char deAtomName_Iridium[] = "Iridium";
constexpr static char esAtomName_Iridium[] = "Iridio";
constexpr static char huAtomName_Iridium[] = "Iridium";
constexpr static char enAtomName_Iron[] = "Iron";
constexpr static char frAtomName_Iron[] = "Fer";
constexpr static char nlAtomName_Iron[] = "Ijzer";
constexpr static char ptAtomName_Iron[] = "Ferro";
constexpr static char itAtomName_Iron[] = "Ferro";
constexpr static char deAtomName_Iron[] = "Eisen";
constexpr static char esAtomName_Iron[] = "Hierro";
constexpr static char huAtomName_Iron[] = "Vas";
constexpr static char enAtomName_Krypton[] = "Krypton";
constexpr static char frAtomName_Krypton[] = "Krypton";
constexpr static char nlAtomName_Krypton[] = "Krypton";
constexpr static char ptAtomName_Krypton[] = "Krypton";
constexpr static char itAtomName_Krypton[] = "Krypton";
constexpr static char deAtomName_Krypton[] = "Krypton";
constexpr static char esAtomName_Krypton[] = "Criptón";
constexpr static char huAtomName_Krypton[] = "Kripton";
constexpr static char enAtomName_Lanthanum[] = "Lanthanum";
constexpr static char frAtomName_Lanthanum[] = "Lanthane";
constexpr static char nlAtomName_Lanthanum[] = "Lanthaan";
constexpr static char ptAtomName_Lanthanum[] = "Lantânio";
constexpr static char itAtomName_Lanthanum[] = "Lantanio";
constexpr static char deAtomName_Lanthanum[] = "Lanthan";
constexpr static char esAtomName_Lanthanum[] = "Lantano";
constexpr static char huAtomName_Lanthanum[] = "Lantán";
constexpr static char enAtomName_Lawrencium[] = "Lawrencium";
constexpr static char frAtomName_Lawrencium[] = "Lawrencium";
constexpr static char nlAtomName_Lawrencium[] = "Lawrencium";
constexpr static char ptAtomName_Lawrencium[] = "Lawrencium";
constexpr static char itAtomName_Lawrencium[] = "Lawrencium";
constexpr static char deAtomName_Lawrencium[] = "Lawrencium";
constexpr static char esAtomName_Lawrencium[] = "Lawrencio";
constexpr static char huAtomName_Lawrencium[] = "Lawrencium";
constexpr static char enAtomName_Lead[] = "Lead";
constexpr static char frAtomName_Lead[] = "Plomb";
constexpr static char nlAtomName_Lead[] = "Lood";
constexpr static char ptAtomName_Lead[] = "Liderar";
constexpr static char itAtomName_Lead[] = "Piombo";
constexpr static char deAtomName_Lead[] = "Führen";
constexpr static char esAtomName_Lead[] = "Dirigir";
constexpr static char huAtomName_Lead[] = "Vezet";
constexpr static char enAtomName_Lithium[] = "Lithium";
constexpr static char frAtomName_Lithium[] = "Lithium";
constexpr static char nlAtomName_Lithium[] = "Lithium";
constexpr static char ptAtomName_Lithium[] = "Lítio";
constexpr static char itAtomName_Lithium[] = "Litio";
constexpr static char deAtomName_Lithium[] = "Lithium";
constexpr static char esAtomName_Lithium[] = "Litio";
constexpr static char huAtomName_Lithium[] = "Lítium";
constexpr static char enAtomName_Lutetium[] = "Lutetium";
constexpr static char frAtomName_Lutetium[] = "Lutétium";
constexpr static char nlAtomName_Lutetium[] = "Lutetium";
constexpr static char ptAtomName_Lutetium[] = "Lutécio";
constexpr static char itAtomName_Lutetium[] = "Lutezio";
constexpr static char deAtomName_Lutetium[] = "Lutetium";
constexpr static char esAtomName_Lutetium[] = "Lutecio";
constexpr static char huAtomName_Lutetium[] = "Lutetium";
constexpr static char enAtomName_Magnesium[] = "Magnesium";
constexpr static char frAtomName_Magnesium[] = "Magnésium";
constexpr static char nlAtomName_Magnesium[] = "Magnesium";
constexpr static char ptAtomName_Magnesium[] = "Magnésio";
constexpr static char itAtomName_Magnesium[] = "Magnesio";
constexpr static char deAtomName_Magnesium[] = "Magnesium";
constexpr static char esAtomName_Magnesium[] = "Magnesio";
constexpr static char huAtomName_Magnesium[] = "Magnézium";
constexpr static char enAtomName_Manganese[] = "Manganese";
constexpr static char frAtomName_Manganese[] = "Manganèse";
constexpr static char nlAtomName_Manganese[] = "Mangaan";
constexpr static char ptAtomName_Manganese[] = "Manganês";
constexpr static char itAtomName_Manganese[] = "Manganese";
constexpr static char deAtomName_Manganese[] = "Mangan";
constexpr static char esAtomName_Manganese[] = "Manganeso";
constexpr static char huAtomName_Manganese[] = "Mangán";
constexpr static char enAtomName_Meitnerium[] = "Meitnerium";
constexpr static char frAtomName_Meitnerium[] = "Meitnerium";
constexpr static char nlAtomName_Meitnerium[] = "Meitnerium";
constexpr static char ptAtomName_Meitnerium[] = "Meitnerium";
constexpr static char itAtomName_Meitnerium[] = "Meitnerio";
constexpr static char deAtomName_Meitnerium[] = "Meitnerium";
constexpr static char esAtomName_Meitnerium[] = "Meitnerio";
constexpr static char huAtomName_Meitnerium[] = "Meitnerium";
constexpr static char enAtomName_Mendelevium[] = "Mendelevium";
constexpr static char frAtomName_Mendelevium[] = "Mendelevium";
constexpr static char nlAtomName_Mendelevium[] = "Mendelevium";
constexpr static char ptAtomName_Mendelevium[] = "Mendelévio";
constexpr static char itAtomName_Mendelevium[] = "Mendelevio";
constexpr static char deAtomName_Mendelevium[] = "Mendelevium";
constexpr static char esAtomName_Mendelevium[] = "Mendelevio";
constexpr static char huAtomName_Mendelevium[] = "Mendelevium";
constexpr static char enAtomName_Mercury[] = "Mercury";
constexpr static char frAtomName_Mercury[] = "Mercure";
constexpr static char nlAtomName_Mercury[] = "Kwik";
constexpr static char ptAtomName_Mercury[] = "Mercúrio";
constexpr static char itAtomName_Mercury[] = "Mercurio";
constexpr static char deAtomName_Mercury[] = "Merkur";
constexpr static char esAtomName_Mercury[] = "Mercurio";
constexpr static char huAtomName_Mercury[] = "Higany";
constexpr static char enAtomName_Molybdenum[] = "Molybdenum";
constexpr static char frAtomName_Molybdenum[] = "Molybdène";
constexpr static char nlAtomName_Molybdenum[] = "Molybdeen";
constexpr static char ptAtomName_Molybdenum[] = "Molibdênio";
constexpr static char itAtomName_Molybdenum[] = "Molibdeno";
constexpr static char deAtomName_Molybdenum[] = "Molybdän";
constexpr static char esAtomName_Molybdenum[] = "Molibdeno";
constexpr static char huAtomName_Molybdenum[] = "Molibdén";
constexpr static char enAtomName_Neodymium[] = "Neodymium";
constexpr static char frAtomName_Neodymium[] = "Néodyme";
constexpr static char nlAtomName_Neodymium[] = "Neodymium";
constexpr static char ptAtomName_Neodymium[] = "Neodímio";
constexpr static char itAtomName_Neodymium[] = "Neodimio";
constexpr static char deAtomName_Neodymium[] = "Neodym";
constexpr static char esAtomName_Neodymium[] = "Neodimio";
constexpr static char huAtomName_Neodymium[] = "Neodímium";
constexpr static char enAtomName_Neon[] = "Neon";
constexpr static char frAtomName_Neon[] = "Néon";
constexpr static char nlAtomName_Neon[] = "Neon";
constexpr static char ptAtomName_Neon[] = "Néon";
constexpr static char itAtomName_Neon[] = "Neon";
constexpr static char deAtomName_Neon[] = "Neon";
constexpr static char esAtomName_Neon[] = "Neón";
constexpr static char huAtomName_Neon[] = "Neon";
constexpr static char enAtomName_Neptunium[] = "Neptunium";
constexpr static char frAtomName_Neptunium[] = "Neptunium";
constexpr static char nlAtomName_Neptunium[] = "Neptunium";
constexpr static char ptAtomName_Neptunium[] = "Neptúnio";
constexpr static char itAtomName_Neptunium[] = "Nettunio";
constexpr static char deAtomName_Neptunium[] = "Neptunium";
constexpr static char esAtomName_Neptunium[] = "Neptunio";
constexpr static char huAtomName_Neptunium[] = "Neptúnium";
constexpr static char enAtomName_Nickel[] = "Nickel";
constexpr static char frAtomName_Nickel[] = "Nickel";
constexpr static char nlAtomName_Nickel[] = "Nikkel";
constexpr static char ptAtomName_Nickel[] = "Níquel";
constexpr static char itAtomName_Nickel[] = "Nichel";
constexpr static char deAtomName_Nickel[] = "Nickel";
constexpr static char esAtomName_Nickel[] = "Níquel";
constexpr static char huAtomName_Nickel[] = "Nikkel";
constexpr static char enAtomName_Niobium[] = "Niobium";
constexpr static char frAtomName_Niobium[] = "Niobium";
constexpr static char nlAtomName_Niobium[] = "Niobium";
constexpr static char ptAtomName_Niobium[] = "Nióbio";
constexpr static char itAtomName_Niobium[] = "Niobio";
constexpr static char deAtomName_Niobium[] = "Niob";
constexpr static char esAtomName_Niobium[] = "Niobio";
constexpr static char huAtomName_Niobium[] = "Nióbium";
constexpr static char enAtomName_Nitrogen[] = "Nitrogen";
constexpr static char frAtomName_Nitrogen[] = "Azote";
constexpr static char nlAtomName_Nitrogen[] = "Stikstof";
constexpr static char ptAtomName_Nitrogen[] = "Azoto";
constexpr static char itAtomName_Nitrogen[] = "Azoto";
constexpr static char deAtomName_Nitrogen[] = "Stickstoff";
constexpr static char esAtomName_Nitrogen[] = "Nitrógeno";
constexpr static char huAtomName_Nitrogen[] = "Nitrogén";
constexpr static char enAtomName_Nobelium[] = "Nobelium";
constexpr static char frAtomName_Nobelium[] = "Nobelium";
constexpr static char nlAtomName_Nobelium[] = "Nobelium";
constexpr static char ptAtomName_Nobelium[] = "Nobelium";
constexpr static char itAtomName_Nobelium[] = "Nobelium";
constexpr static char deAtomName_Nobelium[] = "Nobelium";
constexpr static char esAtomName_Nobelium[] = "Nobelio";
constexpr static char huAtomName_Nobelium[] = "Nobelium";
constexpr static char enAtomName_Osmium[] = "Osmium";
constexpr static char frAtomName_Osmium[] = "Osmium";
constexpr static char nlAtomName_Osmium[] = "Osmium";
constexpr static char ptAtomName_Osmium[] = "Osmio";
constexpr static char itAtomName_Osmium[] = "Osmio";
constexpr static char deAtomName_Osmium[] = "Osmium";
constexpr static char esAtomName_Osmium[] = "Osmio";
constexpr static char huAtomName_Osmium[] = "Ozmium";
constexpr static char enAtomName_Oxygen[] = "Oxygen";
constexpr static char frAtomName_Oxygen[] = "Oxygène";
constexpr static char nlAtomName_Oxygen[] = "Zuurstof";
constexpr static char ptAtomName_Oxygen[] = "Oxigênio";
constexpr static char itAtomName_Oxygen[] = "Ossigeno";
constexpr static char deAtomName_Oxygen[] = "Sauerstoff";
constexpr static char esAtomName_Oxygen[] = "Oxígeno";
constexpr static char huAtomName_Oxygen[] = "Oxigén";
constexpr static char enAtomName_Palladium[] = "Palladium";
constexpr static char frAtomName_Palladium[] = "Palladium";
constexpr static char nlAtomName_Palladium[] = "Palladium";
constexpr static char ptAtomName_Palladium[] = "Paládio";
constexpr static char itAtomName_Palladium[] = "Palladio";
constexpr static char deAtomName_Palladium[] = "Palladium";
constexpr static char esAtomName_Palladium[] = "Paladio";
constexpr static char huAtomName_Palladium[] = "Palládium";
constexpr static char enAtomName_Phosphorus[] = "Phosphorus";
constexpr static char frAtomName_Phosphorus[] = "Phosphore";
constexpr static char nlAtomName_Phosphorus[] = "Fosfor";
constexpr static char ptAtomName_Phosphorus[] = "Fósforo";
constexpr static char itAtomName_Phosphorus[] = "Fosforo";
constexpr static char deAtomName_Phosphorus[] = "Phosphor";
constexpr static char esAtomName_Phosphorus[] = "Fósforo";
constexpr static char huAtomName_Phosphorus[] = "Foszfor";
constexpr static char enAtomName_Platinum[] = "Platinum";
constexpr static char frAtomName_Platinum[] = "Platine";
constexpr static char nlAtomName_Platinum[] = "Platina";
constexpr static char ptAtomName_Platinum[] = "Platina";
constexpr static char itAtomName_Platinum[] = "Platino";
constexpr static char deAtomName_Platinum[] = "Platin";
constexpr static char esAtomName_Platinum[] = "Platino";
constexpr static char huAtomName_Platinum[] = "Platina";
constexpr static char enAtomName_Plutonium[] = "Plutonium";
constexpr static char frAtomName_Plutonium[] = "Plutonium";
constexpr static char nlAtomName_Plutonium[] = "Plutonium";
constexpr static char ptAtomName_Plutonium[] = "Plutônio";
constexpr static char itAtomName_Plutonium[] = "Plutonio";
constexpr static char deAtomName_Plutonium[] = "Plutonium";
constexpr static char esAtomName_Plutonium[] = "Plutonio";
constexpr static char huAtomName_Plutonium[] = "Plutónium";
constexpr static char enAtomName_Polonium[] = "Polonium";
constexpr static char frAtomName_Polonium[] = "Polonium";
constexpr static char nlAtomName_Polonium[] = "Polonium";
constexpr static char ptAtomName_Polonium[] = "Polônio";
constexpr static char itAtomName_Polonium[] = "Polonio";
constexpr static char deAtomName_Polonium[] = "Polonium";
constexpr static char esAtomName_Polonium[] = "Polonio";
constexpr static char huAtomName_Polonium[] = "Polónium";
constexpr static char enAtomName_Potassium[] = "Potassium";
constexpr static char frAtomName_Potassium[] = "Potassium";
constexpr static char nlAtomName_Potassium[] = "Kalium";
constexpr static char ptAtomName_Potassium[] = "Potássio";
constexpr static char itAtomName_Potassium[] = "Potassio";
constexpr static char deAtomName_Potassium[] = "Kalium";
constexpr static char esAtomName_Potassium[] = "Potasio";
constexpr static char huAtomName_Potassium[] = "Kálium";
constexpr static char enAtomName_Praseodymium[] = "Praseodymium";
constexpr static char frAtomName_Praseodymium[] = "Praséodyme";
constexpr static char nlAtomName_Praseodymium[] = "Praseodymium";
constexpr static char ptAtomName_Praseodymium[] = "Praseodímio";
constexpr static char itAtomName_Praseodymium[] = "Praseodimio";
constexpr static char deAtomName_Praseodymium[] = "Praseodym";
constexpr static char esAtomName_Praseodymium[] = "Praseodimio";
constexpr static char huAtomName_Praseodymium[] = "Praseodymium";
constexpr static char enAtomName_Promethium[] = "Promethium";
constexpr static char frAtomName_Promethium[] = "Prométhium";
constexpr static char nlAtomName_Promethium[] = "Promethium";
constexpr static char ptAtomName_Promethium[] = "Promécio";
constexpr static char itAtomName_Promethium[] = "Promezio";
constexpr static char deAtomName_Promethium[] = "Promethium";
constexpr static char esAtomName_Promethium[] = "Prometeo";
constexpr static char huAtomName_Promethium[] = "Prométium";
constexpr static char enAtomName_Protactinium[] = "Protactinium";
constexpr static char frAtomName_Protactinium[] = "Protactinium";
constexpr static char nlAtomName_Protactinium[] = "Protactinium";
constexpr static char ptAtomName_Protactinium[] = "Protactínio";
constexpr static char itAtomName_Protactinium[] = "Protoattinio";
constexpr static char deAtomName_Protactinium[] = "Protactinium";
constexpr static char esAtomName_Protactinium[] = "Protactinio";
constexpr static char huAtomName_Protactinium[] = "Protactinium";
constexpr static char enAtomName_Radium[] = "Radium";
constexpr static char frAtomName_Radium[] = "Radium";
constexpr static char nlAtomName_Radium[] = "Radium";
constexpr static char ptAtomName_Radium[] = "Rádio";
constexpr static char itAtomName_Radium[] = "Radio";
constexpr static char deAtomName_Radium[] = "Radium";
constexpr static char esAtomName_Radium[] = "Radio";
constexpr static char huAtomName_Radium[] = "Rádium";
constexpr static char enAtomName_Radon[] = "Radon";
constexpr static char frAtomName_Radon[] = "Radon";
constexpr static char nlAtomName_Radon[] = "Radon";
constexpr static char ptAtomName_Radon[] = "Radon";
constexpr static char itAtomName_Radon[] = "Radon";
constexpr static char deAtomName_Radon[] = "Radon";
constexpr static char esAtomName_Radon[] = "Radón";
constexpr static char huAtomName_Radon[] = "Radon";
constexpr static char enAtomName_Rhenium[] = "Rhenium";
constexpr static char frAtomName_Rhenium[] = "Rhénium";
constexpr static char nlAtomName_Rhenium[] = "Rhenium";
constexpr static char ptAtomName_Rhenium[] = "Rênio";
constexpr static char itAtomName_Rhenium[] = "Renio";
constexpr static char deAtomName_Rhenium[] = "Rhenium";
constexpr static char esAtomName_Rhenium[] = "Renio";
constexpr static char huAtomName_Rhenium[] = "Rénium";
constexpr static char enAtomName_Rhodium[] = "Rhodium";
constexpr static char frAtomName_Rhodium[] = "Rhodium";
constexpr static char nlAtomName_Rhodium[] = "Rhodium";
constexpr static char ptAtomName_Rhodium[] = "Ródio";
constexpr static char itAtomName_Rhodium[] = "Rodio";
constexpr static char deAtomName_Rhodium[] = "Rhodium";
constexpr static char esAtomName_Rhodium[] = "Rodio";
constexpr static char huAtomName_Rhodium[] = "Ródium";
constexpr static char enAtomName_Roentgenium[] = "Roentgenium";
constexpr static char frAtomName_Roentgenium[] = "Roentgenium";
constexpr static char nlAtomName_Roentgenium[] = "Roentgenium";
constexpr static char ptAtomName_Roentgenium[] = "Roentgênio";
constexpr static char itAtomName_Roentgenium[] = "Roentgenio";
constexpr static char deAtomName_Roentgenium[] = "Röntgenium";
constexpr static char esAtomName_Roentgenium[] = "Roentgenio";
constexpr static char huAtomName_Roentgenium[] = "Roentgenium";
constexpr static char enAtomName_Rubidium[] = "Rubidium";
constexpr static char frAtomName_Rubidium[] = "Rubidium";
constexpr static char nlAtomName_Rubidium[] = "Rubidium";
constexpr static char ptAtomName_Rubidium[] = "Rubídio";
constexpr static char itAtomName_Rubidium[] = "Rubidio";
constexpr static char deAtomName_Rubidium[] = "Rubidium";
constexpr static char esAtomName_Rubidium[] = "Rubidio";
constexpr static char huAtomName_Rubidium[] = "Rubídium";
constexpr static char enAtomName_Ruthemium[] = "Ruthemium";
constexpr static char frAtomName_Ruthemium[] = "Ruthemium";
constexpr static char nlAtomName_Ruthemium[] = "Ruthemium";
constexpr static char ptAtomName_Ruthemium[] = "Ruthemium";
constexpr static char itAtomName_Ruthemium[] = "Rutemio";
constexpr static char deAtomName_Ruthemium[] = "Ruthemium";
constexpr static char esAtomName_Ruthemium[] = "Ruhemio";
constexpr static char huAtomName_Ruthemium[] = "Ruthemium";
constexpr static char enAtomName_Rutherfordium[] = "Rutherfordium";
constexpr static char frAtomName_Rutherfordium[] = "Rutherfordium";
constexpr static char nlAtomName_Rutherfordium[] = "Rutherfordium";
constexpr static char ptAtomName_Rutherfordium[] = "Rutherfordium";
constexpr static char itAtomName_Rutherfordium[] = "Ruterfordio";
constexpr static char deAtomName_Rutherfordium[] = "Rutherfordium";
constexpr static char esAtomName_Rutherfordium[] = "Rutherfordio";
constexpr static char huAtomName_Rutherfordium[] = "Rutherfordium";
constexpr static char enAtomName_Samarium[] = "Samarium";
constexpr static char frAtomName_Samarium[] = "Samarium";
constexpr static char nlAtomName_Samarium[] = "Samarium";
constexpr static char ptAtomName_Samarium[] = "Samário";
constexpr static char itAtomName_Samarium[] = "Samario";
constexpr static char deAtomName_Samarium[] = "Samarium";
constexpr static char esAtomName_Samarium[] = "Samario";
constexpr static char huAtomName_Samarium[] = "Szamárium";
constexpr static char enAtomName_Scandium[] = "Scandium";
constexpr static char frAtomName_Scandium[] = "Scandium";
constexpr static char nlAtomName_Scandium[] = "Scandium";
constexpr static char ptAtomName_Scandium[] = "Escândio";
constexpr static char itAtomName_Scandium[] = "Scandio";
constexpr static char deAtomName_Scandium[] = "Scandium";
constexpr static char esAtomName_Scandium[] = "Escandio";
constexpr static char huAtomName_Scandium[] = "Scandium";
constexpr static char enAtomName_Seaborgium[] = "Seaborgium";
constexpr static char frAtomName_Seaborgium[] = "Seaborgium";
constexpr static char nlAtomName_Seaborgium[] = "Seaborgium";
constexpr static char ptAtomName_Seaborgium[] = "Seabórgio";
constexpr static char itAtomName_Seaborgium[] = "Seaborgio";
constexpr static char deAtomName_Seaborgium[] = "Seaborgium";
constexpr static char esAtomName_Seaborgium[] = "Seaborgio";
constexpr static char huAtomName_Seaborgium[] = "Seaborgium";
constexpr static char enAtomName_Selenium[] = "Selenium";
constexpr static char frAtomName_Selenium[] = "Sélénium";
constexpr static char nlAtomName_Selenium[] = "Selenium";
constexpr static char ptAtomName_Selenium[] = "Selênio";
constexpr static char itAtomName_Selenium[] = "Selenio";
constexpr static char deAtomName_Selenium[] = "Selen";
constexpr static char esAtomName_Selenium[] = "Selenio";
constexpr static char huAtomName_Selenium[] = "Szelén";
constexpr static char enAtomName_Silicon[] = "Silicon";
constexpr static char frAtomName_Silicon[] = "Silicium";
constexpr static char nlAtomName_Silicon[] = "Silicium";
constexpr static char ptAtomName_Silicon[] = "Silício";
constexpr static char itAtomName_Silicon[] = "Silicio";
constexpr static char deAtomName_Silicon[] = "Silizium";
constexpr static char esAtomName_Silicon[] = "Silicio";
constexpr static char huAtomName_Silicon[] = "Szilícium";
constexpr static char enAtomName_Silver[] = "Silver";
constexpr static char frAtomName_Silver[] = "Argent";
constexpr static char nlAtomName_Silver[] = "Zilver";
constexpr static char ptAtomName_Silver[] = "Prata";
constexpr static char itAtomName_Silver[] = "Argento";
constexpr static char deAtomName_Silver[] = "Silber";
constexpr static char esAtomName_Silver[] = "Plata";
constexpr static char huAtomName_Silver[] = "Ezüst";
constexpr static char enAtomName_Sodium[] = "Sodium";
constexpr static char frAtomName_Sodium[] = "Sodium";
constexpr static char nlAtomName_Sodium[] = "Natrium";
constexpr static char ptAtomName_Sodium[] = "Sódio";
constexpr static char itAtomName_Sodium[] = "Sodio";
constexpr static char deAtomName_Sodium[] = "Natrium";
constexpr static char esAtomName_Sodium[] = "Sodio";
constexpr static char huAtomName_Sodium[] = "Nátrium";
constexpr static char enAtomName_Strontium[] = "Strontium";
constexpr static char frAtomName_Strontium[] = "Strontium";
constexpr static char nlAtomName_Strontium[] = "Strontium";
constexpr static char ptAtomName_Strontium[] = "Estrôncio";
constexpr static char itAtomName_Strontium[] = "Stronzio";
constexpr static char deAtomName_Strontium[] = "Strontium";
constexpr static char esAtomName_Strontium[] = "Estroncio";
constexpr static char huAtomName_Strontium[] = "Stroncium";
constexpr static char enAtomName_Sulfur[] = "Sulfur";
constexpr static char frAtomName_Sulfur[] = "Soufre";
constexpr static char nlAtomName_Sulfur[] = "Zwavel";
constexpr static char ptAtomName_Sulfur[] = "Enxofre";
constexpr static char itAtomName_Sulfur[] = "Zolfo";
constexpr static char deAtomName_Sulfur[] = "Schwefel";
constexpr static char esAtomName_Sulfur[] = "Azufre";
constexpr static char huAtomName_Sulfur[] = "Kén";
constexpr static char enAtomName_Tantalum[] = "Tantalum";
constexpr static char frAtomName_Tantalum[] = "Tantale";
constexpr static char nlAtomName_Tantalum[] = "Tantaal";
constexpr static char ptAtomName_Tantalum[] = "Tântalo";
constexpr static char itAtomName_Tantalum[] = "Tantalio";
constexpr static char deAtomName_Tantalum[] = "Tantal";
constexpr static char esAtomName_Tantalum[] = "Tantalio";
constexpr static char huAtomName_Tantalum[] = "Tantál";
constexpr static char enAtomName_Technetium[] = "Technetium";
constexpr static char frAtomName_Technetium[] = "Technétium";
constexpr static char nlAtomName_Technetium[] = "Technetium";
constexpr static char ptAtomName_Technetium[] = "Tecnécio";
constexpr static char itAtomName_Technetium[] = "Tecnezio";
constexpr static char deAtomName_Technetium[] = "Technetium";
constexpr static char esAtomName_Technetium[] = "Tecnecio";
constexpr static char huAtomName_Technetium[] = "Technécium";
constexpr static char enAtomName_Tellurium[] = "Tellurium";
constexpr static char frAtomName_Tellurium[] = "Tellure";
constexpr static char nlAtomName_Tellurium[] = "Tellurium";
constexpr static char ptAtomName_Tellurium[] = "Telúrio";
constexpr static char itAtomName_Tellurium[] = "Tellurio";
constexpr static char deAtomName_Tellurium[] = "Tellur";
constexpr static char esAtomName_Tellurium[] = "Telurio";
constexpr static char huAtomName_Tellurium[] = "Tellúr";
constexpr static char enAtomName_Terbium[] = "Terbium";
constexpr static char frAtomName_Terbium[] = "Terbium";
constexpr static char nlAtomName_Terbium[] = "Terbium";
constexpr static char ptAtomName_Terbium[] = "Térbio";
constexpr static char itAtomName_Terbium[] = "Terbio";
constexpr static char deAtomName_Terbium[] = "Terbium";
constexpr static char esAtomName_Terbium[] = "Terbio";
constexpr static char huAtomName_Terbium[] = "Terbium";
constexpr static char enAtomName_Thalium[] = "Thalium";
constexpr static char frAtomName_Thalium[] = "Thalium";
constexpr static char nlAtomName_Thalium[] = "Thalium";
constexpr static char ptAtomName_Thalium[] = "Thalium";
constexpr static char itAtomName_Thalium[] = "Tallio";
constexpr static char deAtomName_Thalium[] = "Thalium";
constexpr static char esAtomName_Thalium[] = "Talio";
constexpr static char huAtomName_Thalium[] = "Talium";
constexpr static char enAtomName_Thorium[] = "Thorium";
constexpr static char frAtomName_Thorium[] = "Thorium";
constexpr static char nlAtomName_Thorium[] = "Thorium";
constexpr static char ptAtomName_Thorium[] = "Tório";
constexpr static char itAtomName_Thorium[] = "Torio";
constexpr static char deAtomName_Thorium[] = "Thorium";
constexpr static char esAtomName_Thorium[] = "Torio";
constexpr static char huAtomName_Thorium[] = "Tórium";
constexpr static char enAtomName_Thulium[] = "Thulium";
constexpr static char frAtomName_Thulium[] = "Thulium";
constexpr static char nlAtomName_Thulium[] = "Thulium";
constexpr static char ptAtomName_Thulium[] = "Túlio";
constexpr static char itAtomName_Thulium[] = "Tulio";
constexpr static char deAtomName_Thulium[] = "Thulium";
constexpr static char esAtomName_Thulium[] = "Tulio";
constexpr static char huAtomName_Thulium[] = "Túlium";
constexpr static char enAtomName_Tin[] = "Tin";
constexpr static char frAtomName_Tin[] = "Etain";
constexpr static char nlAtomName_Tin[] = "Blik";
constexpr static char ptAtomName_Tin[] = "Lata";
constexpr static char itAtomName_Tin[] = "Lattina";
constexpr static char deAtomName_Tin[] = "Zinn";
constexpr static char esAtomName_Tin[] = "Estaño";
constexpr static char huAtomName_Tin[] = "On";
constexpr static char enAtomName_Titanium[] = "Titanium";
constexpr static char frAtomName_Titanium[] = "Titane";
constexpr static char nlAtomName_Titanium[] = "Titanium";
constexpr static char ptAtomName_Titanium[] = "Titânio";
constexpr static char itAtomName_Titanium[] = "Titanio";
constexpr static char deAtomName_Titanium[] = "Titan";
constexpr static char esAtomName_Titanium[] = "Titanio";
constexpr static char huAtomName_Titanium[] = "Titán";
constexpr static char enAtomName_Tungsten[] = "Tungsten";
constexpr static char frAtomName_Tungsten[] = "Tungstène";
constexpr static char nlAtomName_Tungsten[] = "Wolfraam";
constexpr static char ptAtomName_Tungsten[] = "Tungstênio";
constexpr static char itAtomName_Tungsten[] = "Tungsteno";
constexpr static char deAtomName_Tungsten[] = "Wolfram";
constexpr static char esAtomName_Tungsten[] = "Tungsteno";
constexpr static char huAtomName_Tungsten[] = "Volfrám";
constexpr static char enAtomName_Uranium[] = "Uranium";
constexpr static char frAtomName_Uranium[] = "Uranium";
constexpr static char nlAtomName_Uranium[] = "Uranium";
constexpr static char ptAtomName_Uranium[] = "Urânio";
constexpr static char itAtomName_Uranium[] = "Uranio";
constexpr static char deAtomName_Uranium[] = "Uran";
constexpr static char esAtomName_Uranium[] = "Uranio";
constexpr static char huAtomName_Uranium[] = "Uránium";
constexpr static char enAtomName_Vanadium[] = "Vanadium";
constexpr static char frAtomName_Vanadium[] = "Vanadium";
constexpr static char nlAtomName_Vanadium[] = "Vanadium";
constexpr static char ptAtomName_Vanadium[] = "Vanádio";
constexpr static char itAtomName_Vanadium[] = "Vanadio";
constexpr static char deAtomName_Vanadium[] = "Vanadium";
constexpr static char esAtomName_Vanadium[] = "Vanadio";
constexpr static char huAtomName_Vanadium[] = "Vanádium";
constexpr static char enAtomName_Xenon[] = "Xenon";
constexpr static char frAtomName_Xenon[] = "Xénon";
constexpr static char nlAtomName_Xenon[] = "Xenon";
constexpr static char ptAtomName_Xenon[] = "Xenon";
constexpr static char itAtomName_Xenon[] = "Xeno";
constexpr static char deAtomName_Xenon[] = "Xenon";
constexpr static char esAtomName_Xenon[] = "Xenón";
constexpr static char huAtomName_Xenon[] = "Xenon";
constexpr static char enAtomName_Ytterbium[] = "Ytterbium";
constexpr static char frAtomName_Ytterbium[] = "Ytterbium";
constexpr static char nlAtomName_Ytterbium[] = "Ytterbium";
constexpr static char ptAtomName_Ytterbium[] = "Itérbio";
constexpr static char itAtomName_Ytterbium[] = "Itterbio";
constexpr static char deAtomName_Ytterbium[] = "Ytterbium";
constexpr static char esAtomName_Ytterbium[] = "Iterbio";
constexpr static char huAtomName_Ytterbium[] = "Itterbium";
constexpr static char enAtomName_Yttrium[] = "Yttrium";
constexpr static char frAtomName_Yttrium[] = "Yttrium";
constexpr static char nlAtomName_Yttrium[] = "Yttrium";
constexpr static char ptAtomName_Yttrium[] = "Itrio";
constexpr static char itAtomName_Yttrium[] = "Ittrio";
constexpr static char deAtomName_Yttrium[] = "Yttrium";
constexpr static char esAtomName_Yttrium[] = "Itrio";
constexpr static char huAtomName_Yttrium[] = "Ittrium";
constexpr static char enAtomName_Zinc[] = "Zinc";
constexpr static char frAtomName_Zinc[] = "Zinc";
constexpr static char nlAtomName_Zinc[] = "Zink";
constexpr static char ptAtomName_Zinc[] = "Zinco";
constexpr static char itAtomName_Zinc[] = "Zinco";
constexpr static char deAtomName_Zinc[] = "Zink";
constexpr static char esAtomName_Zinc[] = "Zinc";
constexpr static char huAtomName_Zinc[] = "Cink";
constexpr static char enAtomName_Zirconium[] = "Zirconium";
constexpr static char frAtomName_Zirconium[] = "Zirconium";
constexpr static char nlAtomName_Zirconium[] = "Zirkonium";
constexpr static char ptAtomName_Zirconium[] = "Zircônio";
constexpr static char itAtomName_Zirconium[] = "Zirconio";
constexpr static char deAtomName_Zirconium[] = "Zirkonium";
constexpr static char esAtomName_Zirconium[] = "Circonio";
constexpr static char huAtomName_Zirconium[] = "Cirkónium";
constexpr static char enAtomNeutrons[] = "Neutrons";
constexpr static char frAtomNeutrons[] = "Neutrons";
constexpr static char nlAtomNeutrons[] = "Neutronen";
constexpr static char ptAtomNeutrons[] = "Nêutrons";
constexpr static char itAtomNeutrons[] = "Neutroni";
constexpr static char deAtomNeutrons[] = "Neutronen";
constexpr static char esAtomNeutrons[] = "Neutrones";
constexpr static char huAtomNeutrons[] = "Semlegesek";
constexpr static char enAtomNum[] = "Protons";
constexpr static char frAtomNum[] = "Protons";
constexpr static char nlAtomNum[] = "Protonen";
constexpr static char ptAtomNum[] = "Prótons";
constexpr static char itAtomNum[] = "Protoni";
constexpr static char deAtomNum[] = "Protonen";
constexpr static char esAtomNum[] = "Protones";
constexpr static char huAtomNum[] = "Protonok";
constexpr static char enAtomSymbol[] = "Symbol";
constexpr static char frAtomSymbol[] = "Symbole";
constexpr static char nlAtomSymbol[] = "Symbool";
constexpr static char ptAtomSymbol[] = "Símbolo";
constexpr static char itAtomSymbol[] = "Simbolo";
constexpr static char deAtomSymbol[] = "Symbol";
constexpr static char esAtomSymbol[] = "Símbolo";
constexpr static char huAtomSymbol[] = "Szimbólum";
constexpr static char enAtomTypeACTINIDE[] = "Actinide";
constexpr static char frAtomTypeACTINIDE[] = "Actinide";
constexpr static char nlAtomTypeACTINIDE[] = "Actinide";
constexpr static char ptAtomTypeACTINIDE[] = "Actinide";
constexpr static char itAtomTypeACTINIDE[] = "Actinide";
constexpr static char deAtomTypeACTINIDE[] = "Actinide";
constexpr static char esAtomTypeACTINIDE[] = "Actínido";
constexpr static char huAtomTypeACTINIDE[] = "Aktinid";
constexpr static char enAtomTypeALKALIEARTHMETAL[] = "Alkaline earth metal";
constexpr static char frAtomTypeALKALIEARTHMETAL[] = "Métal alcalino-terreux";
constexpr static char nlAtomTypeALKALIEARTHMETAL[] = "Aardalkalimetaal";
constexpr static char ptAtomTypeALKALIEARTHMETAL[] = "Metal alcalino-terroso";
constexpr static char itAtomTypeALKALIEARTHMETAL[] = "Metallo alcalino terroso";
constexpr static char deAtomTypeALKALIEARTHMETAL[] = "Alkalisches Erdmetall";
constexpr static char esAtomTypeALKALIEARTHMETAL[] = "Metal alcalinotérreo";
constexpr static char huAtomTypeALKALIEARTHMETAL[] = "Alkáliföldfém";
constexpr static char enAtomTypeALKALIMETAL[] = "Alkali metal";
constexpr static char frAtomTypeALKALIMETAL[] = "Métal alcalin";
constexpr static char nlAtomTypeALKALIMETAL[] = "Reactief metaal";
constexpr static char ptAtomTypeALKALIMETAL[] = "Metal alcalino";
constexpr static char itAtomTypeALKALIMETAL[] = "Metallo alcalino";
constexpr static char deAtomTypeALKALIMETAL[] = "Alkalimetall";
constexpr static char esAtomTypeALKALIMETAL[] = "Metal alcalino";
constexpr static char huAtomTypeALKALIMETAL[] = "Alkálifém";
constexpr static char enAtomTypeHALLOGEN[] = "Halogen";
constexpr static char frAtomTypeHALLOGEN[] = "Halogène";
constexpr static char nlAtomTypeHALLOGEN[] = "Halogeen";
constexpr static char ptAtomTypeHALLOGEN[] = "Halogênio";
constexpr static char itAtomTypeHALLOGEN[] = "Alogena";
constexpr static char deAtomTypeHALLOGEN[] = "Halogen";
constexpr static char esAtomTypeHALLOGEN[] = "Halógeno";
constexpr static char huAtomTypeHALLOGEN[] = "Halogén";
constexpr static char enAtomTypeLANTHANIDE[] = "Lanthanide";
constexpr static char frAtomTypeLANTHANIDE[] = "Lanthanide";
constexpr static char nlAtomTypeLANTHANIDE[] = "Lanthanide";
constexpr static char ptAtomTypeLANTHANIDE[] = "Lantanídeo";
constexpr static char itAtomTypeLANTHANIDE[] = "Lantanide";
constexpr static char deAtomTypeLANTHANIDE[] = "Lanthanid";
constexpr static char esAtomTypeLANTHANIDE[] = "Lantánido";
constexpr static char huAtomTypeLANTHANIDE[] = "Lanthanide";
constexpr static char enAtomTypeMETALLOID[] = "Metalloid";
constexpr static char frAtomTypeMETALLOID[] = "Métalloïde";
constexpr static char nlAtomTypeMETALLOID[] = "Metalloïde";
constexpr static char ptAtomTypeMETALLOID[] = "Metalóide";
constexpr static char itAtomTypeMETALLOID[] = "Metalloide";
constexpr static char deAtomTypeMETALLOID[] = "Metalloid";
constexpr static char esAtomTypeMETALLOID[] = "Metaloide";
constexpr static char huAtomTypeMETALLOID[] = "Félfém";
constexpr static char enAtomTypeNOBLEGAS[] = "Noble gas";
constexpr static char frAtomTypeNOBLEGAS[] = "Gaz noble";
constexpr static char nlAtomTypeNOBLEGAS[] = "Nobel gas";
constexpr static char ptAtomTypeNOBLEGAS[] = "Gás nobre";
constexpr static char itAtomTypeNOBLEGAS[] = "Gas nobile";
constexpr static char deAtomTypeNOBLEGAS[] = "Edelgas";
constexpr static char esAtomTypeNOBLEGAS[] = "Gas noble";
constexpr static char huAtomTypeNOBLEGAS[] = "nemesgáz";
constexpr static char enAtomTypePOSTTRANSITIONMETAL[] = "Post-transition metal";
constexpr static char frAtomTypePOSTTRANSITIONMETAL[] = "Métal post-transition";
constexpr static char nlAtomTypePOSTTRANSITIONMETAL[] = "Metaal na overgang";
constexpr static char ptAtomTypePOSTTRANSITIONMETAL[] = "Metal pós-transição";
constexpr static char itAtomTypePOSTTRANSITIONMETAL[] = "Post-metallo di transizione";
constexpr static char deAtomTypePOSTTRANSITIONMETAL[] = "Metall nach dem Ubergang";
constexpr static char esAtomTypePOSTTRANSITIONMETAL[] = "Metal post-transición";
constexpr static char huAtomTypePOSTTRANSITIONMETAL[] = "Atmenet utáni fém";
constexpr static char enAtomTypeREACTIVENONMETAL[] = "Reactive non metal";
constexpr static char frAtomTypeREACTIVENONMETAL[] = "Réactif non métallique";
constexpr static char nlAtomTypeREACTIVENONMETAL[] = "Reactief niet-metaal";
constexpr static char ptAtomTypeREACTIVENONMETAL[] = "Não metal reativo";
constexpr static char itAtomTypeREACTIVENONMETAL[] = "Reattivo non metallico";
constexpr static char deAtomTypeREACTIVENONMETAL[] = "Reaktives Nichtmetall";
constexpr static char esAtomTypeREACTIVENONMETAL[] = "No metal reactivo";
constexpr static char huAtomTypeREACTIVENONMETAL[] = "Reaktív nem fém";
constexpr static char enAtomTypeTRANSITIONMETAL[] = "Transition metal";
constexpr static char frAtomTypeTRANSITIONMETAL[] = "Métal de transition";
constexpr static char nlAtomTypeTRANSITIONMETAL[] = "Overgangsmetaal";
constexpr static char ptAtomTypeTRANSITIONMETAL[] = "Metal de transição";
constexpr static char itAtomTypeTRANSITIONMETAL[] = "Metallo di transizione";
constexpr static char deAtomTypeTRANSITIONMETAL[] = "Ubergangsmetall";
constexpr static char esAtomTypeTRANSITIONMETAL[] = "Metal de transición";
constexpr static char huAtomTypeTRANSITIONMETAL[] = "Atmeneti fém";
constexpr static char enAtomTypeUNKNOWN[] = "Unknown";
constexpr static char frAtomTypeUNKNOWN[] = "Inconnu";
constexpr static char nlAtomTypeUNKNOWN[] = "Onbekend";
constexpr static char ptAtomTypeUNKNOWN[] = "Desconhecido";
constexpr static char itAtomTypeUNKNOWN[] = "Sconosciuto";
constexpr static char deAtomTypeUNKNOWN[] = "Unbekannt";
constexpr static char esAtomTypeUNKNOWN[] = "Desconocido";
constexpr static char huAtomTypeUNKNOWN[] = "Ismeretlen";
constexpr static char enAtomTypes[] = "Type";
constexpr static char frAtomTypes[] = "Type";
constexpr static char nlAtomTypes[] = "Type";
constexpr static char ptAtomTypes[] = "Modelo";
constexpr static char itAtomTypes[] = "genere";
constexpr static char deAtomTypes[] = "Typ";
constexpr static char esAtomTypes[] = "Escribe";
constexpr static char huAtomTypes[] = "Típus";
constexpr static char enAtomicMassUnitTag[] = "Atomic Mass Unit";
constexpr static char frAtomicMassUnitTag[] = "Unité de Masse Atomique";
constexpr static char nlAtomicMassUnitTag[] = "Atomaire massa-eenheid";
constexpr static char ptAtomicMassUnitTag[] = "Unidade de Massa Atómica";
constexpr static char itAtomicMassUnitTag[] = "Unità di massa atomica";
constexpr static char deAtomicMassUnitTag[] = "Atomare Masseneinheit";
constexpr static char esAtomicMassUnitTag[] = "Unidad de Masa Atómica";
constexpr static char huAtomicMassUnitTag[] = "Atomtömeg Egység";
constexpr static char enAutoImportScript[] = "Auto import in shell";
constexpr static char frAutoImportScript[] = "Importation auto dans la console";
constexpr static char nlAutoImportScript[] = "Automatisch importeren in shell";
constexpr static char ptAutoImportScript[] = "Importação auto no interpretador";
constexpr static char itAutoImportScript[] = "Auto importazione nella console";
constexpr static char deAutoImportScript[] = "Automatischer Import in die Konsole";
constexpr static char esAutoImportScript[] = "Importación auto en intérprete";
constexpr static char huAutoImportScript[] = "Script automata importálása";
constexpr static char enAutocomplete[] = "Autocomplete";
constexpr static char frAutocomplete[] = "Auto-complétion";
constexpr static char nlAutocomplete[] = "Autocomplete";
constexpr static char ptAutocomplete[] = "Preenchimento automático";
constexpr static char itAutocomplete[] = "Autocompletamento";
constexpr static char deAutocomplete[] = "Autovervollständigung";
constexpr static char esAutocomplete[] = "Autocompleción";
constexpr static char huAutocomplete[] = "Onkiegészítés";
constexpr static char enAvogadroTag[] = "Avogadro Constant";
constexpr static char frAvogadroTag[] = "Constante d'Avogadro";
constexpr static char nlAvogadroTag[] = "Avogadroconstante";
constexpr static char ptAvogadroTag[] = "Constante Avogadro";
constexpr static char itAvogadroTag[] = "Costanto di Avogadro";
constexpr static char deAvogadroTag[] = "Avogadro-Konstante";
constexpr static char esAvogadroTag[] = "Constante de Avogadro";
constexpr static char huAvogadroTag[] = "Avogadro Allandó";
constexpr static char enAxis[] = "Axes";
constexpr static char frAxis[] = "Axes";
constexpr static char nlAxis[] = "Assen";
constexpr static char ptAxis[] = "Eixos";
constexpr static char itAxis[] = "Assi";
constexpr static char deAxis[] = "Achse";
constexpr static char esAxis[] = "Ejes";
constexpr static char huAxis[] = "Tengelyek";
constexpr static char enBarStart[] = "X start";
constexpr static char frBarStart[] = "Début de la série";
constexpr static char nlBarStart[] = "X start";
constexpr static char ptBarStart[] = "Início da série";
constexpr static char itBarStart[] = "Inizio della serie";
constexpr static char deBarStart[] = "Beginn der Serie";
constexpr static char esBarStart[] = "Principio de la serie";
constexpr static char huBarStart[] = "X kezdet";
constexpr static char enBasedLogarithm[] = "Logarithm to base a";
constexpr static char frBasedLogarithm[] = "Logarithme de base a";
constexpr static char nlBasedLogarithm[] = "Logaritme met grondtal a";
constexpr static char ptBasedLogarithm[] = "Logaritmo na base a";
constexpr static char itBasedLogarithm[] = "Logaritmo di base a";
constexpr static char deBasedLogarithm[] = "Logarithmus zur Basis a";
constexpr static char esBasedLogarithm[] = "Logaritmo en base a";
constexpr static char huBasedLogarithm[] = "Logaritmus az alap";
constexpr static char enBattery[] = "Battery";
constexpr static char frBattery[] = "Batterie";
constexpr static char nlBattery[] = "Batterij";
constexpr static char ptBattery[] = "Bateria";
constexpr static char itBattery[] = "Batteria";
constexpr static char deBattery[] = "Batteriestatus";
constexpr static char esBattery[] = "Batería";
constexpr static char huBattery[] = "Akkumulátor";
constexpr static char enBetaPopUp[] = "Beta pop-up";
constexpr static char frBetaPopUp[] = "Rappel de version bêta";
constexpr static char nlBetaPopUp[] = "Bèta pop-up";
constexpr static char ptBetaPopUp[] = "Beta pop-up";
constexpr static char itBetaPopUp[] = "Promemoria beta";
constexpr static char deBetaPopUp[] = "Erinnerung: Vorabversion";
constexpr static char esBetaPopUp[] = "Beta pop-up";
constexpr static char huBetaPopUp[] = "Béta figyelmeztetés";
constexpr static char enBetaVersion[] = "BETA VERSION";
constexpr static char frBetaVersion[] = "VERSION BETA";
constexpr static char nlBetaVersion[] = "BETAVERSIE";
constexpr static char ptBetaVersion[] = "BETA VERSION";
constexpr static char itBetaVersion[] = "VERSIONE BETA";
constexpr static char deBetaVersion[] = "VORABVERSION";
constexpr static char esBetaVersion[] = "VERSION BETA";
constexpr static char huBetaVersion[] = "BETA VERZIO";
constexpr static char enBetaVersionMessage1[] = "";
constexpr static char frBetaVersionMessage1[] = "Votre appareil dispose d'une version bêta";
constexpr static char nlBetaVersionMessage1[] = "";
constexpr static char ptBetaVersionMessage1[] = "O seu dispositivo está a executar";
constexpr static char itBetaVersionMessage1[] = "Il vostro dispositivo dispone";
constexpr static char deBetaVersionMessage1[] = "";
constexpr static char esBetaVersionMessage1[] = "";
constexpr static char huBetaVersionMessage1[] = "";
constexpr static char enBetaVersionMessage2[] = "Your device runs a beta software.";
constexpr static char frBetaVersionMessage2[] = "du logiciel. Il est possible que certains";
constexpr static char nlBetaVersionMessage2[] = "Je apparaat draait op een bèta-software.";
constexpr static char ptBetaVersionMessage2[] = "um software beta.";
constexpr static char itBetaVersionMessage2[] = "di una versione beta del software.";
constexpr static char deBetaVersionMessage2[] = "Gerät führt eine Vorabversion aus.";
constexpr static char esBetaVersionMessage2[] = "Tu dispositivo está corriendo software en versión beta.";
constexpr static char huBetaVersionMessage2[] = "Az eszköz béta szoftvert futtat.";
constexpr static char enBetaVersionMessage3[] = "You might run into bugs or glitches.";
constexpr static char frBetaVersionMessage3[] = "bugs apparaissent.";
constexpr static char nlBetaVersionMessage3[] = "Je komt mogelijk bugs of glitches tegen.";
constexpr static char ptBetaVersionMessage3[] = "Pode encontrar bugs ou falhas.";
constexpr static char itBetaVersionMessage3[] = "Possono comparire alcuni bugs.";
constexpr static char deBetaVersionMessage3[] = "Sie könnten auf Fehler stoßen.";
constexpr static char esBetaVersionMessage3[] = "Podrían ocurrir errores.";
constexpr static char huBetaVersionMessage3[] = "Lehet, hogy hibákat észlel.";
constexpr static char enBetaVersionMessage4[] = "";
constexpr static char frBetaVersionMessage4[] = "Vous pouvez nous écrire pour nous";
constexpr static char nlBetaVersionMessage4[] = "";
constexpr static char ptBetaVersionMessage4[] = "";
constexpr static char itBetaVersionMessage4[] = "Per comunicarci un riscontro";
constexpr static char deBetaVersionMessage4[] = "";
constexpr static char esBetaVersionMessage4[] = "";
constexpr static char huBetaVersionMessage4[] = "";
constexpr static char enBetaVersionMessage5[] = "Please send any feedback to";
constexpr static char frBetaVersionMessage5[] = "faire part de vos retours à";
constexpr static char nlBetaVersionMessage5[] = "Feedback kun je sturen naar";
constexpr static char ptBetaVersionMessage5[] = "Por favor envie-nos o seu feedback para";
constexpr static char itBetaVersionMessage5[] = "potete scriverci a";
constexpr static char deBetaVersionMessage5[] = "Bitte senden Sie Feedback an";
constexpr static char esBetaVersionMessage5[] = "Por favor envía feedback a";
constexpr static char huBetaVersionMessage5[] = "Kérjük, küldjön minden visszajelzést a";
constexpr static char enBetaVersionMessage6[] = "contact@numworks.com";
constexpr static char frBetaVersionMessage6[] = "contact@numworks.fr";
constexpr static char nlBetaVersionMessage6[] = "contact@numworks.nl";
constexpr static char ptBetaVersionMessage6[] = "contacto@numworks.pt";
constexpr static char itBetaVersionMessage6[] = "contatto@numworks.it";
constexpr static char deBetaVersionMessage6[] = "contact@numworks.com";
constexpr static char esBetaVersionMessage6[] = "contact@numworks.com";
constexpr static char huBetaVersionMessage6[] = "contact@numworks.com email címre";
constexpr static char enBinaryBase[] = "Binary";
constexpr static char frBinaryBase[] = "Binaire";
constexpr static char nlBinaryBase[] = "Binair";
constexpr static char ptBinaryBase[] = "Binário";
constexpr static char itBinaryBase[] = "Binario";
constexpr static char deBinaryBase[] = "Binär";
constexpr static char esBinaryBase[] = "Binario";
constexpr static char huBinaryBase[] = "Bináris";
constexpr static char enBinomial[] = "Binomial";
constexpr static char frBinomial[] = "Binomiale";
constexpr static char nlBinomial[] = "Binomiaal";
constexpr static char ptBinomial[] = "Binomial";
constexpr static char itBinomial[] = "Binomiale";
constexpr static char deBinomial[] = "Binomial";
constexpr static char esBinomial[] = "Binomial";
constexpr static char huBinomial[] = "Binomiális";
constexpr static char enBinomialCDF[] = "P(X<=m) where X follows B(n,p)";
constexpr static char frBinomialCDF[] = "P(X<=m) où X suit B(n,p)";
constexpr static char nlBinomialCDF[] = "P(X<=m) waar X volgt B(n,p)";
constexpr static char ptBinomialCDF[] = "P(X<=m) onde X segue B(n,p)";
constexpr static char itBinomialCDF[] = "P(X<=m) dove X segue B(n,p)";
constexpr static char deBinomialCDF[] = "P(X<=m) wobei X auf B(n,p) folgt";
constexpr static char esBinomialCDF[] = "P(X<=m) donde X sigue B(n,p)";
constexpr static char huBinomialCDF[] = "P (X <= m), ahol X követi a B (n, p)";
constexpr static char enBinomialDistribution[] = "Binomial distribution";
constexpr static char frBinomialDistribution[] = "Loi binomiale";
constexpr static char nlBinomialDistribution[] = "Binomiale verdeling";
constexpr static char ptBinomialDistribution[] = "Distribuição binomial";
constexpr static char itBinomialDistribution[] = "Distribuzione binomiale";
constexpr static char deBinomialDistribution[] = "Binomialverteilung";
constexpr static char esBinomialDistribution[] = "Distribución binomial";
constexpr static char huBinomialDistribution[] = "Binomiális eloszlás";
constexpr static char enBinomialPDF[] = "P(X=m) where X follows B(n,p)";
constexpr static char frBinomialPDF[] = "P(X=m) où X suit B(n,p)";
constexpr static char nlBinomialPDF[] = "P(X=m) waar X volgt B(n,p)";
constexpr static char ptBinomialPDF[] = "P(X=m) onde X segue B(n,p)";
constexpr static char itBinomialPDF[] = "P(X=m) dove X segue B(n,p)";
constexpr static char deBinomialPDF[] = "P(X=m) wobei X auf B(n,p) folgt";
constexpr static char esBinomialPDF[] = "P(X=m) donde X sigue B(n,p)";
constexpr static char huBinomialPDF[] = "P (X = m), ahol X követi a B (n, p)";
constexpr static char enBohrMagnetonTag[] = "Bohr Magneton";
constexpr static char frBohrMagnetonTag[] = "Magnéton de Bohr";
constexpr static char nlBohrMagnetonTag[] = "Bohrmagneton";
constexpr static char ptBohrMagnetonTag[] = "Imã de Bohr";
constexpr static char itBohrMagnetonTag[] = "Magnetone di Bohr";
constexpr static char deBohrMagnetonTag[] = "Bohrmegneton";
constexpr static char esBohrMagnetonTag[] = "Magnéton de Bohr";
constexpr static char huBohrMagnetonTag[] = "Bohr Magneton";
constexpr static char enBohrRadiusTag[] = "Bohr Radius";
constexpr static char frBohrRadiusTag[] = "Rayon de Bohr";
constexpr static char nlBohrRadiusTag[] = "Bohrstraal";
constexpr static char ptBohrRadiusTag[] = "Raio Bohr";
constexpr static char itBohrRadiusTag[] = "Raggio di Bohr";
constexpr static char deBohrRadiusTag[] = "Bohr-Radius";
constexpr static char esBohrRadiusTag[] = "Radio de Bohr";
constexpr static char huBohrRadiusTag[] = "Bohr Sugár";
constexpr static char enBoltzmannTag[] = "Boltzmann Constant";
constexpr static char frBoltzmannTag[] = "Constante de Boltzmann";
constexpr static char nlBoltzmannTag[] = "Boltzmannconstante";
constexpr static char ptBoltzmannTag[] = "Constante Boltzmann";
constexpr static char itBoltzmannTag[] = "Costante di Boltzmann";
constexpr static char deBoltzmannTag[] = "Boltzmann Konstante";
constexpr static char esBoltzmannTag[] = "Constante Boltzmann";
constexpr static char huBoltzmannTag[] = "Boltzmann Allandó";
constexpr static char enBoxTab[] = "Box";
constexpr static char frBoxTab[] = "Boîte";
constexpr static char nlBoxTab[] = "Box";
constexpr static char ptBoxTab[] = "Caixa";
constexpr static char itBoxTab[] = "Box Plot";
constexpr static char deBoxTab[] = "Boxplot";
constexpr static char esBoxTab[] = "Caja";
constexpr static char huBoxTab[] = "Doboz";
constexpr static char enBrightness[] = "Brightness";
constexpr static char frBrightness[] = "Luminosité";
constexpr static char nlBrightness[] = "Helderheid";
constexpr static char ptBrightness[] = "Brilho";
constexpr static char itBrightness[] = "Luminosità";
constexpr static char deBrightness[] = "Helligkeit";
constexpr static char esBrightness[] = "Brillo";
constexpr static char huBrightness[] = "Fényerö";
constexpr static char enBrightnessSettings[] = "Brightness settings";
constexpr static char frBrightnessSettings[] = "Paramètres de luminosité";
constexpr static char nlBrightnessSettings[] = "Helderheidsinstellingen";
constexpr static char ptBrightnessSettings[] = "Configurações de brilho";
constexpr static char itBrightnessSettings[] = "Impostazioni di luminosità";
constexpr static char deBrightnessSettings[] = "Helligkeitseinstellungen";
constexpr static char esBrightnessSettings[] = "Configuración de brillo";
constexpr static char huBrightnessSettings[] = "Fényerő beállításai";
constexpr static char enBrightnessShortcut[] = "Shortcut steps";
constexpr static char frBrightnessShortcut[] = "Etapes du raccourci";
constexpr static char nlBrightnessShortcut[] = "Snelkoppelingsstappen";
constexpr static char ptBrightnessShortcut[] = "Passos de atalho";
constexpr static char itBrightnessShortcut[] = "Passaggi di scelta rapida";
constexpr static char deBrightnessShortcut[] = "Tastenkombinationsschritte";
constexpr static char esBrightnessShortcut[] = "Pasos de acceso directo";
constexpr static char huBrightnessShortcut[] = "Parancsikon lépések";
constexpr static char enBuiltinsAndKeywords[] = "Builtins and keywords";
constexpr static char frBuiltinsAndKeywords[] = "Fonctions natives et mots-clés";
constexpr static char nlBuiltinsAndKeywords[] = "Builtins and keywords";
constexpr static char ptBuiltinsAndKeywords[] = "Funções nativas e palavras-chave";
constexpr static char itBuiltinsAndKeywords[] = "Funzioni native e parole chiave";
constexpr static char deBuiltinsAndKeywords[] = "Native Funktionen & Schlüsselwörter";
constexpr static char esBuiltinsAndKeywords[] = "Funciones nativas y palabras clave";
constexpr static char huBuiltinsAndKeywords[] = "Beépített fonkciók és szókincs";
constexpr static char enCalcium[] = "Calcium";
constexpr static char frCalcium[] = "Calcium";
constexpr static char nlCalcium[] = "Calcium";
constexpr static char ptCalcium[] = "Cálcio";
constexpr static char itCalcium[] = "Calcio";
constexpr static char deCalcium[] = "Kalzium";
constexpr static char esCalcium[] = "Calcio";
constexpr static char huCalcium[] = "Kalcium";
constexpr static char enCalculApp[] = "Calculation";
constexpr static char frCalculApp[] = "Calculs";
constexpr static char nlCalculApp[] = "Rekenen";
constexpr static char ptCalculApp[] = "Cálculo";
constexpr static char itCalculApp[] = "Calcolo";
constexpr static char deCalculApp[] = "Berechnung";
constexpr static char esCalculApp[] = "Cálculo";
constexpr static char huCalculApp[] = "Számolás";
constexpr static char enCalculAppCapital[] = "CALCULATION";
constexpr static char frCalculAppCapital[] = "CALCULS";
constexpr static char nlCalculAppCapital[] = "REKENEN";
constexpr static char ptCalculAppCapital[] = "CALCULO";
constexpr static char itCalculAppCapital[] = "CALCOLO";
constexpr static char deCalculAppCapital[] = "BERECHNUNG";
constexpr static char esCalculAppCapital[] = "CALCULO";
constexpr static char huCalculAppCapital[] = "SZAMOLAS";
constexpr static char enCalculation[] = "Calculation";
constexpr static char frCalculation[] = "Calcul";
constexpr static char nlCalculation[] = "Differentiëren en integreren";
constexpr static char ptCalculation[] = "Cálculo";
constexpr static char itCalculation[] = "Calcolo";
constexpr static char deCalculation[] = "Berechnung";
constexpr static char esCalculation[] = "Cálculos";
constexpr static char huCalculation[] = "Számítás";
constexpr static char enCancel[] = "Cancel";
constexpr static char frCancel[] = "Annuler";
constexpr static char nlCancel[] = "Annuleer";
constexpr static char ptCancel[] = "Cancelar";
constexpr static char itCancel[] = "Annullare";
constexpr static char deCancel[] = "Abbrechen";
constexpr static char esCancel[] = "Cancelar";
constexpr static char huCancel[] = "Mégse";
constexpr static char enCanonicalForm[] = "Canonical form";
constexpr static char frCanonicalForm[] = "Forme canonique";
constexpr static char nlCanonicalForm[] = "Canonische vorm";
constexpr static char ptCanonicalForm[] = "Forma canónica";
constexpr static char itCanonicalForm[] = "Forma canonica";
constexpr static char deCanonicalForm[] = "Kanonische Form";
constexpr static char esCanonicalForm[] = "Forma canónica";
constexpr static char huCanonicalForm[] = "Kanonikus forma";
constexpr static char enCartesian[] = "Cartesian ";
constexpr static char frCartesian[] = "Algébrique ";
constexpr static char nlCartesian[] = "Cartesisch ";
constexpr static char ptCartesian[] = "Cartesiana ";
constexpr static char itCartesian[] = "Algebrico ";
constexpr static char deCartesian[] = "Kartesisch ";
constexpr static char esCartesian[] = "Binómica ";
constexpr static char huCartesian[] = "Kartéziánus ";
constexpr static char enCartesianType[] = "Cartesian ";
constexpr static char frCartesianType[] = "Cartésienne ";
constexpr static char nlCartesianType[] = "Cartesiaans ";
constexpr static char ptCartesianType[] = "Cartesiano ";
constexpr static char itCartesianType[] = "Cartesiana ";
constexpr static char deCartesianType[] = "Kartesisch ";
constexpr static char esCartesianType[] = "Cartesiano ";
constexpr static char huCartesianType[] = "Kartéziánus ";
constexpr static char enCatalog[] = "Catalog";
constexpr static char frCatalog[] = "Catalogue";
constexpr static char nlCatalog[] = "Catalogus";
constexpr static char ptCatalog[] = "Catálogo";
constexpr static char itCatalog[] = "Catalogo";
constexpr static char deCatalog[] = "Katalog";
constexpr static char esCatalog[] = "Catalog";
constexpr static char huCatalog[] = "Katalógus";
constexpr static char enCatalyticActivityDimension[] = "Catalytic activity";
constexpr static char frCatalyticActivityDimension[] = "Activité catalytique";
constexpr static char nlCatalyticActivityDimension[] = "Katalytische activiteit";
constexpr static char ptCatalyticActivityDimension[] = "Atividade catalítica";
constexpr static char itCatalyticActivityDimension[] = "Attività catalitica";
constexpr static char deCatalyticActivityDimension[] = "Katalytische Aktivität";
constexpr static char esCatalyticActivityDimension[] = "Actividad catalítica";
constexpr static char huCatalyticActivityDimension[] = "Katalitikus aktivitás";
constexpr static char enCeiling[] = "Ceiling";
constexpr static char frCeiling[] = "Partie entière par excès";
constexpr static char nlCeiling[] = "Afronden naar boven";
constexpr static char ptCeiling[] = "Teto";
constexpr static char itCeiling[] = "Parte intera superiore";
constexpr static char deCeiling[] = "Obergrenze";
constexpr static char esCeiling[] = "Techo";
constexpr static char huCeiling[] = "Plafon";
constexpr static char enChemistry[] = "Chemistry";
constexpr static char frChemistry[] = "Chimie";
constexpr static char nlChemistry[] = "Chemistry";
constexpr static char ptChemistry[] = "Química";
constexpr static char itChemistry[] = "Chemistry";
constexpr static char deChemistry[] = "Chemie";
constexpr static char esChemistry[] = "Química";
constexpr static char huChemistry[] = "Kémia";
constexpr static char enChiSquared[] = "Chi-squared";
constexpr static char frChiSquared[] = "Chi2";
constexpr static char nlChiSquared[] = "Chi-kwadraat";
constexpr static char ptChiSquared[] = "Qui-quadrado";
constexpr static char itChiSquared[] = "Chi2";
constexpr static char deChiSquared[] = "Chi-Quadrat";
constexpr static char esChiSquared[] = "Chi-cuadrado";
constexpr static char huChiSquared[] = "Chi-négyzet";
constexpr static char enChiSquaredDistribution[] = "Chi-squared distribution";
constexpr static char frChiSquaredDistribution[] = "Loi du Khi-2";
constexpr static char nlChiSquaredDistribution[] = "Chi-kwadraatverdeling";
constexpr static char ptChiSquaredDistribution[] = "Distribuição qui-quadrado";
constexpr static char itChiSquaredDistribution[] = "Distribuzione chi2";
constexpr static char deChiSquaredDistribution[] = "Chi-Quadrat-Verteilung";
constexpr static char esChiSquaredDistribution[] = "Distribución chi-cuadrado";
constexpr static char huChiSquaredDistribution[] = "Chi-négyzet eloszlás";
constexpr static char enChooseDistribution[] = "Choose the distribution";
constexpr static char frChooseDistribution[] = "Choisir le type de loi";
constexpr static char nlChooseDistribution[] = "Kies de kansverdeling";
constexpr static char ptChooseDistribution[] = "Selecionar a distribuição";
constexpr static char itChooseDistribution[] = "Scegliere il tipo di distribuzione";
constexpr static char deChooseDistribution[] = "Wählen Sie eine Verteilung";
constexpr static char esChooseDistribution[] = "Seleccionar la distribución";
constexpr static char huChooseDistribution[] = "Válassza ki a disztribúciót";
constexpr static char enChooseParameters[] = "Choose parameters";
constexpr static char frChooseParameters[] = "Choisir les paramètres";
constexpr static char nlChooseParameters[] = "Bepaal de parameters";
constexpr static char ptChooseParameters[] = "Selecionar os parâmetros";
constexpr static char itChooseParameters[] = "Scegliere i parametri";
constexpr static char deChooseParameters[] = "Parameter auswählen";
constexpr static char esChooseParameters[] = "Seleccionar parámetros";
constexpr static char huChooseParameters[] = "Paraméterek kiválasztása";
constexpr static char enChooseSequenceType[] = "Choose sequence type";
constexpr static char frChooseSequenceType[] = "Choisir le type de suite";
constexpr static char nlChooseSequenceType[] = "Kies type rij";
constexpr static char ptChooseSequenceType[] = "Escolha o tipo de sequência";
constexpr static char itChooseSequenceType[] = "Scegliere il tipo di successione";
constexpr static char deChooseSequenceType[] = "Bildungsgesetz der Folge auswählen";
constexpr static char esChooseSequenceType[] = "Seleccionar el tipo de sucesión";
constexpr static char huChooseSequenceType[] = "Válassza ki a sorozat típusát";
constexpr static char enCirculationQuantumTag[] = "Circulation Quantum";
constexpr static char frCirculationQuantumTag[] = "Quantum de Circulation";
constexpr static char nlCirculationQuantumTag[] = "Kwantumcirculatie";
constexpr static char ptCirculationQuantumTag[] = "Quantum de Circulação";
constexpr static char itCirculationQuantumTag[] = "Circolazione quantistica";
constexpr static char deCirculationQuantumTag[] = "Auflage-Quantum";
constexpr static char esCirculationQuantumTag[] = "Circulación Quantum";
constexpr static char huCirculationQuantumTag[] = "Keringési Kvantum";
constexpr static char enClearColumn[] = "Clear column";
constexpr static char frClearColumn[] = "Effacer la colonne";
constexpr static char nlClearColumn[] = "Wis kolom";
constexpr static char ptClearColumn[] = "Excluir coluna";
constexpr static char itClearColumn[] = "Cancella la colonna";
constexpr static char deClearColumn[] = "Spalte löschen";
constexpr static char esClearColumn[] = "Borrar la columna";
constexpr static char huClearColumn[] = "Oszlop törlése";
constexpr static char enCobalt[] = "Cobalt";
constexpr static char frCobalt[] = "Cobalt";
constexpr static char nlCobalt[] = "Kobalt";
constexpr static char ptCobalt[] = "Cobalto";
constexpr static char itCobalt[] = "Cobalto";
constexpr static char deCobalt[] = "Kobalt";
constexpr static char esCobalt[] = "Cobalto";
constexpr static char huCobalt[] = "Cobalt";
constexpr static char enColorBlue[] = "Blue ";
constexpr static char frColorBlue[] = "Bleu ";
constexpr static char nlColorBlue[] = "Blauw";
constexpr static char ptColorBlue[] = "Azul ";
constexpr static char itColorBlue[] = "Blu ";
constexpr static char deColorBlue[] = "Blau ";
constexpr static char esColorBlue[] = "Azul ";
constexpr static char huColorBlue[] = "Kék ";
constexpr static char enColorCyan[] = "Cyan ";
constexpr static char frColorCyan[] = "Cyan ";
constexpr static char nlColorCyan[] = "Cyaan ";
constexpr static char ptColorCyan[] = "Ciano";
constexpr static char itColorCyan[] = "Ciano";
constexpr static char deColorCyan[] = "Cyan ";
constexpr static char esColorCyan[] = "Cian ";
constexpr static char huColorCyan[] = "Cián ";
constexpr static char enColorGreen[] = "Green ";
constexpr static char frColorGreen[] = "Vert ";
constexpr static char nlColorGreen[] = "Groente";
constexpr static char ptColorGreen[] = "Verde ";
constexpr static char itColorGreen[] = "Verde ";
constexpr static char deColorGreen[] = "Grün ";
constexpr static char esColorGreen[] = "Verde ";
constexpr static char huColorGreen[] = "Zöld ";
constexpr static char enColorOrange[] = "Orange ";
constexpr static char frColorOrange[] = "Orange ";
constexpr static char nlColorOrange[] = "Oranje";
constexpr static char ptColorOrange[] = "Laranja ";
constexpr static char itColorOrange[] = "Arancia ";
constexpr static char deColorOrange[] = "Orange ";
constexpr static char esColorOrange[] = "Naranja ";
constexpr static char huColorOrange[] = "Narancssárga ";
constexpr static char enColorPink[] = "Pink ";
constexpr static char frColorPink[] = "Rose ";
constexpr static char nlColorPink[] = "Roze";
constexpr static char ptColorPink[] = "Cor de rosa ";
constexpr static char itColorPink[] = "Rosa ";
constexpr static char deColorPink[] = "Rosa ";
constexpr static char esColorPink[] = "Rosa ";
constexpr static char huColorPink[] = "Rózsaszín ";
constexpr static char enColorPurple[] = "Purple ";
constexpr static char frColorPurple[] = "Violet ";
constexpr static char nlColorPurple[] = "Purper";
constexpr static char ptColorPurple[] = "Roxa ";
constexpr static char itColorPurple[] = "Viola ";
constexpr static char deColorPurple[] = "Violett ";
constexpr static char esColorPurple[] = "Púrpura ";
constexpr static char huColorPurple[] = "Lila ";
constexpr static char enColorRed[] = "Red ";
constexpr static char frColorRed[] = "Rouge ";
constexpr static char nlColorRed[] = "rood";
constexpr static char ptColorRed[] = "Vermelho ";
constexpr static char itColorRed[] = "Rosso ";
constexpr static char deColorRed[] = "Rot ";
constexpr static char esColorRed[] = "Rojo ";
constexpr static char huColorRed[] = "Piros ";
constexpr static char enColorYellow[] = "Yellow ";
constexpr static char frColorYellow[] = "Jaune ";
constexpr static char nlColorYellow[] = "Geel";
constexpr static char ptColorYellow[] = "Amarelo ";
constexpr static char itColorYellow[] = "Giallo ";
constexpr static char deColorYellow[] = "Gelb ";
constexpr static char esColorYellow[] = "Amarillo ";
constexpr static char huColorYellow[] = "Sárga ";
constexpr static char enColumnOptions[] = "Column options";
constexpr static char frColumnOptions[] = "Options de la colonne";
constexpr static char nlColumnOptions[] = "Kolomopties";
constexpr static char ptColumnOptions[] = "Opções de coluna";
constexpr static char itColumnOptions[] = "Opzioni colonna";
constexpr static char deColumnOptions[] = "Optionen der Spalte";
constexpr static char esColumnOptions[] = "Opciones de la columna";
constexpr static char huColumnOptions[] = "Oszlop opciók";
constexpr static char enCombination[] = "Combination";
constexpr static char frCombination[] = "k parmi n";
constexpr static char nlCombination[] = "Combinatie";
constexpr static char ptCombination[] = "Combinação";
constexpr static char itCombination[] = "Combinazione";
constexpr static char deCombination[] = "Kombination";
constexpr static char esCombination[] = "Combinación";
constexpr static char huCombination[] = "Kombináció";
constexpr static char enCombinatorics[] = "Combinatorics";
constexpr static char frCombinatorics[] = "Dénombrement";
constexpr static char nlCombinatorics[] = "Combinatoriek";
constexpr static char ptCombinatorics[] = "Combinatória";
constexpr static char itCombinatorics[] = "Calcolo combinatorio";
constexpr static char deCombinatorics[] = "Kombinatorik";
constexpr static char esCombinatorics[] = "Combinatoria";
constexpr static char huCombinatorics[] = "Kombinatorika";
constexpr static char enComplexAbsoluteValue[] = "Absolute value";
constexpr static char frComplexAbsoluteValue[] = "Module";
constexpr static char nlComplexAbsoluteValue[] = "Absolute waarde";
constexpr static char ptComplexAbsoluteValue[] = "Módulo";
constexpr static char itComplexAbsoluteValue[] = "Modulo";
constexpr static char deComplexAbsoluteValue[] = "Betrag";
constexpr static char esComplexAbsoluteValue[] = "Modulo";
constexpr static char huComplexAbsoluteValue[] = "Abszolút érték";
constexpr static char enComplexFormat[] = "Complex format";
constexpr static char frComplexFormat[] = "Forme complexe";
constexpr static char nlComplexFormat[] = "Complex formaat";
constexpr static char ptComplexFormat[] = "Complexos";
constexpr static char itComplexFormat[] = "Forma complessa";
constexpr static char deComplexFormat[] = "Komplexe Zahlen";
constexpr static char esComplexFormat[] = "Forma compleja";
constexpr static char huComplexFormat[] = "Komplex formátum";
constexpr static char enComplexNumber[] = "Complex numbers";
constexpr static char frComplexNumber[] = "Nombres complexes";
constexpr static char nlComplexNumber[] = "Complexe getallen";
constexpr static char ptComplexNumber[] = "Números complexos";
constexpr static char itComplexNumber[] = "Numeri complessi";
constexpr static char deComplexNumber[] = "Komplexe Zahlen";
constexpr static char esComplexNumber[] = "Números complejos";
constexpr static char huComplexNumber[] = "Komplex számok";
constexpr static char enCompute[] = "Calculate";
constexpr static char frCompute[] = "Calculer";
constexpr static char nlCompute[] = "Bereken";
constexpr static char ptCompute[] = "Calcular";
constexpr static char itCompute[] = "Calcolare";
constexpr static char deCompute[] = "Berechnen";
constexpr static char esCompute[] = "Calcular";
constexpr static char huCompute[] = "Kiszámolás";
constexpr static char enComputeProbability[] = "Calculate probabilities";
constexpr static char frComputeProbability[] = "Calculer les probabilités";
constexpr static char nlComputeProbability[] = "Bereken kansen";
constexpr static char ptComputeProbability[] = "Calcular probabilidades";
constexpr static char itComputeProbability[] = "Calcolare le probabilità";
constexpr static char deComputeProbability[] = "Wahrscheinlichkeit berechnen";
constexpr static char esComputeProbability[] = "Calcular las probabilidades";
constexpr static char huComputeProbability[] = "Számítsa ki a valószínüségeket";
constexpr static char enConductanceQuantumTag[] = "Conductance Quantum";
constexpr static char frConductanceQuantumTag[] = "Quantum de Conductance";
constexpr static char nlConductanceQuantumTag[] = "Kwantumgeleiding";
constexpr static char ptConductanceQuantumTag[] = "Quantum de Conduta";
constexpr static char itConductanceQuantumTag[] = "Conduttanza quantistica";
constexpr static char deConductanceQuantumTag[] = "Leitwertquantum";
constexpr static char esConductanceQuantumTag[] = "Conductancia Quantum";
constexpr static char huConductanceQuantumTag[] = "Vezetőképesség Kvantum";
constexpr static char enConductivityConstants[] = "Conductivity constants";
constexpr static char frConductivityConstants[] = "Constantes de Conductivité";
constexpr static char nlConductivityConstants[] = "Geleidingsconstanten";
constexpr static char ptConductivityConstants[] = "Constantes de condutividade";
constexpr static char itConductivityConstants[] = "Costanti di conducibilità";
constexpr static char deConductivityConstants[] = "Leitfähigkeitskonstanten";
constexpr static char esConductivityConstants[] = "Constantes de conductividad";
constexpr static char huConductivityConstants[] = "Vezetőképességi konstansok";
constexpr static char enConfidence[] = "Confidence interval";
constexpr static char frConfidence[] = "Intervalle de confiance";
constexpr static char nlConfidence[] = "Betrouwbaarheidsinterval";
constexpr static char ptConfidence[] = "Intervalo de confiança";
constexpr static char itConfidence[] = "Intervallo di confidenza";
constexpr static char deConfidence[] = "Konfidenzintervall";
constexpr static char esConfidence[] = "Intervalo de confianza";
constexpr static char huConfidence[] = "Bizalmi intervallum";
constexpr static char enConfirmDiscard1[] = "All changes will be discarded";
constexpr static char frConfirmDiscard1[] = "Toutes les modifications apportées";
constexpr static char nlConfirmDiscard1[] = "Alle wijzigingen worden verwijderd";
constexpr static char ptConfirmDiscard1[] = "Todas as alterações serão perdidas";
constexpr static char itConfirmDiscard1[] = "Tutte le modifiche verranno perse";
constexpr static char deConfirmDiscard1[] = "Alle Anderungen werden verworfen";
constexpr static char esConfirmDiscard1[] = "Se perderán todos los cambios";
constexpr static char huConfirmDiscard1[] = "Minden változtatást elvetünk";
constexpr static char enConfirmDiscard2[] = "";
constexpr static char frConfirmDiscard2[] = "seront perdues";
constexpr static char nlConfirmDiscard2[] = "";
constexpr static char ptConfirmDiscard2[] = "";
constexpr static char itConfirmDiscard2[] = "";
constexpr static char deConfirmDiscard2[] = "";
constexpr static char esConfirmDiscard2[] = "";
constexpr static char huConfirmDiscard2[] = "";
constexpr static char enConjugate[] = "Conjugate";
constexpr static char frConjugate[] = "Conjugué";
constexpr static char nlConjugate[] = "Geconjugeerde";
constexpr static char ptConjugate[] = "Conjugado";
constexpr static char itConjugate[] = "Coniugato";
constexpr static char deConjugate[] = "Konjugiert";
constexpr static char esConjugate[] = "Conjugado";
constexpr static char huConjugate[] = "Konjugátum";
constexpr static char enConnectedMessage1[] = "To transfer data, browse";
constexpr static char frConnectedMessage1[] = "Pour transférer des données, connectez-";
constexpr static char nlConnectedMessage1[] = "Om gegevens op te slaan,";
constexpr static char ptConnectedMessage1[] = "Para transferir dados, navegue";
constexpr static char itConnectedMessage1[] = "Per trasferire dei dati, connettetevi";
constexpr static char deConnectedMessage1[] = "Um Daten zu übertragen, verbinden";
constexpr static char esConnectedMessage1[] = "Para transferir datos, visite";
constexpr static char huConnectedMessage1[] = "";
constexpr static char enConnectedMessage2[] = "our page from your computer";
constexpr static char frConnectedMessage2[] = "vous depuis votre ordinateur sur le site";
constexpr static char nlConnectedMessage2[] = "ga naar onze webpagina";
constexpr static char ptConnectedMessage2[] = "na nossa página no seu computador";
constexpr static char itConnectedMessage2[] = "dal vostro computer sul sito";
constexpr static char deConnectedMessage2[] = "Sie sich von Ihrem Computer aus mit";
constexpr static char esConnectedMessage2[] = "nuestra página desde su ordenador";
constexpr static char huConnectedMessage2[] = "Adat másolásához csatlakozzon";
constexpr static char enConnectedMessage3[] = "getomega.dev/ide";
constexpr static char frConnectedMessage3[] = "getomega.dev/ide";
constexpr static char nlConnectedMessage3[] = "getomega.dev/ide";
constexpr static char ptConnectedMessage3[] = "getomega.dev/ide";
constexpr static char itConnectedMessage3[] = "getomega.dev/ide";
constexpr static char deConnectedMessage3[] = "getomega.dev/ide.";
constexpr static char esConnectedMessage3[] = "getomega.dev/ide";
constexpr static char huConnectedMessage3[] = "fel getomega.dev/ide ra.";
constexpr static char enConnectedMessage4[] = "Press the BACK key of your";
constexpr static char frConnectedMessage4[] = "Appuyez sur la touche RETOUR";
constexpr static char nlConnectedMessage4[] = "Druk op de TERUG toets van je";
constexpr static char ptConnectedMessage4[] = "Pressione o botão RETURN na";
constexpr static char itConnectedMessage4[] = "Premere sul tasto INDIETRO della";
constexpr static char deConnectedMessage4[] = "Drücken Sie die Zurück-Taste am";
constexpr static char esConnectedMessage4[] = "Pulse el botón RETURN de la";
constexpr static char huConnectedMessage4[] = "Nyomjon majd a VISSZA gombra";
constexpr static char enConnectedMessage5[] = "calculator or unplug it to";
constexpr static char frConnectedMessage5[] = "de la calculatrice ou débranchez-la";
constexpr static char nlConnectedMessage5[] = "rekenmachine of verwijder de";
constexpr static char ptConnectedMessage5[] = "calculadora ou desligue-a para a";
constexpr static char itConnectedMessage5[] = "calcolatrice o scollegatela per";
constexpr static char deConnectedMessage5[] = "Taschenrechner oder Kabel abziehen,";
constexpr static char esConnectedMessage5[] = "calculadora o desenchúfela para";
constexpr static char huConnectedMessage5[] = "vagy huzza ki a kábelt azért";
constexpr static char enConnectedMessage6[] = "disconnect it.";
constexpr static char frConnectedMessage6[] = "pour la déconnecter.";
constexpr static char nlConnectedMessage6[] = " kabel om hem los te koppelen.";
constexpr static char ptConnectedMessage6[] = "desconectar.";
constexpr static char itConnectedMessage6[] = "disconnetterla.";
constexpr static char deConnectedMessage6[] = "um die Verbindung zu trennen.";
constexpr static char esConnectedMessage6[] = "desconectarla.";
constexpr static char huConnectedMessage6[] = "hogy a másolás véget érjen.";
constexpr static char enConsole[] = "Python shell";
constexpr static char frConsole[] = "Console d'exécution";
constexpr static char nlConsole[] = "Python shell";
constexpr static char ptConsole[] = "Interpretador interativo";
constexpr static char itConsole[] = "Console d'esecuzione";
constexpr static char deConsole[] = "Interaktive Konsole";
constexpr static char esConsole[] = "Interprete de comandos";
constexpr static char huConsole[] = "Konzol";
constexpr static char enContributors[] = "Contributors";
constexpr static char frContributors[] = "Contributeurs";
constexpr static char nlContributors[] = "Contributors";
constexpr static char ptContributors[] = "Contribuidores";
constexpr static char itContributors[] = "Contributors";
constexpr static char deContributors[] = "Mitwirkende";
constexpr static char esContributors[] = "Contribuyentes";
constexpr static char huContributors[] = "Közremüködök";
constexpr static char enCopper[] = "Copper";
constexpr static char frCopper[] = "Cuivre";
constexpr static char nlCopper[] = "Koper";
constexpr static char ptCopper[] = "Cobre";
constexpr static char itCopper[] = "Rame";
constexpr static char deCopper[] = "Kupfer";
constexpr static char esCopper[] = "cobre";
constexpr static char huCopper[] = "Réz";
constexpr static char enCopyColumnInList[] = "Export the column to a list";
constexpr static char frCopyColumnInList[] = "Copier la colonne dans une liste";
constexpr static char nlCopyColumnInList[] = "Exporteer de kolom naar een lijst";
constexpr static char ptCopyColumnInList[] = "Copiar a coluna para uma lista";
constexpr static char itCopyColumnInList[] = "Copia colonna in una lista";
constexpr static char deCopyColumnInList[] = "Die Spalte in einer Liste kopieren";
constexpr static char esCopyColumnInList[] = "Copiar la columna en una lista";
constexpr static char huCopyColumnInList[] = "Az oszlopot egy listába másolni";
constexpr static char enCoulombTag[] = "Coulomb Constant";
constexpr static char frCoulombTag[] = "Constante de Coulomb";
constexpr static char nlCoulombTag[] = "Coulombconstante";
constexpr static char ptCoulombTag[] = "Constante de Coulomb";
constexpr static char itCoulombTag[] = "Costante di coulomb";
constexpr static char deCoulombTag[] = "Coulomb-Konstante";
constexpr static char esCoulombTag[] = "Constante de Coulomb";
constexpr static char huCoulombTag[] = "Coulomb állandó";
constexpr static char enCountry[] = "Country";
constexpr static char frCountry[] = "Pays";
constexpr static char nlCountry[] = "Land";
constexpr static char ptCountry[] = "País";
constexpr static char itCountry[] = "Paese";
constexpr static char deCountry[] = "Land";
constexpr static char esCountry[] = "País";
constexpr static char huCountry[] = "Ország";
constexpr static char enCountryCA[] = "Canada ";
constexpr static char frCountryCA[] = "Canada ";
constexpr static char nlCountryCA[] = "Canada ";
constexpr static char ptCountryCA[] = "Canadá ";
constexpr static char itCountryCA[] = "Canada ";
constexpr static char deCountryCA[] = "Kanada ";
constexpr static char esCountryCA[] = "Canadá ";
constexpr static char huCountryCA[] = "Kanada ";
constexpr static char enCountryDE[] = "Germany ";
constexpr static char frCountryDE[] = "Allemagne ";
constexpr static char nlCountryDE[] = "Duitsland ";
constexpr static char ptCountryDE[] = "Alemanha ";
constexpr static char itCountryDE[] = "Germania ";
constexpr static char deCountryDE[] = "Deutschland ";
constexpr static char esCountryDE[] = "Alemania ";
constexpr static char huCountryDE[] = "Németország ";
constexpr static char enCountryES[] = "Spain ";
constexpr static char frCountryES[] = "Espagne ";
constexpr static char nlCountryES[] = "Spanje ";
constexpr static char ptCountryES[] = "Espanha ";
constexpr static char itCountryES[] = "Spagna ";
constexpr static char deCountryES[] = "Spanien ";
constexpr static char esCountryES[] = "España ";
constexpr static char huCountryES[] = "Spanyolország ";
constexpr static char enCountryFR[] = "France ";
constexpr static char frCountryFR[] = "France ";
constexpr static char nlCountryFR[] = "Frankrijk ";
constexpr static char ptCountryFR[] = "França ";
constexpr static char itCountryFR[] = "Francia ";
constexpr static char deCountryFR[] = "Frankreich ";
constexpr static char esCountryFR[] = "Francia ";
constexpr static char huCountryFR[] = "Franciaország ";
constexpr static char enCountryGB[] = "United Kingdom ";
constexpr static char frCountryGB[] = "Royaume-Uni ";
constexpr static char nlCountryGB[] = "Verenigd Koninkrijk ";
constexpr static char ptCountryGB[] = "Reino Unido ";
constexpr static char itCountryGB[] = "Regno Unito ";
constexpr static char deCountryGB[] = "Vereinigtes Königreich ";
constexpr static char esCountryGB[] = "Reino Unido ";
constexpr static char huCountryGB[] = "Egyesült Királyság ";
constexpr static char enCountryIT[] = "Italy ";
constexpr static char frCountryIT[] = "Italie ";
constexpr static char nlCountryIT[] = "Italië ";
constexpr static char ptCountryIT[] = "Itália ";
constexpr static char itCountryIT[] = "Italia ";
constexpr static char deCountryIT[] = "Italien ";
constexpr static char esCountryIT[] = "Italia ";
constexpr static char huCountryIT[] = "Olaszország ";
constexpr static char enCountryNL[] = "Netherlands ";
constexpr static char frCountryNL[] = "Pays-Bas ";
constexpr static char nlCountryNL[] = "Nederland ";
constexpr static char ptCountryNL[] = "Países Baixos ";
constexpr static char itCountryNL[] = "Paesi Bassi ";
constexpr static char deCountryNL[] = "Niederlande ";
constexpr static char esCountryNL[] = "Países Bajos ";
constexpr static char huCountryNL[] = "Hollandia ";
constexpr static char enCountryPT[] = "Portugal ";
constexpr static char frCountryPT[] = "Portugal ";
constexpr static char nlCountryPT[] = "Portugal ";
constexpr static char ptCountryPT[] = "Portugal ";
constexpr static char itCountryPT[] = "Portogallo ";
constexpr static char deCountryPT[] = "Portugal ";
constexpr static char esCountryPT[] = "Portugal ";
constexpr static char huCountryPT[] = "Portugália ";
constexpr static char enCountryUS[] = "United States ";
constexpr static char frCountryUS[] = "Etats-Unis ";
constexpr static char nlCountryUS[] = "Verenigde Staten ";
constexpr static char ptCountryUS[] = "Estados Unidos ";
constexpr static char itCountryUS[] = "Stati Uniti ";
constexpr static char deCountryUS[] = "Vereinigte Staaten ";
constexpr static char esCountryUS[] = "Estados Unidos ";
constexpr static char huCountryUS[] = "Egyesült Allamok ";
constexpr static char enCountryWW[] = "International ";
constexpr static char frCountryWW[] = "International ";
constexpr static char nlCountryWW[] = "Internationale ";
constexpr static char ptCountryWW[] = "Internacional ";
constexpr static char itCountryWW[] = "Internazionale ";
constexpr static char deCountryWW[] = "International ";
constexpr static char esCountryWW[] = "Internacional ";
constexpr static char huCountryWW[] = "Nemzetközi ";
constexpr static char enCountryWarning1[] = "This setting defines the";
constexpr static char frCountryWarning1[] = "Ce réglage permet de définir les";
constexpr static char nlCountryWarning1[] = "Deze instelling definieert de";
constexpr static char ptCountryWarning1[] = "Esta opção define as convenções";
constexpr static char itCountryWarning1[] = "Questa opzione permette di definire le";
constexpr static char deCountryWarning1[] = "Einstellung definiert verwendete";
constexpr static char esCountryWarning1[] = "Este ajuste define las convenciones";
constexpr static char huCountryWarning1[] = "Ez a beállítás meghatározza az";
constexpr static char enCountryWarning2[] = "mathematical conventions used.";
constexpr static char frCountryWarning2[] = "conventions mathématiques utilisées.";
constexpr static char nlCountryWarning2[] = "gebruikte wiskundige conventies.";
constexpr static char ptCountryWarning2[] = "matemáticas utilizadas.";
constexpr static char itCountryWarning2[] = "convenzioni matematiche utilizzate.";
constexpr static char deCountryWarning2[] = "mathematischen Konventionen.";
constexpr static char esCountryWarning2[] = "matemáticas utilizadas.";
constexpr static char huCountryWarning2[] = "alkalmazott tematikus konvenciókat.";
constexpr static char enCovariance[] = "Covariance";
constexpr static char frCovariance[] = "Covariance";
constexpr static char nlCovariance[] = "Covariantie";
constexpr static char ptCovariance[] = "Covariância";
constexpr static char itCovariance[] = "Covarianza";
constexpr static char deCovariance[] = "Kovarianz";
constexpr static char esCovariance[] = "Covarianza";
constexpr static char huCovariance[] = "Kovariancia";
constexpr static char enCross[] = "Cross product";
constexpr static char frCross[] = "Produit vectoriel";
constexpr static char nlCross[] = "Kruisproduct";
constexpr static char ptCross[] = "Produto vetorial";
constexpr static char itCross[] = "Prodotto vettoriale";
constexpr static char deCross[] = "Kreuzprodukt";
constexpr static char esCross[] = "Producto vectorial";
constexpr static char huCross[] = "Kereszt termék";
constexpr static char enCubic[] = "Cubic";
constexpr static char frCubic[] = "Cubique";
constexpr static char nlCubic[] = "Derdegraads";
constexpr static char ptCubic[] = "Cúbica";
constexpr static char itCubic[] = "Cubica";
constexpr static char deCubic[] = "Kubische";
constexpr static char esCubic[] = "Cúbica";
constexpr static char huCubic[] = "Kockás";
constexpr static char enCurrentDimension[] = "Running";
constexpr static char frCurrentDimension[] = "Courant";
constexpr static char nlCurrentDimension[] = "Rennen";
constexpr static char ptCurrentDimension[] = "Corrida";
constexpr static char itCurrentDimension[] = "In esecuzione";
constexpr static char deCurrentDimension[] = "Betrieb";
constexpr static char esCurrentDimension[] = "Correr";
constexpr static char huCurrentDimension[] = "Futó";
constexpr static char enCurveType[] = "Curve type";
constexpr static char frCurveType[] = "Type de courbe";
constexpr static char nlCurveType[] = "Kromme type";
constexpr static char ptCurveType[] = "Tipo de curva";
constexpr static char itCurveType[] = "Tipo di curva";
constexpr static char deCurveType[] = "Bildungsgesetz der Kurve";
constexpr static char esCurveType[] = "Tipo de curva";
constexpr static char huCurveType[] = "Görbe típus";
constexpr static char enD1FisherDefinition[] = "d1: Degrees of freedom of the numerator";
constexpr static char frD1FisherDefinition[] = "d1 : Degrés de liberté du numérateur";
constexpr static char nlD1FisherDefinition[] = "d1: Vrijheidsgraden in de teller";
constexpr static char ptD1FisherDefinition[] = "d1 : Graus de liberdade do numerador";
constexpr static char itD1FisherDefinition[] = "d1 : Gradi di libertà del numeratore";
constexpr static char deD1FisherDefinition[] = "d1: Freiheitsgrade des Zählers";
constexpr static char esD1FisherDefinition[] = "d1 : Grados de libertad del numerador";
constexpr static char huD1FisherDefinition[] = "d1: a számláló szabadságfokai";
constexpr static char enD2FisherDefinition[] = "d2: Degrees of freedom of the denominator";
constexpr static char frD2FisherDefinition[] = "d2 : Degrés de liberté du dénominateur";
constexpr static char nlD2FisherDefinition[] = "d2: Vrijheidsgraden in de noemer";
constexpr static char ptD2FisherDefinition[] = "d2 : Graus de liberdade do denominador";
constexpr static char itD2FisherDefinition[] = "d2 : Gradi di libertà del denominatore";
constexpr static char deD2FisherDefinition[] = "d2: Freiheitsgrade des Nenners";
constexpr static char esD2FisherDefinition[] = "d2 : Grados de libertad del denominador";
constexpr static char huD2FisherDefinition[] = "d2: a nevezó szabadságfokai";
constexpr static char enDataNotSuitable[] = "Data not suitable";
constexpr static char frDataNotSuitable[] = "Les données ne conviennent pas";
constexpr static char nlDataNotSuitable[] = "Gegevens niet geschikt";
constexpr static char ptDataNotSuitable[] = "Dados não adequados";
constexpr static char itDataNotSuitable[] = "I dati non sono adeguati";
constexpr static char deDataNotSuitable[] = "Daten nicht geeignet";
constexpr static char esDataNotSuitable[] = "Datos no adecuados";
constexpr static char huDataNotSuitable[] = "Az adatok nem felelnek meg";
constexpr static char enDataNotSuitableForRegression[] = " Data not suitable for this regression model";
constexpr static char frDataNotSuitableForRegression[] = "Les données ne conviennent pas";
constexpr static char nlDataNotSuitableForRegression[] = " Data niet geschikt voor dit regressiemodel";
constexpr static char ptDataNotSuitableForRegression[] = "Dados não adequados";
constexpr static char itDataNotSuitableForRegression[] = "I dati non sono adeguati";
constexpr static char deDataNotSuitableForRegression[] = "Daten sind nicht geeignet";
constexpr static char esDataNotSuitableForRegression[] = "Datos no adecuados";
constexpr static char huDataNotSuitableForRegression[] = "Ezek az adatok nem megfelelö ehhez a regressziós modellhez";
constexpr static char enDataTab[] = "Data";
constexpr static char frDataTab[] = "Données";
constexpr static char nlDataTab[] = "Gegevens";
constexpr static char ptDataTab[] = "Dados";
constexpr static char itDataTab[] = "Dati";
constexpr static char deDataTab[] = "Daten";
constexpr static char esDataTab[] = "Datos";
constexpr static char huDataTab[] = "Adatok";
constexpr static char enDate[] = "Date";
constexpr static char frDate[] = "Date";
constexpr static char nlDate[] = "Date";
constexpr static char ptDate[] = "Date";
constexpr static char itDate[] = "Date";
constexpr static char deDate[] = "Datum";
constexpr static char esDate[] = "Fecha";
constexpr static char huDate[] = "Datum";
constexpr static char enDateTime[] = "Date/time";
constexpr static char frDateTime[] = "Date/heure";
constexpr static char nlDateTime[] = "Date/time";
constexpr static char ptDateTime[] = "Date/time";
constexpr static char itDateTime[] = "Date/time";
constexpr static char deDateTime[] = "Datum/Uhrzeit";
constexpr static char esDateTime[] = "Fecha/Hora";
constexpr static char huDateTime[] = "Dátum/óra";
constexpr static char enDecimal[] = "Decimal ";
constexpr static char frDecimal[] = "Décimal ";
constexpr static char nlDecimal[] = "Decimaal ";
constexpr static char ptDecimal[] = "Decimal ";
constexpr static char itDecimal[] = "Decimale ";
constexpr static char deDecimal[] = "Dezimal ";
constexpr static char esDecimal[] = "Decimal ";
constexpr static char huDecimal[] = "Tizedes ";
constexpr static char enDecimalBase[] = "Decimal";
constexpr static char frDecimalBase[] = "Décimal";
constexpr static char nlDecimalBase[] = "Decimaal";
constexpr static char ptDecimalBase[] = "Decimal";
constexpr static char itDecimalBase[] = "Decimale";
constexpr static char deDecimalBase[] = "Dezimal";
constexpr static char esDecimalBase[] = "Decimal";
constexpr static char huDecimalBase[] = "Decimális";
constexpr static char enDeg[] = "deg";
constexpr static char frDeg[] = "deg";
constexpr static char nlDeg[] = "deg";
constexpr static char ptDeg[] = "gra";
constexpr static char itDeg[] = "deg";
constexpr static char deDeg[] = "gra";
constexpr static char esDeg[] = "gra";
constexpr static char huDeg[] = "deg";
constexpr static char enDegrees[] = "Degrees ";
constexpr static char frDegrees[] = "Degrés ";
constexpr static char nlDegrees[] = "Graden ";
constexpr static char ptDegrees[] = "Graus ";
constexpr static char itDegrees[] = "Gradi ";
constexpr static char deDegrees[] = "Grad ";
constexpr static char esDegrees[] = "Grados ";
constexpr static char huDegrees[] = "Fokok ";
constexpr static char enDegreesOfFreedomDefinition[] = "k: Degrees of freedom";
constexpr static char frDegreesOfFreedomDefinition[] = "k : Degrés de liberté";
constexpr static char nlDegreesOfFreedomDefinition[] = "k: Vrijheidsgraden";
constexpr static char ptDegreesOfFreedomDefinition[] = "k : Graus de liberdade";
constexpr static char itDegreesOfFreedomDefinition[] = "k : Gradi di libertà";
constexpr static char deDegreesOfFreedomDefinition[] = "k: Anzahl der Freiheitsgrade";
constexpr static char esDegreesOfFreedomDefinition[] = "k : Grados de libertad";
constexpr static char huDegreesOfFreedomDefinition[] = "k: szabadságfokok";
constexpr static char enDeleteFunction[] = "Delete function";
constexpr static char frDeleteFunction[] = "Supprimer la fonction";
constexpr static char nlDeleteFunction[] = "Functie verwijderen";
constexpr static char ptDeleteFunction[] = "Eliminar a função";
constexpr static char itDeleteFunction[] = "Cancella funzione";
constexpr static char deDeleteFunction[] = "Funktion löschen";
constexpr static char esDeleteFunction[] = "Eliminar la función";
constexpr static char huDeleteFunction[] = "Funkció törlése";
constexpr static char enDeleteScript[] = "Delete script";
constexpr static char frDeleteScript[] = "Supprimer le script";
constexpr static char nlDeleteScript[] = "Script verwijderen";
constexpr static char ptDeleteScript[] = "Eliminar o script";
constexpr static char itDeleteScript[] = "Eliminare lo script";
constexpr static char deDeleteScript[] = "Skript löschen";
constexpr static char esDeleteScript[] = "Eliminar el archivo";
constexpr static char huDeleteScript[] = "Script törlése";
constexpr static char enDeleteSequence[] = "Delete sequence";
constexpr static char frDeleteSequence[] = "Supprimer la suite";
constexpr static char nlDeleteSequence[] = "Rij verwijderen";
constexpr static char ptDeleteSequence[] = "Eliminar a sequência";
constexpr static char itDeleteSequence[] = "Cancella la successione";
constexpr static char deDeleteSequence[] = "Folge löschen";
constexpr static char esDeleteSequence[] = "Eliminar la sucesión";
constexpr static char huDeleteSequence[] = "Sorozat törlése";
constexpr static char enDerivateNumber[] = "Derivative";
constexpr static char frDerivateNumber[] = "Nombre derivé de f en a";
constexpr static char nlDerivateNumber[] = "Afgeleide";
constexpr static char ptDerivateNumber[] = "Derivada";
constexpr static char itDerivateNumber[] = "Derivata";
constexpr static char deDerivateNumber[] = "Ableitung";
constexpr static char esDerivateNumber[] = "Derivada";
constexpr static char huDerivateNumber[] = "Származékos";
constexpr static char enDerivativeFunctionColumn[] = "Derivative function column";
constexpr static char frDerivativeFunctionColumn[] = "Colonne de la fonction dérivée";
constexpr static char nlDerivativeFunctionColumn[] = "Afgeleide functie kolom";
constexpr static char ptDerivativeFunctionColumn[] = "Coluna da função derivada";
constexpr static char itDerivativeFunctionColumn[] = "Colonna della funzione derivata";
constexpr static char deDerivativeFunctionColumn[] = "Spalte der Ableitungsfunktion";
constexpr static char esDerivativeFunctionColumn[] = "Columna de la derivada";
constexpr static char huDerivativeFunctionColumn[] = "A derivált fügvény oszlopa";
constexpr static char enDeterminant[] = "Determinant";
constexpr static char frDeterminant[] = "Déterminant de M";
constexpr static char nlDeterminant[] = "Determinant";
constexpr static char ptDeterminant[] = "Determinante";
constexpr static char itDeterminant[] = "Determinante";
constexpr static char deDeterminant[] = "Determinante";
constexpr static char esDeterminant[] = "Determinante";
constexpr static char huDeterminant[] = "determináns";
constexpr static char enDeviation[] = "Variance";
constexpr static char frDeviation[] = "Variance";
constexpr static char nlDeviation[] = "Variantie";
constexpr static char ptDeviation[] = "Variância";
constexpr static char itDeviation[] = "Varianza";
constexpr static char deDeviation[] = "Varianz";
constexpr static char esDeviation[] = "Varianza";
constexpr static char huDeviation[] = "Varianca";
constexpr static char enDeviationDefinition[] = "σ: Standard deviation";
constexpr static char frDeviationDefinition[] = "σ : Ecart type";
constexpr static char nlDeviationDefinition[] = "σ: Standaardafwijking";
constexpr static char ptDeviationDefinition[] = "σ : Desvio padrão";
constexpr static char itDeviationDefinition[] = "σ : Deviazione standard";
constexpr static char deDeviationDefinition[] = "σ: Standardabweichung";
constexpr static char esDeviationDefinition[] = "σ : Desviación típica";
constexpr static char huDeviationDefinition[] = "σ: szórás";
constexpr static char enDimension[] = "Size";
constexpr static char frDimension[] = "Taille de M";
constexpr static char nlDimension[] = "Afmeting";
constexpr static char ptDimension[] = "Dimensão";
constexpr static char itDimension[] = "Dimensione";
constexpr static char deDimension[] = "Größe";
constexpr static char esDimension[] = "Tamaño";
constexpr static char huDimension[] = "Méret";
constexpr static char enDiscriminant[] = "Discriminant";
constexpr static char frDiscriminant[] = "Discriminant";
constexpr static char nlDiscriminant[] = "Discriminant";
constexpr static char ptDiscriminant[] = "Discriminante";
constexpr static char itDiscriminant[] = "Discriminante";
constexpr static char deDiscriminant[] = "Diskriminante";
constexpr static char esDiscriminant[] = "Discriminante";
constexpr static char huDiscriminant[] = "Discriminant";
constexpr static char enDisplayMode[] = "Result format";
constexpr static char frDisplayMode[] = "Format résultat";
constexpr static char nlDisplayMode[] = "Resultaat formaat";
constexpr static char ptDisplayMode[] = "Formato numérico";
constexpr static char itDisplayMode[] = "Forma risultato";
constexpr static char deDisplayMode[] = "Zahlenformat";
constexpr static char esDisplayMode[] = "Formato resultado";
constexpr static char huDisplayMode[] = "Eredmény formátuma";
constexpr static char enDisplayValues[] = "Display values";
constexpr static char frDisplayValues[] = "Afficher les valeurs";
constexpr static char nlDisplayValues[] = "Waarden weergeven";
constexpr static char ptDisplayValues[] = "Exibir os valores";
constexpr static char itDisplayValues[] = "Mostra valori";
constexpr static char deDisplayValues[] = "Werte anzeigen";
constexpr static char esDisplayValues[] = "Visualizar los valores";
constexpr static char huDisplayValues[] = "Ertékek mutatása";
constexpr static char enDistanceDimension[] = "Distance";
constexpr static char frDistanceDimension[] = "Distance";
constexpr static char nlDistanceDimension[] = "Afstand";
constexpr static char ptDistanceDimension[] = "Distância";
constexpr static char itDistanceDimension[] = "Distanza";
constexpr static char deDistanceDimension[] = "Distanz";
constexpr static char esDistanceDimension[] = "Distancia";
constexpr static char huDistanceDimension[] = "Távolság";
constexpr static char enDistances[] = "Distances";
constexpr static char frDistances[] = "Distances";
constexpr static char nlDistances[] = "Afstanden";
constexpr static char ptDistances[] = "Distâncias";
constexpr static char itDistances[] = "Distanze";
constexpr static char deDistances[] = "Entfernungen";
constexpr static char esDistances[] = "Distancias";
constexpr static char huDistances[] = "Távolságok";
constexpr static char enDot[] = "Dot product";
constexpr static char frDot[] = "Produit scalaire";
constexpr static char nlDot[] = "Inwendig product";
constexpr static char ptDot[] = "Produto escalar";
constexpr static char itDot[] = "Prodotto scalare";
constexpr static char deDot[] = "Skalarprodukt";
constexpr static char esDot[] = "Producto escalar";
constexpr static char huDot[] = "Pont termék";
constexpr static char enDoubleRecurrence[] = "Recursive second order";
constexpr static char frDoubleRecurrence[] = "Récurrente d'ordre 2";
constexpr static char nlDoubleRecurrence[] = "Recursief tweede orde";
constexpr static char ptDoubleRecurrence[] = "Recorrência de Segunda Ordem";
constexpr static char itDoubleRecurrence[] = "Ricorrente d'ordine 2";
constexpr static char deDoubleRecurrence[] = "Rekursion 2. Ordnung";
constexpr static char esDoubleRecurrence[] = "Recurrencia de orden dos";
constexpr static char huDoubleRecurrence[] = "Rekurzív második sorrend";
constexpr static char enDuplicateScript[] = "Duplicate script";
constexpr static char frDuplicateScript[] = "Dupliquer le script";
constexpr static char nlDuplicateScript[] = "Duplicate script";
constexpr static char ptDuplicateScript[] = "Duplicar o script";
constexpr static char itDuplicateScript[] = "Duplicate script";
constexpr static char deDuplicateScript[] = "Skript duplizieren";
constexpr static char esDuplicateScript[] = "Duplicar el guión";
constexpr static char huDuplicateScript[] = "Script másolása";
constexpr static char enEarthMassTag[] = "Earth";
constexpr static char frEarthMassTag[] = "Terre";
constexpr static char nlEarthMassTag[] = "Aarde";
constexpr static char ptEarthMassTag[] = "Terra";
constexpr static char itEarthMassTag[] = "Terra";
constexpr static char deEarthMassTag[] = "Erde";
constexpr static char esEarthMassTag[] = "Tierra";
constexpr static char huEarthMassTag[] = "Föld";
constexpr static char enEarthMoonDistanceTag[] = "Earth - Moon";
constexpr static char frEarthMoonDistanceTag[] = "Terre - Lune";
constexpr static char nlEarthMoonDistanceTag[] = "Aarde - Maan";
constexpr static char ptEarthMoonDistanceTag[] = "Terra - Lua";
constexpr static char itEarthMoonDistanceTag[] = "Terra - luna";
constexpr static char deEarthMoonDistanceTag[] = "Erde - Mond";
constexpr static char esEarthMoonDistanceTag[] = "Tierra - Luna";
constexpr static char huEarthMoonDistanceTag[] = "Föld - Hold";
constexpr static char enEarthSunDistanceTag[] = "Earth - Sun";
constexpr static char frEarthSunDistanceTag[] = "Terre - Soleil";
constexpr static char nlEarthSunDistanceTag[] = "Aarde - Zon";
constexpr static char ptEarthSunDistanceTag[] = "Terra - Sol";
constexpr static char itEarthSunDistanceTag[] = "Terra - sole";
constexpr static char deEarthSunDistanceTag[] = "Erde - Sonne";
constexpr static char esEarthSunDistanceTag[] = "Tierra - Sol";
constexpr static char huEarthSunDistanceTag[] = "Föld - Nap";
constexpr static char enEdition2D[] = "Natural ";
constexpr static char frEdition2D[] = "Naturelle ";
constexpr static char nlEdition2D[] = "Natuurlijk ";
constexpr static char ptEdition2D[] = "Natural ";
constexpr static char itEdition2D[] = "Naturale ";
constexpr static char deEdition2D[] = "Natürlich ";
constexpr static char esEdition2D[] = "Natural ";
constexpr static char huEdition2D[] = "Természetes";
constexpr static char enEditionLinear[] = "Linear ";
constexpr static char frEditionLinear[] = "En ligne ";
constexpr static char nlEditionLinear[] = "Lineair ";
constexpr static char ptEditionLinear[] = "Em linha ";
constexpr static char itEditionLinear[] = "In linea ";
constexpr static char deEditionLinear[] = "Linear ";
constexpr static char esEditionLinear[] = "En línea ";
constexpr static char huEditionLinear[] = "Lineáris";
constexpr static char enEditionMode[] = "Writing format";
constexpr static char frEditionMode[] = "Format écriture";
constexpr static char nlEditionMode[] = "Schrijfformaat";
constexpr static char ptEditionMode[] = "Formato escrita ";
constexpr static char itEditionMode[] = "Forma scrittura";
constexpr static char deEditionMode[] = "Eingabe";
constexpr static char esEditionMode[] = "Formato escritura";
constexpr static char huEditionMode[] = "Irás formátuma";
constexpr static char enElectricCapacitanceDimension[] = "Electrical capacity";
constexpr static char frElectricCapacitanceDimension[] = "Capacité électrique";
constexpr static char nlElectricCapacitanceDimension[] = "elektrische capaciteit:";
constexpr static char ptElectricCapacitanceDimension[] = "Capacidade elétrica";
constexpr static char itElectricCapacitanceDimension[] = "Capacità elettrica";
constexpr static char deElectricCapacitanceDimension[] = "Elektrische Kapazität";
constexpr static char esElectricCapacitanceDimension[] = "Capacidad eléctrica";
constexpr static char huElectricCapacitanceDimension[] = "Elektromos kapacitás";
constexpr static char enElectricChargeDimension[] = "Electrical charge";
constexpr static char frElectricChargeDimension[] = "Charge électrique";
constexpr static char nlElectricChargeDimension[] = "Elektrische lading";
constexpr static char ptElectricChargeDimension[] = "Carga elétrica";
constexpr static char itElectricChargeDimension[] = "Carica elettrica";
constexpr static char deElectricChargeDimension[] = "Elektrische Ladung";
constexpr static char esElectricChargeDimension[] = "Carga eléctrica";
constexpr static char huElectricChargeDimension[] = "Elektromos töltő";
constexpr static char enElectricConductanceDimension[] = "electrical conductance";
constexpr static char frElectricConductanceDimension[] = "Conductance électrique";
constexpr static char nlElectricConductanceDimension[] = "elektrische geleiding:";
constexpr static char ptElectricConductanceDimension[] = "condutância elétrica";
constexpr static char itElectricConductanceDimension[] = "conduttanza elettrica";
constexpr static char deElectricConductanceDimension[] = "elektrische Leitfähigkeit";
constexpr static char esElectricConductanceDimension[] = "conductancia eléctrica";
constexpr static char huElectricConductanceDimension[] = "elektromos vezetőképesség";
constexpr static char enElectricPotentialDimension[] = "Electric potential";
constexpr static char frElectricPotentialDimension[] = "Potentiel électrique";
constexpr static char nlElectricPotentialDimension[] = "elektrische potentiaal";
constexpr static char ptElectricPotentialDimension[] = "Potencial elétrico";
constexpr static char itElectricPotentialDimension[] = "Potenziale elettrico";
constexpr static char deElectricPotentialDimension[] = "Elektrisches Potenzial";
constexpr static char esElectricPotentialDimension[] = "Potencial eléctrico";
constexpr static char huElectricPotentialDimension[] = "Elektromos potenciál";
constexpr static char enElectricResistanceDimension[] = "Electrical resistance";
constexpr static char frElectricResistanceDimension[] = "Résistance électrique";
constexpr static char nlElectricResistanceDimension[] = "Elektrische weerstand";
constexpr static char ptElectricResistanceDimension[] = "Resistência elétrica";
constexpr static char itElectricResistanceDimension[] = "Resistenza elettrica";
constexpr static char deElectricResistanceDimension[] = "Elektrischer Wiederstand";
constexpr static char esElectricResistanceDimension[] = "Resistencia eléctrica";
constexpr static char huElectricResistanceDimension[] = "Elektromos ellenállás";
constexpr static char enElectricity[] = "Electricity";
constexpr static char frElectricity[] = "Electricité";
constexpr static char nlElectricity[] = "Elektriciteit";
constexpr static char ptElectricity[] = "Electricidade";
constexpr static char itElectricity[] = "Elettricità";
constexpr static char deElectricity[] = "Elektrizität";
constexpr static char esElectricity[] = "Electricidad";
constexpr static char huElectricity[] = "Elektromosság";
constexpr static char enElectromagnetism[] = "Electromagnetism";
constexpr static char frElectromagnetism[] = "Electromagnétisme";
constexpr static char nlElectromagnetism[] = "Elektromagnetisme";
constexpr static char ptElectromagnetism[] = "Eletromagnetismo";
constexpr static char itElectromagnetism[] = "Elettromagnetismo";
constexpr static char deElectromagnetism[] = "Elektromagnetismus";
constexpr static char esElectromagnetism[] = "Electromagnetismo";
constexpr static char huElectromagnetism[] = "Elektromágnesesség";
constexpr static char enElectronMassTag[] = "Electron";
constexpr static char frElectronMassTag[] = "Electron";
constexpr static char nlElectronMassTag[] = "Electron";
constexpr static char ptElectronMassTag[] = "Elétron";
constexpr static char itElectronMassTag[] = "Elettrone";
constexpr static char deElectronMassTag[] = "Elektrons";
constexpr static char esElectronMassTag[] = "Electrón";
constexpr static char huElectronMassTag[] = "Elektron";
constexpr static char enElementalChargeTag[] = "Elementary Charge";
constexpr static char frElementalChargeTag[] = "Charge élémentaire";
constexpr static char nlElementalChargeTag[] = "Elementaire lading";
constexpr static char ptElementalChargeTag[] = "Carga elementar";
constexpr static char itElementalChargeTag[] = "Carica elementale";
constexpr static char deElementalChargeTag[] = "Elementarladung";
constexpr static char esElementalChargeTag[] = "Carga elemental";
constexpr static char huElementalChargeTag[] = "Elemi töltés";
constexpr static char enEmpty[] = "Empty";
constexpr static char frEmpty[] = "Vide";
constexpr static char nlEmpty[] = "Leeg";
constexpr static char ptEmpty[] = "Vazio";
constexpr static char itEmpty[] = "Vuoto";
constexpr static char deEmpty[] = "Leer";
constexpr static char esEmpty[] = "Vacio";
constexpr static char huEmpty[] = "Ures";
constexpr static char enEmptyExpressionBox0[] = "You have not defined any variables.";
constexpr static char frEmptyExpressionBox0[] = "Vous n'avez défini aucune variable.";
constexpr static char nlEmptyExpressionBox0[] = "Je hebt geen variabelen gedefinieerd.";
constexpr static char ptEmptyExpressionBox0[] = "Nenhuma variável definida.";
constexpr static char itEmptyExpressionBox0[] = "Non avete definito nessuna variabile.";
constexpr static char deEmptyExpressionBox0[] = "Sie haben keine Variable definiert.";
constexpr static char esEmptyExpressionBox0[] = "Ninguna variable definida.";
constexpr static char huEmptyExpressionBox0[] = "Nincs meghatározott változó.";
constexpr static char enEmptyExpressionBox1[] = "To define a variable, type:";
constexpr static char frEmptyExpressionBox1[] = "Pour définir une variable, tapez :";
constexpr static char nlEmptyExpressionBox1[] = "Om een variabele te definiëren, typ:";
constexpr static char ptEmptyExpressionBox1[] = "Para definir uma, digite :";
constexpr static char itEmptyExpressionBox1[] = "Per definire una variabile, digitare :";
constexpr static char deEmptyExpressionBox1[] = "Um eine Variable zu definieren:";
constexpr static char esEmptyExpressionBox1[] = "Para definir una, teclear :";
constexpr static char huEmptyExpressionBox1[] = "A változó meghatározásához írja be:";
constexpr static char enEmptyExpressionBox2[] = "The variable name can contain:";
constexpr static char frEmptyExpressionBox2[] = "Le nom de la variable peut";
constexpr static char nlEmptyExpressionBox2[] = "De naam van de variabele kan bevatten:";
constexpr static char ptEmptyExpressionBox2[] = "O nome da variável pode conter:";
constexpr static char itEmptyExpressionBox2[] = "Il nome della variabile può";
constexpr static char deEmptyExpressionBox2[] = "Erlaubte Zeichen im Namen:";
constexpr static char esEmptyExpressionBox2[] = "El nombre de variable debe";
constexpr static char huEmptyExpressionBox2[] = "A változó neve tartalmazhat:";
constexpr static char enEmptyFunctionBox0[] = "You have not defined any functions.";
constexpr static char frEmptyFunctionBox0[] = "Vous n'avez défini aucune fonction.";
constexpr static char nlEmptyFunctionBox0[] = "Je hebt geen functies gedefinieerd.";
constexpr static char ptEmptyFunctionBox0[] = "Nenhuma função definida.";
constexpr static char itEmptyFunctionBox0[] = "Non avete definito nessuna funzione.";
constexpr static char deEmptyFunctionBox0[] = "Sie haben keine Funktion definiert.";
constexpr static char esEmptyFunctionBox0[] = "Ninguna función definida.";
constexpr static char huEmptyFunctionBox0[] = "Nincs meghatározott funkció.";
constexpr static char enEmptyFunctionBox1[] = "To define a function, type:";
constexpr static char frEmptyFunctionBox1[] = "Pour définir une fonction, tapez :";
constexpr static char nlEmptyFunctionBox1[] = "Om een functie te definiëren, typ:";
constexpr static char ptEmptyFunctionBox1[] = "Para definir uma, digite :";
constexpr static char itEmptyFunctionBox1[] = "Per definire una funzione, digitare :";
constexpr static char deEmptyFunctionBox1[] = "Um eine Funktion zu definieren:";
constexpr static char esEmptyFunctionBox1[] = "Para definir una, teclear :";
constexpr static char huEmptyFunctionBox1[] = "Funkció meghatározásához írja be:";
constexpr static char enEmptyFunctionBox2[] = "The function name can contain:";
constexpr static char frEmptyFunctionBox2[] = "Le nom de la fonction peut";
constexpr static char nlEmptyFunctionBox2[] = "De naam van de functie kan bevatten:";
constexpr static char ptEmptyFunctionBox2[] = "O nome da função pode conter:";
constexpr static char itEmptyFunctionBox2[] = "Il nome della funzione può";
constexpr static char deEmptyFunctionBox2[] = "Erlaubte Zeichen im Namen:";
constexpr static char esEmptyFunctionBox2[] = "El nombre de función debe";
constexpr static char huEmptyFunctionBox2[] = "A funkció neve tartalmazhat:";
constexpr static char enEmptySequenceBox0[] = "You have not defined any sequences.";
constexpr static char frEmptySequenceBox0[] = "Vous n'avez défini aucune suite.";
constexpr static char nlEmptySequenceBox0[] = "Je hebt geen rij gedefinieerd.";
constexpr static char ptEmptySequenceBox0[] = "Nenhuma sequência definida.";
constexpr static char itEmptySequenceBox0[] = "Non avete definito nessuna";
constexpr static char deEmptySequenceBox0[] = "Sie haben keine Folge definiert.";
constexpr static char esEmptySequenceBox0[] = "Ninguna sucesión definida.";
constexpr static char huEmptySequenceBox0[] = "Még nem definiált szekvenciákat.";
constexpr static char enEmptySequenceBox1[] = "";
constexpr static char frEmptySequenceBox1[] = "";
constexpr static char nlEmptySequenceBox1[] = "";
constexpr static char ptEmptySequenceBox1[] = "";
constexpr static char itEmptySequenceBox1[] = "successione.";
constexpr static char deEmptySequenceBox1[] = "";
constexpr static char esEmptySequenceBox1[] = "";
constexpr static char huEmptySequenceBox1[] = "";
constexpr static char enEnableCharacters[] = "A..Z, a..z, 0..9 and _";
constexpr static char frEnableCharacters[] = "contenir : A..Z, a..z, 0..9 et _";
constexpr static char nlEnableCharacters[] = "A..Z, a..z, 0..9 en _";
constexpr static char ptEnableCharacters[] = "A..Z, a..z, 0..9 y _";
constexpr static char itEnableCharacters[] = "contenere : A..Z, a..z, 0..9 e _";
constexpr static char deEnableCharacters[] = "A..Z, a..z, 0..9 und _";
constexpr static char esEnableCharacters[] = "contener : A..Z, a..z, 0..9 y _";
constexpr static char huEnableCharacters[] = "A..Z, a..z, 0..9 és _";
constexpr static char enEnergyDimension[] = "Energy";
constexpr static char frEnergyDimension[] = "Energie";
constexpr static char nlEnergyDimension[] = "Energie";
constexpr static char ptEnergyDimension[] = "Energia";
constexpr static char itEnergyDimension[] = "Energia";
constexpr static char deEnergyDimension[] = "Energie";
constexpr static char esEnergyDimension[] = "Energía";
constexpr static char huEnergyDimension[] = "Energia";
constexpr static char enEng[] = "eng";
constexpr static char frEng[] = "ing";
constexpr static char nlEng[] = "eng";
constexpr static char ptEng[] = "eng";
constexpr static char itEng[] = "eng";
constexpr static char deEng[] = "tech";
constexpr static char esEng[] = "ing";
constexpr static char huEng[] = "eng";
constexpr static char enEngineering[] = "Engineering ";
constexpr static char frEngineering[] = "Ingénieur ";
constexpr static char nlEngineering[] = "Engineering ";
constexpr static char ptEngineering[] = "Engenharia ";
constexpr static char itEngineering[] = "Ingegneria ";
constexpr static char deEngineering[] = "Technisch ";
constexpr static char esEngineering[] = "Ingeniería ";
constexpr static char huEngineering[] = "Mérnökség ";
constexpr static char enEnterEquation[] = "Enter an equation";
constexpr static char frEnterEquation[] = "Entrez une équation";
constexpr static char nlEnterEquation[] = "Voer een vergelijking in";
constexpr static char ptEnterEquation[] = "Digite uma equação";
constexpr static char itEnterEquation[] = "Inserire un'equazione";
constexpr static char deEnterEquation[] = "Geben Sie eine Gleichung ein";
constexpr static char esEnterEquation[] = "Escribe una ecuación";
constexpr static char huEnterEquation[] = "Irjon be egy egyenletet";
constexpr static char enEscapeVelocity[] = "Escape Velocity";
constexpr static char frEscapeVelocity[] = "Vitesse de libération";
constexpr static char nlEscapeVelocity[] = "Ontsnapsnelheid";
constexpr static char ptEscapeVelocity[] = "Velocidade de Fuga";
constexpr static char itEscapeVelocity[] = "Velocità di fuga";
constexpr static char deEscapeVelocity[] = "Fluchtgeschwindigkeit";
constexpr static char esEscapeVelocity[] = "Velocidad de escape";
constexpr static char huEscapeVelocity[] = "Szökési sebesség";
constexpr static char enEscapeVelocityFromEarth[] = "Of Earth";
constexpr static char frEscapeVelocityFromEarth[] = "De la Terre";
constexpr static char nlEscapeVelocityFromEarth[] = "Van Aarde";
constexpr static char ptEscapeVelocityFromEarth[] = "Fuga da Terra";
constexpr static char itEscapeVelocityFromEarth[] = "Della terra";
constexpr static char deEscapeVelocityFromEarth[] = "Von der Erde";
constexpr static char esEscapeVelocityFromEarth[] = "De La Tierra";
constexpr static char huEscapeVelocityFromEarth[] = "A föld";
constexpr static char enEscapeVelocityFromMoon[] = "Of Moon";
constexpr static char frEscapeVelocityFromMoon[] = "De la Lune";
constexpr static char nlEscapeVelocityFromMoon[] = "Van Maan";
constexpr static char ptEscapeVelocityFromMoon[] = "De Lua";
constexpr static char itEscapeVelocityFromMoon[] = "Di luna";
constexpr static char deEscapeVelocityFromMoon[] = "Vom Mond";
constexpr static char esEscapeVelocityFromMoon[] = "De la Luna";
constexpr static char huEscapeVelocityFromMoon[] = "A Hold";
constexpr static char enEscapeVelocityFromSun[] = "Of Sun";
constexpr static char frEscapeVelocityFromSun[] = "Du Soleil";
constexpr static char nlEscapeVelocityFromSun[] = "Van de zon";
constexpr static char ptEscapeVelocityFromSun[] = "Do Sol";
constexpr static char itEscapeVelocityFromSun[] = "Di sole";
constexpr static char deEscapeVelocityFromSun[] = "Von der Sonne";
constexpr static char esEscapeVelocityFromSun[] = "De el Sol";
constexpr static char huEscapeVelocityFromSun[] = "A nap";
constexpr static char enEuclideanDivision[] = "Euclidean division";
constexpr static char frEuclideanDivision[] = "Division euclidienne";
constexpr static char nlEuclideanDivision[] = "Geheeltallige deling";
constexpr static char ptEuclideanDivision[] = "Divisão euclidiana";
constexpr static char itEuclideanDivision[] = "Divisione euclidea";
constexpr static char deEuclideanDivision[] = "Division mit Rest";
constexpr static char esEuclideanDivision[] = "División euclidiana";
constexpr static char huEuclideanDivision[] = "Euklideszi osztás";
constexpr static char enExamMode[] = "Exam mode";
constexpr static char frExamMode[] = "Mode examen";
constexpr static char nlExamMode[] = "Examenstand";
constexpr static char ptExamMode[] = "Modo de exame";
constexpr static char itExamMode[] = "Modalità Esame";
constexpr static char deExamMode[] = "Prüfungsmodus";
constexpr static char esExamMode[] = "Modo examen";
constexpr static char huExamMode[] = "Vizsga mód";
constexpr static char enExamModeActive[] = "Reactivate exam mode";
constexpr static char frExamModeActive[] = "Réactiver le mode examen";
constexpr static char nlExamModeActive[] = "Herstart examenstand";
constexpr static char ptExamModeActive[] = "Reativar o modo de exame";
constexpr static char itExamModeActive[] = "Riattivare modalità Esame";
constexpr static char deExamModeActive[] = "Modus erneut starten";
constexpr static char esExamModeActive[] = "Reactivar el modo examen";
constexpr static char huExamModeActive[] = "A vizsgamód újraaktiválása";
constexpr static char enExamModeMode[] = "Mode";
constexpr static char frExamModeMode[] = "Mode";
constexpr static char nlExamModeMode[] = "Mode";
constexpr static char ptExamModeMode[] = "Modo";
constexpr static char itExamModeMode[] = "Modalità";
constexpr static char deExamModeMode[] = "Modus";
constexpr static char esExamModeMode[] = "Modo";
constexpr static char huExamModeMode[] = "Uzemmód";
constexpr static char enExamModeModeDutch[] = "Dutch ";
constexpr static char frExamModeModeDutch[] = "Dutch ";
constexpr static char nlExamModeModeDutch[] = "Nederlands ";
constexpr static char ptExamModeModeDutch[] = "holandês ";
constexpr static char itExamModeModeDutch[] = "Olandese ";
constexpr static char deExamModeModeDutch[] = "Niederländisch ";
constexpr static char esExamModeModeDutch[] = "Holandés ";
constexpr static char huExamModeModeDutch[] = "Holland ";
constexpr static char enExamModeModeNoSym[] = "No sym ";
constexpr static char frExamModeModeNoSym[] = "Sans symbolique ";
constexpr static char nlExamModeModeNoSym[] = "Geen sym ";
constexpr static char ptExamModeModeNoSym[] = "Sem sym ";
constexpr static char itExamModeModeNoSym[] = "Nessun simbolo ";
constexpr static char deExamModeModeNoSym[] = "Kein Symbol ";
constexpr static char esExamModeModeNoSym[] = "Sin simbólico ";
constexpr static char huExamModeModeNoSym[] = "Szimbólikus nélkül ";
constexpr static char enExamModeModeNoSymNoText[] = "No sym no text ";
constexpr static char frExamModeModeNoSymNoText[] = "Sans symbolique ni texte ";
constexpr static char nlExamModeModeNoSymNoText[] = "Geen sym geen tekst ";
constexpr static char ptExamModeModeNoSymNoText[] = "Sem sym sem texto ";
constexpr static char itExamModeModeNoSymNoText[] = "Nessun simbolo nessun testo ";
constexpr static char deExamModeModeNoSymNoText[] = "Kein Symbol kein Text ";
constexpr static char esExamModeModeNoSymNoText[] = "Sin simbólico sin texto ";
constexpr static char huExamModeModeNoSymNoText[] = "Szimbólikus és szöveg nélkül ";
constexpr static char enExamModeModeStandard[] = "Standard ";
constexpr static char frExamModeModeStandard[] = "Standard ";
constexpr static char nlExamModeModeStandard[] = "Standaard ";
constexpr static char ptExamModeModeStandard[] = "Padrão ";
constexpr static char itExamModeModeStandard[] = "Standard ";
constexpr static char deExamModeModeStandard[] = "Standard ";
constexpr static char esExamModeModeStandard[] = "Estándar ";
constexpr static char huExamModeModeStandard[] = "Normál ";
constexpr static char enExamModeWarning1[] = "Caution: compliance of this";
constexpr static char frExamModeWarning1[] = "Attention, la conformité du mode";
constexpr static char nlExamModeWarning1[] = "Let op: naleving van de examenstand";
constexpr static char ptExamModeWarning1[] = "Cuidado: o software que está a utilizar";
constexpr static char itExamModeWarning1[] = "Attenzione, la conformità della modalità";
constexpr static char deExamModeWarning1[] = "Caution: compliance of this";
constexpr static char esExamModeWarning1[] = "Caution: compliance of this";
constexpr static char huExamModeWarning1[] = "Vigyázat: a használt szoftver nem";
constexpr static char enExamModeWarning2[] = "unofficial software's exam mode";
constexpr static char frExamModeWarning2[] = "examen de ce logiciel officiel Symplex";
constexpr static char nlExamModeWarning2[] = "op deze onofficiële software wordt";
constexpr static char ptExamModeWarning2[] = "não é oficial. A sua conformidade com o";
constexpr static char itExamModeWarning2[] = "esame di questo software non ufficiale";
constexpr static char deExamModeWarning2[] = "unofficial software's exam mode";
constexpr static char esExamModeWarning2[] = "unofficial software's exam mode";
constexpr static char huExamModeWarning2[] = "hivatalos, Numworks nem garantálja";
constexpr static char enExamModeWarning3[] = "is not guaranteed by NumWorks/Omega.";
constexpr static char frExamModeWarning3[] = "n'est pas garanti par NumWorks.";
constexpr static char nlExamModeWarning3[] = "door NumWorks/Omega niet gegarandeerd.";
constexpr static char ptExamModeWarning3[] = "Modo de Exame não é garantida pela NumWorks/Omega.";
constexpr static char itExamModeWarning3[] = "non è garantita da NumWorks/Omega.";
constexpr static char deExamModeWarning3[] = "is not guaranteed by NumWorks/Omega.";
constexpr static char esExamModeWarning3[] = "is not guaranteed by NumWorks/Omega.";
constexpr static char huExamModeWarning3[] = "a vizsgálati mód megfelelőségét.";
constexpr static char enExceptions[] = "Exceptions";
constexpr static char frExceptions[] = "Exceptions";
constexpr static char nlExceptions[] = "Exceptions";
constexpr static char ptExceptions[] = "Exceptions";
constexpr static char itExceptions[] = "Exceptions";
constexpr static char deExceptions[] = "Ausnahmen";
constexpr static char esExceptions[] = "Exceptions";
constexpr static char huExceptions[] = "Kivételek";
constexpr static char enExecuteScript[] = "Execute script";
constexpr static char frExecuteScript[] = "Exécuter le script";
constexpr static char nlExecuteScript[] = "Script uitvoeren";
constexpr static char ptExecuteScript[] = "Executar o script";
constexpr static char itExecuteScript[] = "Eseguire lo script";
constexpr static char deExecuteScript[] = "Skript ausführen";
constexpr static char esExecuteScript[] = "Ejecutar el archivo";
constexpr static char huExecuteScript[] = "Script indítása";
constexpr static char enExitExamMode1[] = "Exit the exam ";
constexpr static char frExitExamMode1[] = "Voulez-vous sortir ";
constexpr static char nlExitExamMode1[] = "Verlaat de ";
constexpr static char ptExitExamMode1[] = "Deseja sair do modo de ";
constexpr static char itExitExamMode1[] = "Volete uscire ";
constexpr static char deExitExamMode1[] = "Möchten Sie den";
constexpr static char esExitExamMode1[] = "Salir del modo ";
constexpr static char huExitExamMode1[] = "Kilépni a vizsga ";
constexpr static char enExitExamMode2[] = "mode?";
constexpr static char frExitExamMode2[] = "du mode examen ?";
constexpr static char nlExitExamMode2[] = "examenstand?";
constexpr static char ptExitExamMode2[] = "exame ?";
constexpr static char itExitExamMode2[] = "dalla modalità d'esame ?";
constexpr static char deExitExamMode2[] = "Prüfungsmodus verlassen?";
constexpr static char esExitExamMode2[] = "examen ?";
constexpr static char huExitExamMode2[] = "módból?";
constexpr static char enExplicit[] = "Explicit expression";
constexpr static char frExplicit[] = "Explicite";
constexpr static char nlExplicit[] = "Expliciete uitdrukking";
constexpr static char ptExplicit[] = "Explícita";
constexpr static char itExplicit[] = "Esplicita";
constexpr static char deExplicit[] = "Explizit";
constexpr static char esExplicit[] = "Fórmula explícita";
constexpr static char huExplicit[] = "Explicit kifejezés";
constexpr static char enExponential[] = "Exponential";
constexpr static char frExponential[] = "Exponentielle";
constexpr static char nlExponential[] = "Exponentieel";
constexpr static char ptExponential[] = "Exponencial";
constexpr static char itExponential[] = "Esponenziale";
constexpr static char deExponential[] = "Exponentielle";
constexpr static char esExponential[] = "Exponencial";
constexpr static char huExponential[] = "Exponenciális";
constexpr static char enExponentialDistribution[] = "Exponential distribution";
constexpr static char frExponentialDistribution[] = "Loi exponentielle";
constexpr static char nlExponentialDistribution[] = "Exponentiële verdeling";
constexpr static char ptExponentialDistribution[] = "Distribuição exponencial";
constexpr static char itExponentialDistribution[] = "Distribuzione esponenziale";
constexpr static char deExponentialDistribution[] = "Exponentialverteilung";
constexpr static char esExponentialDistribution[] = "Distribución exponencial";
constexpr static char huExponentialDistribution[] = "Exponenciális eloszlás";
constexpr static char enExpressions[] = "Expressions";
constexpr static char frExpressions[] = "Expressions";
constexpr static char nlExpressions[] = "Uitdrukkingen";
constexpr static char ptExpressions[] = "Expressões";
constexpr static char itExpressions[] = "Espressioni";
constexpr static char deExpressions[] = "Ausdrücke";
constexpr static char esExpressions[] = "Expresiones";
constexpr static char huExpressions[] = "Kifejezések";
constexpr static char enExtAppEnabled[] = "Pin up";
constexpr static char frExtAppEnabled[] = "Afficher";
constexpr static char nlExtAppEnabled[] = "Vastpinnen";
constexpr static char ptExtAppEnabled[] = "Pôster";
constexpr static char itExtAppEnabled[] = "Affiggere";
constexpr static char deExtAppEnabled[] = "Aufstecken";
constexpr static char esExtAppEnabled[] = "Fijar";
constexpr static char huExtAppEnabled[] = "Feltűz";
constexpr static char enExtAppWrite[] = "Write allowed";
constexpr static char frExtAppWrite[] = "Ecriture autorisée";
constexpr static char nlExtAppWrite[] = "Schrijven ingeschakeld";
constexpr static char ptExtAppWrite[] = "Gravação ativada";
constexpr static char itExtAppWrite[] = "Scrittura abilitata";
constexpr static char deExtAppWrite[] = "Schreiben aktiviert";
constexpr static char esExtAppWrite[] = "Escritura habilitada";
constexpr static char huExtAppWrite[] = "Irás engedélyezve";
constexpr static char enExtAppWriteExplanation1[] = "By default, external applications";
constexpr static char frExtAppWriteExplanation1[] = "Par défaut, les applications externes";
constexpr static char nlExtAppWriteExplanation1[] = "Standaard zijn externe toepassingen";
constexpr static char ptExtAppWriteExplanation1[] = "Por padrão, aplicativos externos";
constexpr static char itExtAppWriteExplanation1[] = "Per impostazione predefinita, applicazioni esterne";
constexpr static char deExtAppWriteExplanation1[] = "Standardmäßig externe Anwendungen";
constexpr static char esExtAppWriteExplanation1[] = "Por defecto, las aplicaciones externas";
constexpr static char huExtAppWriteExplanation1[] = "Alapértelmezés szerint külső alkalmazások";
constexpr static char enExtAppWriteExplanation2[] = "cannot write to memory";
constexpr static char frExtAppWriteExplanation2[] = "ne peuvent écrire dans la mémoire";
constexpr static char nlExtAppWriteExplanation2[] = "kan niet naar het geheugen schrijven";
constexpr static char ptExtAppWriteExplanation2[] = "não pode gravar na memória";
constexpr static char itExtAppWriteExplanation2[] = "non può scrivere in memoria";
constexpr static char deExtAppWriteExplanation2[] = "kann nicht in den Speicher schreiben";
constexpr static char esExtAppWriteExplanation2[] = "no se puede escribir en la memoria";
constexpr static char huExtAppWriteExplanation2[] = "nem tud a memóriába írni";
constexpr static char enExtAppWriteExplanation3[] = "flash (persistent) of your calculator.";
constexpr static char frExtAppWriteExplanation3[] = "flash (persistante) de votre calculatrice.";
constexpr static char nlExtAppWriteExplanation3[] = "flash (aanhoudend) van uw rekenmachine.";
constexpr static char ptExtAppWriteExplanation3[] = "flash (persistente) de sua calculadora.";
constexpr static char itExtAppWriteExplanation3[] = "flash (persistente) della calcolatrice.";
constexpr static char deExtAppWriteExplanation3[] = "Flash (dauerhaft) Ihres Rechners.";
constexpr static char esExtAppWriteExplanation3[] = "flash (persistente) de su calculadora.";
constexpr static char huExtAppWriteExplanation3[] = "villog (tartósan) a számológép.";
constexpr static char enExternalApp[] = "External";
constexpr static char frExternalApp[] = "External";
constexpr static char nlExternalApp[] = "External";
constexpr static char ptExternalApp[] = "External";
constexpr static char itExternalApp[] = "External";
constexpr static char deExternalApp[] = "External";
constexpr static char esExternalApp[] = "External";
constexpr static char huExternalApp[] = "Külsö";
constexpr static char enExternalAppApiMismatch[] = "API mismatch";
constexpr static char frExternalAppApiMismatch[] = "Décalage API";
constexpr static char nlExternalAppApiMismatch[] = "API mismatch";
constexpr static char ptExternalAppApiMismatch[] = "API mismatch";
constexpr static char itExternalAppApiMismatch[] = "API mismatch";
constexpr static char deExternalAppApiMismatch[] = "API stimmt nicht überein";
constexpr static char esExternalAppApiMismatch[] = "Discordancia de API";
constexpr static char huExternalAppApiMismatch[] = "API eltérés";
constexpr static char enExternalAppCapital[] = "EXTERNAL";
constexpr static char frExternalAppCapital[] = "EXTERNAL";
constexpr static char nlExternalAppCapital[] = "EXTERNAL";
constexpr static char ptExternalAppCapital[] = "EXTERNAL";
constexpr static char itExternalAppCapital[] = "EXTERNAL";
constexpr static char deExternalAppCapital[] = "EXTERNAL";
constexpr static char esExternalAppCapital[] = "EXTERNAL";
constexpr static char huExternalAppCapital[] = "KULSO";
constexpr static char enExternalAppExecError[] = "Cannot execute file";
constexpr static char frExternalAppExecError[] = "Le fichier ne peut pas être exécuté";
constexpr static char nlExternalAppExecError[] = "Cannot execute file";
constexpr static char ptExternalAppExecError[] = "Cannot execute file";
constexpr static char itExternalAppExecError[] = "Cannot execute file";
constexpr static char deExternalAppExecError[] = "Datei kann nicht ausgeführt werden";
constexpr static char esExternalAppExecError[] = "No se puede ejecutar el archivo";
constexpr static char huExternalAppExecError[] = "A fájl nem futtatható";
constexpr static char enExternalApps[] = "External Apps";
constexpr static char frExternalApps[] = "Applications externes";
constexpr static char nlExternalApps[] = "Externe apps";
constexpr static char ptExternalApps[] = "Aplicativos externos";
constexpr static char itExternalApps[] = "App esterne";
constexpr static char deExternalApps[] = "Externe Apps";
constexpr static char esExternalApps[] = "Aplicaciones externas";
constexpr static char huExternalApps[] = "Külső alkalmazások";
constexpr static char enExternalNotCompatible[] = "External is not compatible";
constexpr static char frExternalNotCompatible[] = "External n'est pas compatible";
constexpr static char nlExternalNotCompatible[] = "External is not compatible";
constexpr static char ptExternalNotCompatible[] = "Externo no es compatiblee";
constexpr static char itExternalNotCompatible[] = "External is not compatible";
constexpr static char deExternalNotCompatible[] = "Externe App ist nicht kompatibel";
constexpr static char esExternalNotCompatible[] = "Externo no es compatible";
constexpr static char huExternalNotCompatible[] = "Externál nem kompatibilis";
constexpr static char enFactorizedForm[] = "Factorized form";
constexpr static char frFactorizedForm[] = "Forme factorisée";
constexpr static char nlFactorizedForm[] = "Factorized vorm";
constexpr static char ptFactorizedForm[] = "Factorized form";
constexpr static char itFactorizedForm[] = "Forma fattorizzata";
constexpr static char deFactorizedForm[] = "Factorisierte Form";
constexpr static char esFactorizedForm[] = "Forma factorizada";
constexpr static char huFactorizedForm[] = "Factorizált forma";
constexpr static char enFaradayConstantTag[] = "Faraday Constant";
constexpr static char frFaradayConstantTag[] = "Constante de Faraday";
constexpr static char nlFaradayConstantTag[] = "Faradayconstante";
constexpr static char ptFaradayConstantTag[] = "Constante de Faraday";
constexpr static char itFaradayConstantTag[] = "Costante di faraday";
constexpr static char deFaradayConstantTag[] = "Faraday-Konstante";
constexpr static char esFaradayConstantTag[] = "Constante de Faraday";
constexpr static char huFaradayConstantTag[] = "Faraday Allandó";
constexpr static char enFiles[] = "Files";
constexpr static char frFiles[] = "Fichiers";
constexpr static char nlFiles[] = "Files";
constexpr static char ptFiles[] = "Files";
constexpr static char itFiles[] = "Files";
constexpr static char deFiles[] = "Dateien";
constexpr static char esFiles[] = "Files";
constexpr static char huFiles[] = "Fájlok";
constexpr static char enFillWithFormula[] = "Fill with a formula";
constexpr static char frFillWithFormula[] = "Remplir avec une formule";
constexpr static char nlFillWithFormula[] = "Vul met een formule";
constexpr static char ptFillWithFormula[] = "Preencher com uma fórmula";
constexpr static char itFillWithFormula[] = "Compilare con una formula";
constexpr static char deFillWithFormula[] = "Mit einer Formel füllen";
constexpr static char esFillWithFormula[] = "Rellenar con una fórmula";
constexpr static char huFillWithFormula[] = "Töltse ki egy képlettel";
constexpr static char enFineStructureTag[] = "Fine Structure Constant";
constexpr static char frFineStructureTag[] = "Constante de Structure Fine";
constexpr static char nlFineStructureTag[] = "Fijnstructuurconstante";
constexpr static char ptFineStructureTag[] = "Constante de Estrutura Fina";
constexpr static char itFineStructureTag[] = "Costante di struttura fine";
constexpr static char deFineStructureTag[] = "Feinstrukturkonstante";
constexpr static char esFineStructureTag[] = "Constante de la estructura fina";
constexpr static char huFineStructureTag[] = "Finom Szerkezeti Allandó";
constexpr static char enFirstQuartile[] = "First quartile";
constexpr static char frFirstQuartile[] = "Premier quartile";
constexpr static char nlFirstQuartile[] = "Eerste kwartiel";
constexpr static char ptFirstQuartile[] = "Primeiro quartil";
constexpr static char itFirstQuartile[] = "Primo quartile";
constexpr static char deFirstQuartile[] = "Unteres Quartil";
constexpr static char esFirstQuartile[] = "Primer cuartil";
constexpr static char huFirstQuartile[] = "Elsö kvartilis";
constexpr static char enFirstRoot[] = "First root";
constexpr static char frFirstRoot[] = "Première racine";
constexpr static char nlFirstRoot[] = "Eerste wortel";
constexpr static char ptFirstRoot[] = "Primeira raiz";
constexpr static char itFirstRoot[] = "Prima radice";
constexpr static char deFirstRoot[] = "Erste Wurzel";
constexpr static char esFirstRoot[] = "Primera raíz";
constexpr static char huFirstRoot[] = "Első gyökér";
constexpr static char enFirstTermIndex[] = "First term index";
constexpr static char frFirstTermIndex[] = "Indice premier terme";
constexpr static char nlFirstTermIndex[] = "Eerste termindex";
constexpr static char ptFirstTermIndex[] = "Indice do primeiro termo";
constexpr static char itFirstTermIndex[] = "Indice del primo termine";
constexpr static char deFirstTermIndex[] = "Anfangsindex";
constexpr static char esFirstTermIndex[] = "Indice del primer término";
constexpr static char huFirstTermIndex[] = "Elsö kifejezés index";
constexpr static char enFisherDistribution[] = "F distribution";
constexpr static char frFisherDistribution[] = "Loi de Fisher";
constexpr static char nlFisherDistribution[] = "F-verdeling";
constexpr static char ptFisherDistribution[] = "Distribuição F";
constexpr static char itFisherDistribution[] = "Distribuzione di Fisher";
constexpr static char deFisherDistribution[] = "F-Verteilung";
constexpr static char esFisherDistribution[] = "Distribución F";
constexpr static char huFisherDistribution[] = "Fisher eloszlás";
constexpr static char enFloor[] = "Floor";
constexpr static char frFloor[] = "Partie entière par défaut";
constexpr static char nlFloor[] = "Afronden naar beneden";
constexpr static char ptFloor[] = "Parte inteira";
constexpr static char itFloor[] = "Parte intera inferiore";
constexpr static char deFloor[] = "Untergrenze";
constexpr static char esFloor[] = "Parte entera";
constexpr static char huFloor[] = "Emelet";
constexpr static char enFluctuation[] = "Prediction Interval";
constexpr static char frFluctuation[] = "Intervalle de fluctuation";
constexpr static char nlFluctuation[] = "Statistische intervallen";
constexpr static char ptFluctuation[] = "Intervalo de confiança";
constexpr static char itFluctuation[] = "Intervallo di previsione";
constexpr static char deFluctuation[] = "Konfidenzintervall";
constexpr static char esFluctuation[] = "Interval de predicción";
constexpr static char huFluctuation[] = "Jósolt intervallum";
constexpr static char enFontSizes[] = "Python font size";
constexpr static char frFontSizes[] = "Police Python";
constexpr static char nlFontSizes[] = "Python lettergrootte";
constexpr static char ptFontSizes[] = "Tipografia Python";
constexpr static char itFontSizes[] = "Carattere Python";
constexpr static char deFontSizes[] = "Python-Schriftgröße";
constexpr static char esFontSizes[] = "Tipografía Python";
constexpr static char huFontSizes[] = "Python betü méret";
constexpr static char enForbiddenAppInExamMode1[] = "This application is";
constexpr static char frForbiddenAppInExamMode1[] = "Cette application n'est";
constexpr static char nlForbiddenAppInExamMode1[] = "Deze applicatie is";
constexpr static char ptForbiddenAppInExamMode1[] = "Esta aplicação é";
constexpr static char itForbiddenAppInExamMode1[] = "Questa applicazione è";
constexpr static char deForbiddenAppInExamMode1[] = "Diese Anwendung ist im";
constexpr static char esForbiddenAppInExamMode1[] = "Esta aplicación está prohibida";
constexpr static char huForbiddenAppInExamMode1[] = "Ez az alkalmazás";
constexpr static char enForbiddenAppInExamMode2[] = "forbidden in exam mode";
constexpr static char frForbiddenAppInExamMode2[] = "pas autorisée en mode examen.";
constexpr static char nlForbiddenAppInExamMode2[] = "uitgesloten in examenstand";
constexpr static char ptForbiddenAppInExamMode2[] = "proibida no Modo de Exame";
constexpr static char itForbiddenAppInExamMode2[] = "proibita nella modalità d'esame";
constexpr static char deForbiddenAppInExamMode2[] = "Prüfungsmodus nicht erlaubt.";
constexpr static char esForbiddenAppInExamMode2[] = "en el modo de examen";
constexpr static char huForbiddenAppInExamMode2[] = "tilos vizsga módban";
constexpr static char enForbiddenValue[] = "Forbidden value";
constexpr static char frForbiddenValue[] = "Valeur interdite";
constexpr static char nlForbiddenValue[] = "Verboden waarde";
constexpr static char ptForbiddenValue[] = "Valor proibido";
constexpr static char itForbiddenValue[] = "Valore non consentito";
constexpr static char deForbiddenValue[] = "Verbotener Wert";
constexpr static char esForbiddenValue[] = "Valor prohibido";
constexpr static char huForbiddenValue[] = "Tiltott érték";
constexpr static char enForceDimension[] = "Strength";
constexpr static char frForceDimension[] = "Force";
constexpr static char nlForceDimension[] = "Kracht";
constexpr static char ptForceDimension[] = "Força";
constexpr static char itForceDimension[] = "Forza";
constexpr static char deForceDimension[] = "Stärke";
constexpr static char esForceDimension[] = "Fuerza";
constexpr static char huForceDimension[] = "Erő";
constexpr static char enFracPart[] = "Fractional part";
constexpr static char frFracPart[] = "Partie décimale";
constexpr static char nlFracPart[] = "Decimaal deel";
constexpr static char ptFracPart[] = "Parte fraccionaria";
constexpr static char itFracPart[] = "Parte frazionaria";
constexpr static char deFracPart[] = "Bruchteil";
constexpr static char esFracPart[] = "Parte fraccionaria";
constexpr static char huFracPart[] = "Frakciós rész";
constexpr static char enFrequencies1[] = "Frequency N1";
constexpr static char frFrequencies1[] = "Effectifs N1";
constexpr static char nlFrequencies1[] = "Frequenties N1";
constexpr static char ptFrequencies1[] = "Frequências N1";
constexpr static char itFrequencies1[] = "Frequenze N1";
constexpr static char deFrequencies1[] = "Häufigkeiten N1";
constexpr static char esFrequencies1[] = "Frecuencias N1";
constexpr static char huFrequencies1[] = "N1 Frekvencia";
constexpr static char enFrequencies2[] = "Frequency N2";
constexpr static char frFrequencies2[] = "Effectifs N2";
constexpr static char nlFrequencies2[] = "Frequenties N2";
constexpr static char ptFrequencies2[] = "Frequências N2";
constexpr static char itFrequencies2[] = "Frequenze N2";
constexpr static char deFrequencies2[] = "Häufigkeiten N2";
constexpr static char esFrequencies2[] = "Frecuencias N2";
constexpr static char huFrequencies2[] = "N2 Frekvencia";
constexpr static char enFrequencies3[] = "Frequency N3";
constexpr static char frFrequencies3[] = "Effectifs N3";
constexpr static char nlFrequencies3[] = "Frequenties N3";
constexpr static char ptFrequencies3[] = "Frequências N3";
constexpr static char itFrequencies3[] = "Frequenze N3";
constexpr static char deFrequencies3[] = "Häufigkeiten N3";
constexpr static char esFrequencies3[] = "Frecuencias N3";
constexpr static char huFrequencies3[] = "N3 Frekvencia";
constexpr static char enFrequency[] = " Frequency:";
constexpr static char frFrequency[] = " Effectif:";
constexpr static char nlFrequency[] = " Frequentie:";
constexpr static char ptFrequency[] = " Frequência:";
constexpr static char itFrequency[] = " Frequenza:";
constexpr static char deFrequency[] = " Häufigkeit:";
constexpr static char esFrequency[] = " Frecuencia:";
constexpr static char huFrequency[] = "Frekvencia:";
constexpr static char enFrequencyDimension[] = "Frequency";
constexpr static char frFrequencyDimension[] = "Fréquence";
constexpr static char nlFrequencyDimension[] = "Frequentie";
constexpr static char ptFrequencyDimension[] = "Frequência";
constexpr static char itFrequencyDimension[] = "Frequenza";
constexpr static char deFrequencyDimension[] = "Frequenz";
constexpr static char esFrequencyDimension[] = "Frecuencia";
constexpr static char huFrequencyDimension[] = "Frekvencia";
constexpr static char enFunctionApp[] = "Functions";
constexpr static char frFunctionApp[] = "Fonctions";
constexpr static char nlFunctionApp[] = "Functies";
constexpr static char ptFunctionApp[] = "Funções";
constexpr static char itFunctionApp[] = "Funzioni";
constexpr static char deFunctionApp[] = "Funktionen";
constexpr static char esFunctionApp[] = "Función";
constexpr static char huFunctionApp[] = "Funkciók";
constexpr static char enFunctionAppCapital[] = "FUNCTIONS";
constexpr static char frFunctionAppCapital[] = "FONCTIONS";
constexpr static char nlFunctionAppCapital[] = "FUNCTIES";
constexpr static char ptFunctionAppCapital[] = "FUNCOES";
constexpr static char itFunctionAppCapital[] = "FUNZIONI";
constexpr static char deFunctionAppCapital[] = "FUNKTIONEN";
constexpr static char esFunctionAppCapital[] = "FUNCION";
constexpr static char huFunctionAppCapital[] = "FUNKCIOK";
constexpr static char enFunctionColor[] = "Function color";
constexpr static char frFunctionColor[] = "Couleur de la fonction";
constexpr static char nlFunctionColor[] = "Functiekleur";
constexpr static char ptFunctionColor[] = "Cor da função";
constexpr static char itFunctionColor[] = "Colore della funzione";
constexpr static char deFunctionColor[] = "Farbe der Funktion";
constexpr static char esFunctionColor[] = "Color de la funcion";
constexpr static char huFunctionColor[] = "Funkció színe";
constexpr static char enFunctionDomain[] = "Plot range";
constexpr static char frFunctionDomain[] = "Domaine de tracé";
constexpr static char nlFunctionDomain[] = "Plotbereik";
constexpr static char ptFunctionDomain[] = "Intervalo do gráfico";
constexpr static char itFunctionDomain[] = "Int. tracciamento";
constexpr static char deFunctionDomain[] = "Plot-Bereich";
constexpr static char esFunctionDomain[] = "Rango del gráfico";
constexpr static char huFunctionDomain[] = "Tervtartomány";
constexpr static char enFunctionOptions[] = "Function options";
constexpr static char frFunctionOptions[] = "Options de la fonction";
constexpr static char nlFunctionOptions[] = "Functie-opties";
constexpr static char ptFunctionOptions[] = "Opções de função";
constexpr static char itFunctionOptions[] = "Opzioni della funzione";
constexpr static char deFunctionOptions[] = "Funktionsoptionen";
constexpr static char esFunctionOptions[] = "Opciones de la función";
constexpr static char huFunctionOptions[] = "Funkció opciók";
constexpr static char enFunctionTab[] = "Functions";
constexpr static char frFunctionTab[] = "Fonctions";
constexpr static char nlFunctionTab[] = "Functies";
constexpr static char ptFunctionTab[] = "Funções";
constexpr static char itFunctionTab[] = "Funzioni";
constexpr static char deFunctionTab[] = "Funktionen";
constexpr static char esFunctionTab[] = "Funciones";
constexpr static char huFunctionTab[] = "Funkciók";
constexpr static char enFunctions[] = "Functions";
constexpr static char frFunctions[] = "Fonctions";
constexpr static char nlFunctions[] = "Functies";
constexpr static char ptFunctions[] = "Funções";
constexpr static char itFunctions[] = "Funzioni";
constexpr static char deFunctions[] = "Funktionen";
constexpr static char esFunctions[] = "Funciones";
constexpr static char huFunctions[] = "Funciók";
constexpr static char enFunctionsAndVariables[] = "Functions and variables";
constexpr static char frFunctionsAndVariables[] = "Fonctions et variables";
constexpr static char nlFunctionsAndVariables[] = "Functies en variabelen";
constexpr static char ptFunctionsAndVariables[] = "Funções e variáveis";
constexpr static char itFunctionsAndVariables[] = "Funzioni e variabili";
constexpr static char deFunctionsAndVariables[] = "Funktionen und Variablen";
constexpr static char esFunctionsAndVariables[] = "Funciones y variables";
constexpr static char huFunctionsAndVariables[] = "Fonktiók és változók";
constexpr static char enFundamentalConstants[] = "Fundamental Constants";
constexpr static char frFundamentalConstants[] = "Constantes Fondamentales";
constexpr static char nlFundamentalConstants[] = "Fundamentele constanten";
constexpr static char ptFundamentalConstants[] = "Constantes Fondamentais";
constexpr static char itFundamentalConstants[] = "Costanti fondamentali";
constexpr static char deFundamentalConstants[] = "Fundamentale Konstanten";
constexpr static char esFundamentalConstants[] = "Constantes fundamentales";
constexpr static char huFundamentalConstants[] = "Alapvető Allandók";
constexpr static char enGAccelerationTag[] = "Acceleration";
constexpr static char frGAccelerationTag[] = "Accélération";
constexpr static char nlGAccelerationTag[] = "Acceleration";
constexpr static char ptGAccelerationTag[] = "Aceleração";
constexpr static char itGAccelerationTag[] = "Accelerazione";
constexpr static char deGAccelerationTag[] = "Beschleunigung";
constexpr static char esGAccelerationTag[] = "Aceleración";
constexpr static char huGAccelerationTag[] = "Gyorsulás";
constexpr static char enGConstantTag[] = "Constant";
constexpr static char frGConstantTag[] = "Constante";
constexpr static char nlGConstantTag[] = "Constant";
constexpr static char ptGConstantTag[] = "Constante";
constexpr static char itGConstantTag[] = "Costante";
constexpr static char deGConstantTag[] = "Konstant";
constexpr static char esGConstantTag[] = "Constante";
constexpr static char huGConstantTag[] = "Allandó";
constexpr static char enGasTag[] = "Gas Constant";
constexpr static char frGasTag[] = "Constante des gaz parfaits";
constexpr static char nlGasTag[] = "Gasconstante";
constexpr static char ptGasTag[] = "Constante de gás";
constexpr static char itGasTag[] = "Costante dei gas";
constexpr static char deGasTag[] = "Gaskonstante";
constexpr static char esGasTag[] = "Constante de gas";
constexpr static char huGasTag[] = "Gázállandó";
constexpr static char enGeometric[] = "Geometric";
constexpr static char frGeometric[] = "Géométrique";
constexpr static char nlGeometric[] = "Geometrisch";
constexpr static char ptGeometric[] = "Geométrica";
constexpr static char itGeometric[] = "Geometrica";
constexpr static char deGeometric[] = "Geometrische";
constexpr static char esGeometric[] = "Geométrica";
constexpr static char huGeometric[] = "Geometriai";
constexpr static char enGeometricDistribution[] = "Geometric distribution";
constexpr static char frGeometricDistribution[] = "Loi géométrique";
constexpr static char nlGeometricDistribution[] = "Geometrische verdeling";
constexpr static char ptGeometricDistribution[] = "Distribuição geométrica";
constexpr static char itGeometricDistribution[] = "Distribuzione geometrica";
constexpr static char deGeometricDistribution[] = "Geometrische Verteilung";
constexpr static char esGeometricDistribution[] = "Distribución geométrica";
constexpr static char huGeometricDistribution[] = "Geometriai eloszlás";
constexpr static char enGeometricMean[] = "Geometric mean";
constexpr static char frGeometricMean[] = "Moyenne géométrique";
constexpr static char nlGeometricMean[] = "Geometrisch gemiddelde";
constexpr static char ptGeometricMean[] = "Média geométrica";
constexpr static char itGeometricMean[] = "Media geometrica";
constexpr static char deGeometricMean[] = "Geometrisches Mittel";
constexpr static char esGeometricMean[] = "Significado geometrico";
constexpr static char huGeometricMean[] = "Geometriai átlag";
constexpr static char enGetMoreAppsAt[] = "Get more apps at";
constexpr static char frGetMoreAppsAt[] = "Télécharge d'autres apps sur";
constexpr static char nlGetMoreAppsAt[] = "Get more apps at";
constexpr static char ptGetMoreAppsAt[] = "Obtenga más aplicaciones en";
constexpr static char itGetMoreAppsAt[] = "Get more apps at";
constexpr static char deGetMoreAppsAt[] = "Weitere Apps abrufen bei";
constexpr static char esGetMoreAppsAt[] = "Obtenga más aplicaciones en";
constexpr static char huGetMoreAppsAt[] = "Mégtöbb alkalmazás itt :";
constexpr static char enGlass[] = "Glass";
constexpr static char frGlass[] = "Verre";
constexpr static char nlGlass[] = "Glas";
constexpr static char ptGlass[] = "Vidro";
constexpr static char itGlass[] = "Vetro";
constexpr static char deGlass[] = "Glas";
constexpr static char esGlass[] = "Vidrio";
constexpr static char huGlass[] = "Uveg";
constexpr static char enGold[] = "Gold";
constexpr static char frGold[] = "Or";
constexpr static char nlGold[] = "Goud";
constexpr static char ptGold[] = "Ouro";
constexpr static char itGold[] = "Oro";
constexpr static char deGold[] = "Gold";
constexpr static char esGold[] = "Oro";
constexpr static char huGold[] = "Arany";
constexpr static char enGoto[] = "Go to";
constexpr static char frGoto[] = "Aller à";
constexpr static char nlGoto[] = "Ga naar";
constexpr static char ptGoto[] = "Ir para";
constexpr static char itGoto[] = "Andare a";
constexpr static char deGoto[] = "Gehe zu";
constexpr static char esGoto[] = "Ir a";
constexpr static char huGoto[] = "Menj ...";
constexpr static char enGradians[] = "Gradians ";
constexpr static char frGradians[] = "Grades ";
constexpr static char nlGradians[] = "Decimale graden ";
constexpr static char ptGradians[] = "Grados ";
constexpr static char itGradians[] = "Gradienti ";
constexpr static char deGradians[] = "Gon ";
constexpr static char esGradians[] = "Gradianes ";
constexpr static char huGradians[] = "Gradiens ";
constexpr static char enGraphTab[] = "Graph";
constexpr static char frGraphTab[] = "Graphique";
constexpr static char nlGraphTab[] = "Grafiek";
constexpr static char ptGraphTab[] = "Gráfico";
constexpr static char itGraphTab[] = "Grafico";
constexpr static char deGraphTab[] = "Graph";
constexpr static char esGraphTab[] = "Gráfico";
constexpr static char huGraphTab[] = "Grafikon";
constexpr static char enGravitation[] = "Gravitation";
constexpr static char frGravitation[] = "Gravitation";
constexpr static char nlGravitation[] = "Gravitatie";
constexpr static char ptGravitation[] = "Gravitação";
constexpr static char itGravitation[] = "Gravitazione";
constexpr static char deGravitation[] = "Gravitation";
constexpr static char esGravitation[] = "Gravitación";
constexpr static char huGravitation[] = "Gravitáció";
constexpr static char enGreatCommonDivisor[] = "GCD";
constexpr static char frGreatCommonDivisor[] = "PGCD de p et q";
constexpr static char nlGreatCommonDivisor[] = "GGD";
constexpr static char ptGreatCommonDivisor[] = "MDC";
constexpr static char itGreatCommonDivisor[] = "MCD";
constexpr static char deGreatCommonDivisor[] = "ggT";
constexpr static char esGreatCommonDivisor[] = "MCD";
constexpr static char huGreatCommonDivisor[] = "GCD";
constexpr static char enHardwareTestLaunch1[] = "You are starting the hardware";
constexpr static char frHardwareTestLaunch1[] = "Vous allez lancer le test usine.";
constexpr static char nlHardwareTestLaunch1[] = "Je start de hardware test. ";
constexpr static char ptHardwareTestLaunch1[] = "Vai executar o teste da planta.";
constexpr static char itHardwareTestLaunch1[] = "Farete il test hardware.";
constexpr static char deHardwareTestLaunch1[] = "Sie sind dabei, den Hardwaretest zu";
constexpr static char esHardwareTestLaunch1[] = "Esta iniciando la prueba de";
constexpr static char huHardwareTestLaunch1[] = "A hardverteszt indítása :";
constexpr static char enHardwareTestLaunch2[] = " test. At the end of the test, you";
constexpr static char frHardwareTestLaunch2[] = "Pour en sortir vous devrez";
constexpr static char nlHardwareTestLaunch2[] = "Aan het eind van de test moet ";
constexpr static char ptHardwareTestLaunch2[] = "Para sair tem que executar";
constexpr static char itHardwareTestLaunch2[] = "Per uscire dovrete";
constexpr static char deHardwareTestLaunch2[] = "starten. Um ihn zu verlassen,";
constexpr static char esHardwareTestLaunch2[] = "fabrica. Para quitar la prueba,";
constexpr static char huHardwareTestLaunch2[] = "Nyomjon a reset gombra a";
constexpr static char enHardwareTestLaunch3[] = "will have to reset the device and";
constexpr static char frHardwareTestLaunch3[] = "appuyer sur le bouton reset";
constexpr static char nlHardwareTestLaunch3[] = "je de rekenmachine resetten en ";
constexpr static char ptHardwareTestLaunch3[] = "uma redefinição, que irá apagar";
constexpr static char itHardwareTestLaunch3[] = "premere il tasto reset";
constexpr static char deHardwareTestLaunch3[] = "müssen Sie einen Reset durchführen,";
constexpr static char esHardwareTestLaunch3[] = "debera resetear su equipo.";
constexpr static char huHardwareTestLaunch3[] = "teszt megállításához (ez";
constexpr static char enHardwareTestLaunch4[] = "all your data will be deleted.";
constexpr static char frHardwareTestLaunch4[] = "ce qui supprimera vos données.";
constexpr static char nlHardwareTestLaunch4[] = "worden al je gegevens verwijderd.";
constexpr static char ptHardwareTestLaunch4[] = "os seus dados.";
constexpr static char itHardwareTestLaunch4[] = "che cancellerà i vostri dati.";
constexpr static char deHardwareTestLaunch4[] = "der Ihre Daten löschen wird.";
constexpr static char esHardwareTestLaunch4[] = "";
constexpr static char huHardwareTestLaunch4[] = "az adatokat törölni fogja)";
constexpr static char enHarmonicMean[] = "Harmonic Mean";
constexpr static char frHarmonicMean[] = "Moyenne harmonique";
constexpr static char nlHarmonicMean[] = "Harmonisch gemiddelde";
constexpr static char ptHarmonicMean[] = "Média Harmônica";
constexpr static char itHarmonicMean[] = "Media armonica";
constexpr static char deHarmonicMean[] = "Harmonische Mittel";
constexpr static char esHarmonicMean[] = "Significado armonico";
constexpr static char huHarmonicMean[] = "Harmonikus átlag";
constexpr static char enHartreeConstantTag[] = "Hartree Constant";
constexpr static char frHartreeConstantTag[] = "Constante de Hartree";
constexpr static char nlHartreeConstantTag[] = "Hartreeconstante";
constexpr static char ptHartreeConstantTag[] = "Constante de Hartree";
constexpr static char itHartreeConstantTag[] = "Costante di Hartree";
constexpr static char deHartreeConstantTag[] = "Hartbaum-Konstante";
constexpr static char esHartreeConstantTag[] = "Constante de Hartree";
constexpr static char huHartreeConstantTag[] = "Hartree Allandó";
constexpr static char enHexadecimalBase[] = "Hexadecimal";
constexpr static char frHexadecimalBase[] = "Hexadécimal";
constexpr static char nlHexadecimalBase[] = "Hexadecimaal";
constexpr static char ptHexadecimalBase[] = "Hexadecimal";
constexpr static char itHexadecimalBase[] = "Esadecimale";
constexpr static char deHexadecimalBase[] = "Hexadezimal";
constexpr static char esHexadecimalBase[] = "Hexadecimal";
constexpr static char huHexadecimalBase[] = "Hexadecimális";
constexpr static char enHideDerivativeColumn[] = "Hide the derivative function";
constexpr static char frHideDerivativeColumn[] = "Masquer la fonction dérivée";
constexpr static char nlHideDerivativeColumn[] = "Verberg de afgeleide functie";
constexpr static char ptHideDerivativeColumn[] = "Esconder função derivada";
constexpr static char itHideDerivativeColumn[] = "Nascondere la funzione derivata";
constexpr static char deHideDerivativeColumn[] = "Ableitungsfunktion ausblenden";
constexpr static char esHideDerivativeColumn[] = "Ocultar la derivada";
constexpr static char huHideDerivativeColumn[] = "A derivált függvény oszlop elrejtése";
constexpr static char enHistogramSet[] = "Histogram settings";
constexpr static char frHistogramSet[] = "Réglage de l'histogramme";
constexpr static char nlHistogramSet[] = "Histogram instellingen";
constexpr static char ptHistogramSet[] = "Configurando o histograma";
constexpr static char itHistogramSet[] = "Regolazione dell'istogramma";
constexpr static char deHistogramSet[] = "Einstellung des Histogramms";
constexpr static char esHistogramSet[] = "Parámetros del histograma";
constexpr static char huHistogramSet[] = "Hisztogram beállítások";
constexpr static char enHistogramTab[] = "Histogram";
constexpr static char frHistogramTab[] = "Histogramme";
constexpr static char nlHistogramTab[] = "Histogram";
constexpr static char ptHistogramTab[] = "Histograma";
constexpr static char itHistogramTab[] = "Istogramma";
constexpr static char deHistogramTab[] = "Histogramm";
constexpr static char esHistogramTab[] = "Histograma";
constexpr static char huHistogramTab[] = "Hisztogram";
constexpr static char enHyperbolicCosine[] = "Hyperbolic cosine";
constexpr static char frHyperbolicCosine[] = "Cosinus hyperbolique";
constexpr static char nlHyperbolicCosine[] = "Hyperbolische cosinus";
constexpr static char ptHyperbolicCosine[] = "Cosseno hiperbólico";
constexpr static char itHyperbolicCosine[] = "Coseno iperbolico";
constexpr static char deHyperbolicCosine[] = "Hyperbolischer Kosinus";
constexpr static char esHyperbolicCosine[] = "Coseno hiperbólico";
constexpr static char huHyperbolicCosine[] = "Hiperbolikus koszinusz";
constexpr static char enHyperbolicSine[] = "Hyperbolic sine";
constexpr static char frHyperbolicSine[] = "Sinus hyperbolique";
constexpr static char nlHyperbolicSine[] = "Hyperbolische sinus";
constexpr static char ptHyperbolicSine[] = "Seno hiperbólico";
constexpr static char itHyperbolicSine[] = "Seno iperbolico";
constexpr static char deHyperbolicSine[] = "Hyperbolischer Sinus";
constexpr static char esHyperbolicSine[] = "Seno hiperbólico";
constexpr static char huHyperbolicSine[] = "Hiperbolikus szinusz";
constexpr static char enHyperbolicTangent[] = "Hyperbolic tangent";
constexpr static char frHyperbolicTangent[] = "Tangente hyperbolique";
constexpr static char nlHyperbolicTangent[] = "Hyperbolische tangens";
constexpr static char ptHyperbolicTangent[] = "Tangente hiperbólica";
constexpr static char itHyperbolicTangent[] = "Tangente iperbolica";
constexpr static char deHyperbolicTangent[] = "Hyperbolischer Tangens";
constexpr static char esHyperbolicTangent[] = "Tangente hiperbòlica";
constexpr static char huHyperbolicTangent[] = "Hiperbolikus érintö";
constexpr static char enHyperbolicTrigonometry[] = "Hyperbolic trigonometry";
constexpr static char frHyperbolicTrigonometry[] = "Trigonométrie hyperbolique";
constexpr static char nlHyperbolicTrigonometry[] = "Hyperbolische functies";
constexpr static char ptHyperbolicTrigonometry[] = "Funções hiperbólicas";
constexpr static char itHyperbolicTrigonometry[] = "Funzioni iperboliche";
constexpr static char deHyperbolicTrigonometry[] = "Hyperbelfunktionen";
constexpr static char esHyperbolicTrigonometry[] = "Trigonometría hiperbólica";
constexpr static char huHyperbolicTrigonometry[] = "Hiperbolikus trigonometria";
constexpr static char enIdentity[] = "Identity matrix of size n";
constexpr static char frIdentity[] = "Matrice identité de taille n";
constexpr static char nlIdentity[] = "Eenheidsmatrix van formaat n";
constexpr static char ptIdentity[] = "Matriz identidade de ordem n";
constexpr static char itIdentity[] = "Matrice identità di dimensione n";
constexpr static char deIdentity[] = "Einheitsmatrix der Größe n";
constexpr static char esIdentity[] = "Matriz identidad de tamaño n";
constexpr static char huIdentity[] = "n méretü azonosító mátrix";
constexpr static char enIdleTimeBeforeDimming[] = "Dim after (s)";
constexpr static char frIdleTimeBeforeDimming[] = "Assombrir après (s)";
constexpr static char nlIdleTimeBeforeDimming[] = "Donkerder maken na (s)";
constexpr static char ptIdleTimeBeforeDimming[] = "Diminuir depois (s)";
constexpr static char itIdleTimeBeforeDimming[] = "Scurisci dopo (s)";
constexpr static char deIdleTimeBeforeDimming[] = "Abdunkeln nach (s)";
constexpr static char esIdleTimeBeforeDimming[] = "Oscurecer después de (s)";
constexpr static char huIdleTimeBeforeDimming[] = "Assombrir après (s)";
constexpr static char enIdleTimeBeforeSuspend[] = "Suspend after (s)";
constexpr static char frIdleTimeBeforeSuspend[] = "Eteindre après (s)";
constexpr static char nlIdleTimeBeforeSuspend[] = "Suspend after (s)";
constexpr static char ptIdleTimeBeforeSuspend[] = "Suspender depois (s)";
constexpr static char itIdleTimeBeforeSuspend[] = "Sospendi dopo (s)";
constexpr static char deIdleTimeBeforeSuspend[] = "Anhalten nach (s)";
constexpr static char esIdleTimeBeforeSuspend[] = "Suspender después de (s)";
constexpr static char huIdleTimeBeforeSuspend[] = "Eteindre après (s)";
constexpr static char enImaginaryPart[] = "Imaginary part";
constexpr static char frImaginaryPart[] = "Partie imaginaire";
constexpr static char nlImaginaryPart[] = "Imaginair deel";
constexpr static char ptImaginaryPart[] = "Parte imaginária";
constexpr static char itImaginaryPart[] = "Parte immaginaria";
constexpr static char deImaginaryPart[] = "Imaginärteil";
constexpr static char esImaginaryPart[] = "Parte imaginaria";
constexpr static char huImaginaryPart[] = "Képzeletbeli rész";
constexpr static char enImportedModulesAndScripts[] = "Imported modules and scripts";
constexpr static char frImportedModulesAndScripts[] = "Modules et scripts importés";
constexpr static char nlImportedModulesAndScripts[] = "Imported modules and scripts";
constexpr static char ptImportedModulesAndScripts[] = "Módulos e scripts importados";
constexpr static char itImportedModulesAndScripts[] = "Moduli e scripts importati";
constexpr static char deImportedModulesAndScripts[] = "Importierte Module und Skripte";
constexpr static char esImportedModulesAndScripts[] = "Módulos y archivos importados";
constexpr static char huImportedModulesAndScripts[] = "Importált scriptek és modulok";
constexpr static char enInductanceDimension[] = "Inductance";
constexpr static char frInductanceDimension[] = "Inductance";
constexpr static char nlInductanceDimension[] = "Inductie";
constexpr static char ptInductanceDimension[] = "Indutância";
constexpr static char itInductanceDimension[] = "Induttanza";
constexpr static char deInductanceDimension[] = "Induktivität";
constexpr static char esInductanceDimension[] = "Inductancia";
constexpr static char huInductanceDimension[] = "Induktivitás";
constexpr static char enInductanceMenu[] = "Electrical inductance";
constexpr static char frInductanceMenu[] = "Inductance";
constexpr static char nlInductanceMenu[] = "Zelfinductie";
constexpr static char ptInductanceMenu[] = "Indutância";
constexpr static char itInductanceMenu[] = "Induttanza";
constexpr static char deInductanceMenu[] = "Elektrische Induktivität";
constexpr static char esInductanceMenu[] = "Electrical inductance";
constexpr static char huInductanceMenu[] = "Elektromos induktivitás";
constexpr static char enInfiniteNumberOfSolutions[] = "There are an infinite number of solutions";
constexpr static char frInfiniteNumberOfSolutions[] = "Le système admet une infinité de solutions";
constexpr static char nlInfiniteNumberOfSolutions[] = "Er is een oneindig aantal oplossingen";
constexpr static char ptInfiniteNumberOfSolutions[] = "Existe uma infinidade de soluções";
constexpr static char itInfiniteNumberOfSolutions[] = "Il sistema ammette un'infinità di soluzioni";
constexpr static char deInfiniteNumberOfSolutions[] = "Es gibt unendlich viele Lösungen";
constexpr static char esInfiniteNumberOfSolutions[] = "Hay un número infinito de soluciones";
constexpr static char huInfiniteNumberOfSolutions[] = "Végtelen menyi megoldások léteznek";
constexpr static char enInfinityMessage[] = "Infinity";
constexpr static char frInfinityMessage[] = "Infini";
constexpr static char nlInfinityMessage[] = "Eindeloos";
constexpr static char ptInfinityMessage[] = "Infinito";
constexpr static char itInfinityMessage[] = "Infinito";
constexpr static char deInfinityMessage[] = "Unendlich";
constexpr static char esInfinityMessage[] = "Infinito";
constexpr static char huInfinityMessage[] = "Végtelen";
constexpr static char enIntegral[] = "Integral";
constexpr static char frIntegral[] = "Intégrale de f sur [a;b]";
constexpr static char nlIntegral[] = "Integraal";
constexpr static char ptIntegral[] = "Integral";
constexpr static char itIntegral[] = "Integrale";
constexpr static char deIntegral[] = "Integral";
constexpr static char esIntegral[] = "Integral";
constexpr static char huIntegral[] = "Integral";
constexpr static char enInterquartileRange[] = "Interquartile range";
constexpr static char frInterquartileRange[] = "Ecart interquartile";
constexpr static char nlInterquartileRange[] = "Interkwartielafstand";
constexpr static char ptInterquartileRange[] = "Amplitude interquartil";
constexpr static char itInterquartileRange[] = "Scarto interquartile";
constexpr static char deInterquartileRange[] = "Interquartilsabstand";
constexpr static char esInterquartileRange[] = "Rango intercuartilo";
constexpr static char huInterquartileRange[] = "Interkvartilis tartomány";
constexpr static char enIntersection[] = "Intersection";
constexpr static char frIntersection[] = "Intersection";
constexpr static char nlIntersection[] = "Snijpunt";
constexpr static char ptIntersection[] = "Interseção";
constexpr static char itIntersection[] = "Intersezione";
constexpr static char deIntersection[] = "Schnittmenge";
constexpr static char esIntersection[] = "Intersección";
constexpr static char huIntersection[] = "Metszéspont";
constexpr static char enInterval[] = " Interval ";
constexpr static char frInterval[] = " Intervalle ";
constexpr static char nlInterval[] = " Interval ";
constexpr static char ptInterval[] = " Intervalo";
constexpr static char itInterval[] = " Intervallo ";
constexpr static char deInterval[] = " Intervall";
constexpr static char esInterval[] = " Intervalo";
constexpr static char huInterval[] = "Intervallum";
constexpr static char enIntervalDefinition[] = "[a,b]: Interval";
constexpr static char frIntervalDefinition[] = "[a;b] : Intervalle";
constexpr static char nlIntervalDefinition[] = "[a,b]: Interval";
constexpr static char ptIntervalDefinition[] = "[a,b] : Intervalo";
constexpr static char itIntervalDefinition[] = "[a,b] : Intervallo";
constexpr static char deIntervalDefinition[] = "[a,b]: Intervall";
constexpr static char esIntervalDefinition[] = "[a,b] : Intervalo";
constexpr static char huIntervalDefinition[] = "[a, b]: intervallum";
constexpr static char enIntervalSet[] = "Set the interval";
constexpr static char frIntervalSet[] = "Régler l'intervalle";
constexpr static char nlIntervalSet[] = "Stel het interval in";
constexpr static char ptIntervalSet[] = "Ajustar o intervalo";
constexpr static char itIntervalSet[] = "Imposta l'intervallo";
constexpr static char deIntervalSet[] = "Intervall einstellen";
constexpr static char esIntervalSet[] = "Ajustar el intervalo";
constexpr static char huIntervalSet[] = "Allítsa be az intervallumot";
constexpr static char enIntervalT[] = "t interval";
constexpr static char frIntervalT[] = "Intervalle t";
constexpr static char nlIntervalT[] = "t interval";
constexpr static char ptIntervalT[] = "Intervalo t";
constexpr static char itIntervalT[] = "Intervallo t";
constexpr static char deIntervalT[] = "t-te Intervall";
constexpr static char esIntervalT[] = "Intervalo t";
constexpr static char huIntervalT[] = "t intervallum";
constexpr static char enIntervalTheta[] = "θ interval";
constexpr static char frIntervalTheta[] = "Intervalle θ";
constexpr static char nlIntervalTheta[] = "θ interval";
constexpr static char ptIntervalTheta[] = "Intervalo θ";
constexpr static char itIntervalTheta[] = "Intervallo θ";
constexpr static char deIntervalTheta[] = "θ-te Intervall";
constexpr static char esIntervalTheta[] = "Intervalo θ";
constexpr static char huIntervalTheta[] = "θ intervallum";
constexpr static char enIntervalX[] = "x interval";
constexpr static char frIntervalX[] = "Intervalle x";
constexpr static char nlIntervalX[] = "x interval";
constexpr static char ptIntervalX[] = "Intervalo x";
constexpr static char itIntervalX[] = "Intervallo x";
constexpr static char deIntervalX[] = "x-te Intervall";
constexpr static char esIntervalX[] = "Intervalo x";
constexpr static char huIntervalX[] = "x intervallum";
constexpr static char enInvBinomial[] = "m where P(X<=m)=a, X follows B(n,p)";
constexpr static char frInvBinomial[] = "m où P(X<=m)=a et X suit B(n,p)";
constexpr static char nlInvBinomial[] = "m waar P(X<=m)=a, X volgt B(n,p)";
constexpr static char ptInvBinomial[] = "m onde P(X<=m)=a e X segue B(n,p)";
constexpr static char itInvBinomial[] = "m dove P(X<=m)=a e X segue B(n,p)";
constexpr static char deInvBinomial[] = "m wobei P(X<=m)=a, X folgt B(n,p)";
constexpr static char esInvBinomial[] = "m donde P(X<=m)=a y X sigue B(n,p)";
constexpr static char huInvBinomial[] = "m ahol P (X <= m) = a, X követi a B-t (n, p)";
constexpr static char enInvNorm[] = "m where P(X<m)=a, X follows N(μ,σ)";
constexpr static char frInvNorm[] = "m où P(X<m)=a et X suit N(μ,σ)";
constexpr static char nlInvNorm[] = "m waar P(X<m)=a, X volgt N(μ,σ)";
constexpr static char ptInvNorm[] = "m onde P(X<m)=a e X segue N(μ,σ)";
constexpr static char itInvNorm[] = "m dove P(X<m)=a e X segue N(μ,σ)";
constexpr static char deInvNorm[] = "m wobei P(X<m)=a, X folgt N(μ,σ)";
constexpr static char esInvNorm[] = "m donde P(X<m)=a y X sigue N(μ,σ)";
constexpr static char huInvNorm[] = "m, ahol P (X <m) = a, X az N-t követi (μ, σ2)";
constexpr static char enInvSort[] = "Sort descending";
constexpr static char frInvSort[] = "Tri décroissant";
constexpr static char nlInvSort[] = "Sorteer aflopend";
constexpr static char ptInvSort[] = "Ordem decrescente";
constexpr static char itInvSort[] = "Ordine decrescente";
constexpr static char deInvSort[] = "Absteigend sortieren";
constexpr static char esInvSort[] = "Clasificación descendente";
constexpr static char huInvSort[] = "Csökkenö rendezés";
constexpr static char enInverse[] = "Inverse";
constexpr static char frInverse[] = "Inverse de M";
constexpr static char nlInverse[] = "Inverse";
constexpr static char ptInverse[] = "Matriz inversa";
constexpr static char itInverse[] = "Inversa";
constexpr static char deInverse[] = "Inverse";
constexpr static char esInverse[] = "Inversa";
constexpr static char huInverse[] = "Inverz";
constexpr static char enInverseHyperbolicCosine[] = "Inverse hyperbolic cosine";
constexpr static char frInverseHyperbolicCosine[] = "Argument cosinus hyperbolique";
constexpr static char nlInverseHyperbolicCosine[] = "Inverse hyperbolische cosinus";
constexpr static char ptInverseHyperbolicCosine[] = "Arco cosseno hiperbólico";
constexpr static char itInverseHyperbolicCosine[] = "Coseno iperbolico inverso";
constexpr static char deInverseHyperbolicCosine[] = "Inverser hyperbolischer Kosinus";
constexpr static char esInverseHyperbolicCosine[] = "Argumento coseno hiperbólico";
constexpr static char huInverseHyperbolicCosine[] = "Inverz hiperbolikus koszinusz";
constexpr static char enInverseHyperbolicSine[] = "Inverse hyperbolic sine";
constexpr static char frInverseHyperbolicSine[] = "Argument sinus hyperbolique";
constexpr static char nlInverseHyperbolicSine[] = "Inverse hyperbolische sinus";
constexpr static char ptInverseHyperbolicSine[] = "Arco seno hiperbólico";
constexpr static char itInverseHyperbolicSine[] = "Seno iperbolico inverso";
constexpr static char deInverseHyperbolicSine[] = "Inverser hyperbolischer Sinus";
constexpr static char esInverseHyperbolicSine[] = "Argumento seno hiperbólico";
constexpr static char huInverseHyperbolicSine[] = "Inverz hiperbolikus szinusz";
constexpr static char enInverseHyperbolicTangent[] = "Inverse hyperbolic tangent";
constexpr static char frInverseHyperbolicTangent[] = "Argument tangente hyperbolique";
constexpr static char nlInverseHyperbolicTangent[] = "Inverse hyperbolische tangens";
constexpr static char ptInverseHyperbolicTangent[] = "Arco tangente hiperbólica";
constexpr static char itInverseHyperbolicTangent[] = "Tangente iperbolica inversa";
constexpr static char deInverseHyperbolicTangent[] = "Inverser hyperbolischer Tangens";
constexpr static char esInverseHyperbolicTangent[] = "Argumento tangente hiperbólica";
constexpr static char huInverseHyperbolicTangent[] = "Inverz hiperbolikus érintö";
constexpr static char enIonKeyList[] = "List of keys";
constexpr static char frIonKeyList[] = "Liste des touches";
constexpr static char nlIonKeyList[] = "Lijst met sleutels";
constexpr static char ptIonKeyList[] = "Lista de chaves";
constexpr static char itIonKeyList[] = "Elenco delle chiavi";
constexpr static char deIonKeyList[] = "Liste der Schlüssel";
constexpr static char esIonKeyList[] = "Lista de llaves";
constexpr static char huIonKeyList[] = "A kulcsok listája";
constexpr static char enIonSelector[] = "Key selector";
constexpr static char frIonSelector[] = "Sélecteur de touche";
constexpr static char nlIonSelector[] = "Toetsenkiezer";
constexpr static char ptIonSelector[] = "Seletor de chave";
constexpr static char itIonSelector[] = "Selettore a chiave";
constexpr static char deIonSelector[] = "Schlüsselauswahl";
constexpr static char esIonSelector[] = "Selector de llave";
constexpr static char huIonSelector[] = "Kulcsválasztó";
constexpr static char enIron[] = "Iron";
constexpr static char frIron[] = "Fer";
constexpr static char nlIron[] = "IJzer";
constexpr static char ptIron[] = "Ferro de engomar";
constexpr static char itIron[] = "Ferro";
constexpr static char deIron[] = "eisen";
constexpr static char esIron[] = "Hierro";
constexpr static char huIron[] = "Vas";
constexpr static char enLambdaExponentialDefinition[] = "λ: Rate parameter";
constexpr static char frLambdaExponentialDefinition[] = "λ : Paramètre";
constexpr static char nlLambdaExponentialDefinition[] = "λ: Snelheidsparameter";
constexpr static char ptLambdaExponentialDefinition[] = "λ : Parâmetro";
constexpr static char itLambdaExponentialDefinition[] = "λ : Parametro";
constexpr static char deLambdaExponentialDefinition[] = "λ: Parameter";
constexpr static char esLambdaExponentialDefinition[] = "λ : Parámetro";
constexpr static char huLambdaExponentialDefinition[] = "λ: paraméter";
constexpr static char enLambdaPoissonDefinition[] = "λ: Parameter";
constexpr static char frLambdaPoissonDefinition[] = "λ : Paramètre";
constexpr static char nlLambdaPoissonDefinition[] = "λ: Parameter";
constexpr static char ptLambdaPoissonDefinition[] = "λ : Parâmetro";
constexpr static char itLambdaPoissonDefinition[] = "λ : Parametro";
constexpr static char deLambdaPoissonDefinition[] = "λ: Parameter";
constexpr static char esLambdaPoissonDefinition[] = "λ : Parámetro";
constexpr static char huLambdaPoissonDefinition[] = "λ: paraméter";
constexpr static char enLanguage[] = "Language";
constexpr static char frLanguage[] = "Langue";
constexpr static char nlLanguage[] = "Taal";
constexpr static char ptLanguage[] = "Idioma";
constexpr static char itLanguage[] = "Lingua";
constexpr static char deLanguage[] = "Sprache";
constexpr static char esLanguage[] = "Idioma";
constexpr static char huLanguage[] = "Nyelv";
constexpr static char enLargeFont[] = "Large ";
constexpr static char frLargeFont[] = "Grande ";
constexpr static char nlLargeFont[] = "Groot ";
constexpr static char ptLargeFont[] = "Grande ";
constexpr static char itLargeFont[] = "Grande ";
constexpr static char deLargeFont[] = "Große ";
constexpr static char esLargeFont[] = "Grande ";
constexpr static char huLargeFont[] = "Nagy ";
constexpr static char enLeastCommonMultiple[] = "LCM";
constexpr static char frLeastCommonMultiple[] = "PPCM de p et q";
constexpr static char nlLeastCommonMultiple[] = "KGV";
constexpr static char ptLeastCommonMultiple[] = "MMC";
constexpr static char itLeastCommonMultiple[] = "mcm";
constexpr static char deLeastCommonMultiple[] = "kgV";
constexpr static char esLeastCommonMultiple[] = "MCM";
constexpr static char huLeastCommonMultiple[] = "LCM";
constexpr static char enLength[] = "Length";
constexpr static char frLength[] = "Longueur";
constexpr static char nlLength[] = "Lengte";
constexpr static char ptLength[] = "Comprimento";
constexpr static char itLength[] = "Lunghezza";
constexpr static char deLength[] = "Länge";
constexpr static char esLength[] = "Lenght";
constexpr static char huLength[] = "Hosszúság";
constexpr static char enLinear[] = "Linear";
constexpr static char frLinear[] = "Linéaire";
constexpr static char nlLinear[] = "Lineair";
constexpr static char ptLinear[] = "Linear";
constexpr static char itLinear[] = "Lineare";
constexpr static char deLinear[] = "Lineare";
constexpr static char esLinear[] = "Lineal";
constexpr static char huLinear[] = "Lineáris";
constexpr static char enLists[] = "List";
constexpr static char frLists[] = "Listes";
constexpr static char nlLists[] = "Lijst";
constexpr static char ptLists[] = "Listas";
constexpr static char itLists[] = "Elenchi";
constexpr static char deLists[] = "Listen";
constexpr static char esLists[] = "Listas";
constexpr static char huLists[] = "Lista";
constexpr static char enLithium[] = "Lithium";
constexpr static char frLithium[] = "Lithium";
constexpr static char nlLithium[] = "Lithium";
constexpr static char ptLithium[] = "Lítio";
constexpr static char itLithium[] = "Litio";
constexpr static char deLithium[] = "Lithium";
constexpr static char esLithium[] = "Litio";
constexpr static char huLithium[] = "Lítium";
constexpr static char enLogarithmic[] = "Logarithmic";
constexpr static char frLogarithmic[] = "Logarithmique";
constexpr static char nlLogarithmic[] = "Logaritmisch";
constexpr static char ptLogarithmic[] = "Logarítmica";
constexpr static char itLogarithmic[] = "Logaritmica";
constexpr static char deLogarithmic[] = "Logarithmische";
constexpr static char esLogarithmic[] = "Logarítmica";
constexpr static char huLogarithmic[] = "Logaritmikus";
constexpr static char enLogistic[] = "Logistic";
constexpr static char frLogistic[] = "Logistique";
constexpr static char nlLogistic[] = "Logistiek";
constexpr static char ptLogistic[] = "Logística";
constexpr static char itLogistic[] = "Logistica";
constexpr static char deLogistic[] = "Logistische";
constexpr static char esLogistic[] = "Logística";
constexpr static char huLogistic[] = "Logisztikai";
constexpr static char enLoopsAndTests[] = "Loops and tests";
constexpr static char frLoopsAndTests[] = "Boucles et tests";
constexpr static char nlLoopsAndTests[] = "Herhalingen en testen";
constexpr static char ptLoopsAndTests[] = "Laços e testes";
constexpr static char itLoopsAndTests[] = "Cicli e test";
constexpr static char deLoopsAndTests[] = "Schleifen und Tests";
constexpr static char esLoopsAndTests[] = "Loops and tests";
constexpr static char huLoopsAndTests[] = "Hurkok és tesztek";
constexpr static char enLowBattery[] = "Low battery";
constexpr static char frLowBattery[] = "Batterie faible";
constexpr static char nlLowBattery[] = "Batterij bijna leeg";
constexpr static char ptLowBattery[] = "Bateria fraca";
constexpr static char itLowBattery[] = "Batteria bassa";
constexpr static char deLowBattery[] = "Akku erschöpft";
constexpr static char esLowBattery[] = "Batería baja";
constexpr static char huLowBattery[] = "Majdnem kimerült az elem";
constexpr static char enLuminousIntensityDimension[] = "Light intensity";
constexpr static char frLuminousIntensityDimension[] = "Intensité lumineuse";
constexpr static char nlLuminousIntensityDimension[] = "Lichtsterkte";
constexpr static char ptLuminousIntensityDimension[] = "Intensidade da luz";
constexpr static char itLuminousIntensityDimension[] = "Intensità luminosa";
constexpr static char deLuminousIntensityDimension[] = "Lichtintensität";
constexpr static char esLuminousIntensityDimension[] = "Intensidad de luz";
constexpr static char huLuminousIntensityDimension[] = "Fény intenzitása";
constexpr static char enMagneticFieldDimension[] = "Magnetic field";
constexpr static char frMagneticFieldDimension[] = "Champ magnétique";
constexpr static char nlMagneticFieldDimension[] = "Magnetisch veld";
constexpr static char ptMagneticFieldDimension[] = "Campo magnético";
constexpr static char itMagneticFieldDimension[] = "Campo magnetico";
constexpr static char deMagneticFieldDimension[] = "Magnetfeld";
constexpr static char esMagneticFieldDimension[] = "Campo magnético";
constexpr static char huMagneticFieldDimension[] = "Mágneses mező";
constexpr static char enMagneticFluxDimension[] = "magnetic flux";
constexpr static char frMagneticFluxDimension[] = "Flux magnétique";
constexpr static char nlMagneticFluxDimension[] = "magnetische flux";
constexpr static char ptMagneticFluxDimension[] = "fluxo magnético";
constexpr static char itMagneticFluxDimension[] = "flusso magnetico";
constexpr static char deMagneticFluxDimension[] = "magnetischer Fluss";
constexpr static char esMagneticFluxDimension[] = "flujo magnético";
constexpr static char huMagneticFluxDimension[] = "mágneses fluxus";
constexpr static char enMagneticFluxQuantumTag[] = "Magnetic Flux Quantum";
constexpr static char frMagneticFluxQuantumTag[] = "Quantum de Flux Magnétique";
constexpr static char nlMagneticFluxQuantumTag[] = "Magnetische flux kwantum";
constexpr static char ptMagneticFluxQuantumTag[] = "Fluxo Magnético Quântico";
constexpr static char itMagneticFluxQuantumTag[] = "Flusso magnetico quantico";
constexpr static char deMagneticFluxQuantumTag[] = "Magnetisches Fluss-Quantum";
constexpr static char esMagneticFluxQuantumTag[] = "Flujo Magnético Cuántico";
constexpr static char huMagneticFluxQuantumTag[] = "Mágneses Fluxuskvantum";
constexpr static char enMass[] = "Mass";
constexpr static char frMass[] = "Masse";
constexpr static char nlMass[] = "Massa";
constexpr static char ptMass[] = "Massa";
constexpr static char itMass[] = "Massa";
constexpr static char deMass[] = "Messe";
constexpr static char esMass[] = "Masa";
constexpr static char huMass[] = "Tömeg";
constexpr static char enMassDimension[] = "Mass";
constexpr static char frMassDimension[] = "Masse";
constexpr static char nlMassDimension[] = "Massa";
constexpr static char ptMassDimension[] = "Massa";
constexpr static char itMassDimension[] = "Messa";
constexpr static char deMassDimension[] = "Masse";
constexpr static char esMassDimension[] = "Masa";
constexpr static char huMassDimension[] = "Tömeg";
constexpr static char enMathOptions[] = "Math options";
constexpr static char frMathOptions[] = "Math";
constexpr static char nlMathOptions[] = "Math options";
constexpr static char ptMathOptions[] = "Matemática";
constexpr static char itMathOptions[] = "Math options";
constexpr static char deMathOptions[] = "Berechnungseinstellungen";
constexpr static char esMathOptions[] = "Matemáticas";
constexpr static char huMathOptions[] = "Matematikai beállítások";
constexpr static char enMatrices[] = "Matrix";
constexpr static char frMatrices[] = "Matrices";
constexpr static char nlMatrices[] = "Matrix";
constexpr static char ptMatrices[] = "Matrizes";
constexpr static char itMatrices[] = "Matrici";
constexpr static char deMatrices[] = "Matrizen";
constexpr static char esMatrices[] = "Matriz";
constexpr static char huMatrices[] = "Mátrix";
constexpr static char enMatricesAndVectors[] = "Matrices and vectors";
constexpr static char frMatricesAndVectors[] = "Matrices et vecteurs";
constexpr static char nlMatricesAndVectors[] = "Matrices en vectoren";
constexpr static char ptMatricesAndVectors[] = "Matrizes e vetores";
constexpr static char itMatricesAndVectors[] = "Matrici e vettori";
constexpr static char deMatricesAndVectors[] = "Matrizen und Vektoren";
constexpr static char esMatricesAndVectors[] = "Matrices y vectores";
constexpr static char huMatricesAndVectors[] = "Mátrixok és vektorok";
constexpr static char enMaximum[] = "Maximum";
constexpr static char frMaximum[] = "Maximum";
constexpr static char nlMaximum[] = "Maximum";
constexpr static char ptMaximum[] = "Máximo";
constexpr static char itMaximum[] = "Massimo";
constexpr static char deMaximum[] = "Maximalwert";
constexpr static char esMaximum[] = "Máximo";
constexpr static char huMaximum[] = "Maximum";
constexpr static char enMean[] = "Mean";
constexpr static char frMean[] = "Moyenne";
constexpr static char nlMean[] = "Gemiddelde";
constexpr static char ptMean[] = "Média";
constexpr static char itMean[] = "Media";
constexpr static char deMean[] = "Mittelwert";
constexpr static char esMean[] = "Media";
constexpr static char huMean[] = "középérték";
constexpr static char enMeanDefinition[] = "μ: Mean";
constexpr static char frMeanDefinition[] = "μ : Espérance ou moyenne";
constexpr static char nlMeanDefinition[] = "μ: Gemiddelde";
constexpr static char ptMeanDefinition[] = "μ : Média";
constexpr static char itMeanDefinition[] = "μ : Media";
constexpr static char deMeanDefinition[] = "μ: Erwartungswert";
constexpr static char esMeanDefinition[] = "μ : Media";
constexpr static char huMeanDefinition[] = "μ: remény vagy atlag";
constexpr static char enMeanDot[] = "mean";
constexpr static char frMeanDot[] = "moyen";
constexpr static char nlMeanDot[] = "gemiddelde";
constexpr static char ptMeanDot[] = "média";
constexpr static char itMeanDot[] = "media";
constexpr static char deMeanDot[] = "mittel";
constexpr static char esMeanDot[] = "media";
constexpr static char huMeanDot[] = "Középérték";
constexpr static char enMedian[] = "Median";
constexpr static char frMedian[] = "Médiane";
constexpr static char nlMedian[] = "Mediaan";
constexpr static char ptMedian[] = "Mediana";
constexpr static char itMedian[] = "Mediana";
constexpr static char deMedian[] = "Median";
constexpr static char esMedian[] = "Mediana";
constexpr static char huMedian[] = "Medián";
constexpr static char enMemUse[] = "Memory";
constexpr static char frMemUse[] = "Mémoire";
constexpr static char nlMemUse[] = "Memory";
constexpr static char ptMemUse[] = "Memória";
constexpr static char itMemUse[] = "Memory";
constexpr static char deMemUse[] = "Speicher";
constexpr static char esMemUse[] = "Memoria";
constexpr static char huMemUse[] = "Memória";
constexpr static char enMicroPythonVersion[] = "μPython version";
constexpr static char frMicroPythonVersion[] = "Version de μPython";
constexpr static char nlMicroPythonVersion[] = "μPython version";
constexpr static char ptMicroPythonVersion[] = "Versao do μPython";
constexpr static char itMicroPythonVersion[] = "μPython version";
constexpr static char deMicroPythonVersion[] = "μPythonversion";
constexpr static char esMicroPythonVersion[] = "Version de μPython";
constexpr static char huMicroPythonVersion[] = "μPython verzió";
constexpr static char enMinimum[] = "Minimum";
constexpr static char frMinimum[] = "Minimum";
constexpr static char nlMinimum[] = "Minimum";
constexpr static char ptMinimum[] = "Mínimo";
constexpr static char itMinimum[] = "Minimo";
constexpr static char deMinimum[] = "Mindestwert";
constexpr static char esMinimum[] = "Mínimo";
constexpr static char huMinimum[] = "Minimum";
constexpr static char enMixedFraction[] = "Mixed fraction";
constexpr static char frMixedFraction[] = "Fraction mixte";
constexpr static char nlMixedFraction[] = "Gemengde breuk";
constexpr static char ptMixedFraction[] = "Fração mista";
constexpr static char itMixedFraction[] = "Frazione mista";
constexpr static char deMixedFraction[] = "Gemischte Zahl";
constexpr static char esMixedFraction[] = "Fracción mixta";
constexpr static char huMixedFraction[] = "Vegyes frakció";
constexpr static char enModules[] = "Modules";
constexpr static char frModules[] = "Modules";
constexpr static char nlModules[] = "Modules";
constexpr static char ptModules[] = "Módulos";
constexpr static char itModules[] = "Moduli";
constexpr static char deModules[] = "Module";
constexpr static char esModules[] = "Modules";
constexpr static char huModules[] = "Modulok";
constexpr static char enMolarMassesByAlpha[] = "Molar masses (A,B...)";
constexpr static char frMolarMassesByAlpha[] = "Masses molaires (A,B...)";
constexpr static char nlMolarMassesByAlpha[] = "Molar masses (A,B...)";
constexpr static char ptMolarMassesByAlpha[] = "Massas molares (A,B...)";
constexpr static char itMolarMassesByAlpha[] = "Molar masses (A,B...)";
constexpr static char deMolarMassesByAlpha[] = "Molmassen (A,B...)";
constexpr static char esMolarMassesByAlpha[] = "Masas molares (A,B...)";
constexpr static char huMolarMassesByAlpha[] = "moláris tömegek (A, B ...)";
constexpr static char enMolarMassesByNumber[] = "Molar masses (1,2...)";
constexpr static char frMolarMassesByNumber[] = "Masses molaires (1,2...)";
constexpr static char nlMolarMassesByNumber[] = "Molar masses (1,2...)";
constexpr static char ptMolarMassesByNumber[] = "Massas molares (1,2...)";
constexpr static char itMolarMassesByNumber[] = "Molar masses (1,2...)";
constexpr static char deMolarMassesByNumber[] = "Molmassen (1,2...)";
constexpr static char esMolarMassesByNumber[] = "Masas molares (1,2...)";
constexpr static char huMolarMassesByNumber[] = "moláris tömegek (1,2 ...)";
constexpr static char enMoonMassTag[] = "Moon";
constexpr static char frMoonMassTag[] = "Lune";
constexpr static char nlMoonMassTag[] = "Maan";
constexpr static char ptMoonMassTag[] = "Lua";
constexpr static char itMoonMassTag[] = "Luna";
constexpr static char deMoonMassTag[] = "Mond";
constexpr static char esMoonMassTag[] = "Luna";
constexpr static char huMoonMassTag[] = "Hold";
constexpr static char enMove[] = " Pan: ";
constexpr static char frMove[] = " Déplacer : ";
constexpr static char nlMove[] = " Verplaats: ";
constexpr static char ptMove[] = " Mover : ";
constexpr static char itMove[] = " Spostare : ";
constexpr static char deMove[] = " Verschieben: ";
constexpr static char esMove[] = " Mover : ";
constexpr static char huMove[] = " Odébb rakni: ";
constexpr static char enMuonMassTag[] = "Muon";
constexpr static char frMuonMassTag[] = "Muon";
constexpr static char nlMuonMassTag[] = "Muon";
constexpr static char ptMuonMassTag[] = "Muon";
constexpr static char itMuonMassTag[] = "Muon";
constexpr static char deMuonMassTag[] = "Muon";
constexpr static char esMuonMassTag[] = "Muon";
constexpr static char huMuonMassTag[] = "Müon";
constexpr static char enNColumn[] = "n column";
constexpr static char frNColumn[] = "Colonne n";
constexpr static char nlNColumn[] = "n-kolom";
constexpr static char ptNColumn[] = "Coluna n";
constexpr static char itNColumn[] = "Colonna n";
constexpr static char deNColumn[] = "n-te Spalte";
constexpr static char esNColumn[] = "Columna n";
constexpr static char huNColumn[] = "n oszlop";
constexpr static char enNEnd[] = "N end";
constexpr static char frNEnd[] = "N fin";
constexpr static char nlNEnd[] = "N einde";
constexpr static char ptNEnd[] = "N fim";
constexpr static char itNEnd[] = "N finale";
constexpr static char deNEnd[] = "N Endwert";
constexpr static char esNEnd[] = "N fin";
constexpr static char huNEnd[] = "N vége";
constexpr static char enNStart[] = "N start";
constexpr static char frNStart[] = "N début";
constexpr static char nlNStart[] = "N begin";
constexpr static char ptNStart[] = "N início";
constexpr static char itNStart[] = "N iniziale";
constexpr static char deNStart[] = "N Startwert";
constexpr static char esNStart[] = "N inicio";
constexpr static char huNStart[] = "N kezdete";
constexpr static char enNameCannotStartWithNumber[] = "A name cannot start with a number";
constexpr static char frNameCannotStartWithNumber[] = "Un nom ne peut pas commencer par un chiffre";
constexpr static char nlNameCannotStartWithNumber[] = "Een naam kan niet beginnen met een getal";
constexpr static char ptNameCannotStartWithNumber[] = "O nome não pode começar com um número";
constexpr static char itNameCannotStartWithNumber[] = "Un nome non può cominciare con un numero";
constexpr static char deNameCannotStartWithNumber[] = "Name darf nicht mit Zahl beginnen";
constexpr static char esNameCannotStartWithNumber[] = "Un nombre no puede empezar con un número";
constexpr static char huNameCannotStartWithNumber[] = "Egy név nem kezdöthet számmal";
constexpr static char enNameTaken[] = "This name has already been taken";
constexpr static char frNameTaken[] = "Ce nom est déjà utilisé";
constexpr static char nlNameTaken[] = "Deze naam is al in gebruik";
constexpr static char ptNameTaken[] = "Este nome já está a ser usado";
constexpr static char itNameTaken[] = "Questo nome è già utilizzato";
constexpr static char deNameTaken[] = "Dieser Name ist bereits vergeben";
constexpr static char esNameTaken[] = "Este nombre ya está en uso";
constexpr static char huNameTaken[] = "Ez a név foglalt";
constexpr static char enNameTooLong[] = "This name is too long";
constexpr static char frNameTooLong[] = "Ce nom est trop long";
constexpr static char nlNameTooLong[] = "Deze naam is te lang";
constexpr static char ptNameTooLong[] = "Este nome é muito longo";
constexpr static char itNameTooLong[] = "Questo nome è troppo lungo";
constexpr static char deNameTooLong[] = "Der Name ist zu lang";
constexpr static char esNameTooLong[] = "Este nombre es demasiado largo";
constexpr static char huNameTooLong[] = "Ez a név túl hosszú";
constexpr static char enNavigate[] = "Navigate";
constexpr static char frNavigate[] = "Naviguer";
constexpr static char nlNavigate[] = "Navigeren";
constexpr static char ptNavigate[] = "Navegar";
constexpr static char itNavigate[] = "Navigare";
constexpr static char deNavigate[] = "Navigieren";
constexpr static char esNavigate[] = "Navegar";
constexpr static char huNavigate[] = "Hajózik";
constexpr static char enNeutronMassTag[] = "Neutron";
constexpr static char frNeutronMassTag[] = "Neutron";
constexpr static char nlNeutronMassTag[] = "Neutron";
constexpr static char ptNeutronMassTag[] = "Nêutron";
constexpr static char itNeutronMassTag[] = "Neutrone";
constexpr static char deNeutronMassTag[] = "Neutrons";
constexpr static char esNeutronMassTag[] = "Neutrón";
constexpr static char huNeutronMassTag[] = "Neutron";
constexpr static char enNewMatrix[] = "New matrix";
constexpr static char frNewMatrix[] = "Nouvelle matrice";
constexpr static char nlNewMatrix[] = "Nieuwe matrix";
constexpr static char ptNewMatrix[] = "Nova matriz";
constexpr static char itNewMatrix[] = "Nuova matrice";
constexpr static char deNewMatrix[] = "Neue Matrix";
constexpr static char esNewMatrix[] = "Nueva matriz";
constexpr static char huNewMatrix[] = "Uj mátrix";
constexpr static char enNext[] = "Next";
constexpr static char frNext[] = "Suivant";
constexpr static char nlNext[] = "Volgende";
constexpr static char ptNext[] = "Seguinte";
constexpr static char itNext[] = "Successivo";
constexpr static char deNext[] = "Nächste";
constexpr static char esNext[] = "Siguiente";
constexpr static char huNext[] = "következö";
constexpr static char enNickel[] = "Nickel";
constexpr static char frNickel[] = "Nickel";
constexpr static char nlNickel[] = "Nikkel";
constexpr static char ptNickel[] = "Níquel";
constexpr static char itNickel[] = "Nichel";
constexpr static char deNickel[] = "Nickel";
constexpr static char esNickel[] = "Níquel";
constexpr static char huNickel[] = "Nickel";
constexpr static char enNoActivatedFunction[] = "No function is turned on";
constexpr static char frNoActivatedFunction[] = "Aucune fonction activée";
constexpr static char nlNoActivatedFunction[] = "Geen functie ingeschakeld";
constexpr static char ptNoActivatedFunction[] = "Sem função activada";
constexpr static char itNoActivatedFunction[] = "Nessuna funzione attivata";
constexpr static char deNoActivatedFunction[] = "Keine aktive Funktion";
constexpr static char esNoActivatedFunction[] = "Ninguna función activada";
constexpr static char huNoActivatedFunction[] = "Nincs használt funkció";
constexpr static char enNoActivatedSequence[] = "No sequence is turned on";
constexpr static char frNoActivatedSequence[] = "Aucune suite activée";
constexpr static char nlNoActivatedSequence[] = "Geen rij is ingeschakeld";
constexpr static char ptNoActivatedSequence[] = "Sem sequência ativada";
constexpr static char itNoActivatedSequence[] = "Nessuna successione attiva";
constexpr static char deNoActivatedSequence[] = "Keine aktive Folge";
constexpr static char esNoActivatedSequence[] = "Ninguna sucesión activada";
constexpr static char huNoActivatedSequence[] = "Nincs szekvencia bekapcsolva";
constexpr static char enNoAppsInstalled[] = "No apps installed";
constexpr static char frNoAppsInstalled[] = "Aucune applications installées";
constexpr static char nlNoAppsInstalled[] = "No apps installed";
constexpr static char ptNoAppsInstalled[] = "No hay aplicaciones instaladas";
constexpr static char itNoAppsInstalled[] = "No apps installed";
constexpr static char deNoAppsInstalled[] = "Keine Apps installiert";
constexpr static char esNoAppsInstalled[] = "No hay aplicaciones instaladas";
constexpr static char huNoAppsInstalled[] = "Nincs letöltött externál";
constexpr static char enNoDataToPlot[] = "No data to draw";
constexpr static char frNoDataToPlot[] = "Aucune donnée à tracer";
constexpr static char nlNoDataToPlot[] = "Geen gegevens om te plotten";
constexpr static char ptNoDataToPlot[] = "Não há dados para desenhar";
constexpr static char itNoDataToPlot[] = "Nessun dato da tracciare";
constexpr static char deNoDataToPlot[] = "Keine Daten zum Zeichnen";
constexpr static char esNoDataToPlot[] = "Ningunos datos que dibujar";
constexpr static char huNoDataToPlot[] = "Nincs rajzolható adat";
constexpr static char enNoFileToDisplay[] = "No file to display";
constexpr static char frNoFileToDisplay[] = "Aucun fichier à afficher";
constexpr static char nlNoFileToDisplay[] = "Geen bestanden om weer te geven";
constexpr static char ptNoFileToDisplay[] = "Nenhum arquivo para exibir";
constexpr static char itNoFileToDisplay[] = "essun file da visualizzare";
constexpr static char deNoFileToDisplay[] = "Keine Dateien zum Anzeigen";
constexpr static char esNoFileToDisplay[] = "No hay archivos para mostrar";
constexpr static char huNoFileToDisplay[] = "Nincs megjeleníthető fájl";
constexpr static char enNoFunction[] = "No function";
constexpr static char frNoFunction[] = "Aucune fonction";
constexpr static char nlNoFunction[] = "Geen functie gedefinieerd";
constexpr static char ptNoFunction[] = "Nenhuma função";
constexpr static char itNoFunction[] = "Nessuna funzione";
constexpr static char deNoFunction[] = "Keine Funktion";
constexpr static char esNoFunction[] = "Ninguna función";
constexpr static char huNoFunction[] = "Nincs funkció";
constexpr static char enNoIntersectionFound[] = "No intersection found";
constexpr static char frNoIntersectionFound[] = "Aucune intersection trouvée";
constexpr static char nlNoIntersectionFound[] = "Geen snijpunt gevonden";
constexpr static char ptNoIntersectionFound[] = "Nenhuma interseção encontrada";
constexpr static char itNoIntersectionFound[] = "Nessuna intersezione trovata";
constexpr static char deNoIntersectionFound[] = "Kein Schnittpunkt gefunden";
constexpr static char esNoIntersectionFound[] = "Ninguna intersección encontrada";
constexpr static char huNoIntersectionFound[] = "Nem található keresztezödés";
constexpr static char enNoMaximumFound[] = "No maximum found";
constexpr static char frNoMaximumFound[] = "Aucun maximum trouvé";
constexpr static char nlNoMaximumFound[] = "Geen maximum gevonden";
constexpr static char ptNoMaximumFound[] = "Nenhum máximo encontrado";
constexpr static char itNoMaximumFound[] = "Nessun massimo trovato";
constexpr static char deNoMaximumFound[] = "Kein Maximalwert gefunden";
constexpr static char esNoMaximumFound[] = "Níngun máximo encontrado";
constexpr static char huNoMaximumFound[] = "Nem talált maximum-ot";
constexpr static char enNoMinimumFound[] = "No minimum found";
constexpr static char frNoMinimumFound[] = "Aucun minimum trouvé";
constexpr static char nlNoMinimumFound[] = "Geen minimum gevonden";
constexpr static char ptNoMinimumFound[] = "Nenhum mínimo encontrado";
constexpr static char itNoMinimumFound[] = "Nessun minimo trovato";
constexpr static char deNoMinimumFound[] = "Kein Mindestwert gefunden";
constexpr static char esNoMinimumFound[] = "Níngun mínimo encontrado";
constexpr static char huNoMinimumFound[] = "Nem talált minimum-ot";
constexpr static char enNoPreimageFound[] = "No inverse image found";
constexpr static char frNoPreimageFound[] = "Aucun antécédent trouvé";
constexpr static char nlNoPreimageFound[] = "Geen origineel gevonden";
constexpr static char ptNoPreimageFound[] = "Nenhuma imagem inversa encontrada";
constexpr static char itNoPreimageFound[] = "Nessuna immagine trovata";
constexpr static char deNoPreimageFound[] = "Kein Urbild gefunden";
constexpr static char esNoPreimageFound[] = "Ninguna imagen inversa encontrada";
constexpr static char huNoPreimageFound[] = "Nem található inverz kép";
constexpr static char enNoSequence[] = "No sequence";
constexpr static char frNoSequence[] = "Aucune suite";
constexpr static char nlNoSequence[] = "Geen rij ingevoerd";
constexpr static char ptNoSequence[] = "Sem sequência";
constexpr static char itNoSequence[] = "Nessuna successione";
constexpr static char deNoSequence[] = "Keine Folge";
constexpr static char esNoSequence[] = "Ninguna sucesión";
constexpr static char huNoSequence[] = "Nincs sorrend";
constexpr static char enNoSolutionEquation[] = "The equation has no solution";
constexpr static char frNoSolutionEquation[] = "L'équation n'admet aucune solution";
constexpr static char nlNoSolutionEquation[] = "De vergelijking heeft geen oplossing";
constexpr static char ptNoSolutionEquation[] = "A equação não tem solução";
constexpr static char itNoSolutionEquation[] = "L'equazione non ammette nessuna soluzione";
constexpr static char deNoSolutionEquation[] = "Die Gleichung hat keine Lösung";
constexpr static char esNoSolutionEquation[] = "La ecuación no tiene solución";
constexpr static char huNoSolutionEquation[] = "Az egyenletnek nincs megoldása";
constexpr static char enNoSolutionInterval[] = "No solution found in the interval";
constexpr static char frNoSolutionInterval[] = "Aucune solution trouvée dans cet intervalle";
constexpr static char nlNoSolutionInterval[] = "Geen oplossing gevonden binnen het interval";
constexpr static char ptNoSolutionInterval[] = "Nenhuma solução encontrada no intervalo";
constexpr static char itNoSolutionInterval[] = "Nessuna soluzione trovata dentro questo intervallo";
constexpr static char deNoSolutionInterval[] = "Keine Lösung im Intervall gefunden";
constexpr static char esNoSolutionInterval[] = "Ninguna solución encontrada en el intervalo";
constexpr static char huNoSolutionInterval[] = "Nincs megoldás ebben az intervallumban";
constexpr static char enNoSolutionSystem[] = "The system has no solution";
constexpr static char frNoSolutionSystem[] = "Le système n'admet aucune solution";
constexpr static char nlNoSolutionSystem[] = "Het stelsel heeft geen oplossing";
constexpr static char ptNoSolutionSystem[] = "O sistema não tem solução";
constexpr static char itNoSolutionSystem[] = "Il sistema non ammette nessuna soluzione";
constexpr static char deNoSolutionSystem[] = "Das System hat keine Lösung";
constexpr static char esNoSolutionSystem[] = "El sistema no tiene solución";
constexpr static char huNoSolutionSystem[] = "A rendszernek nincs megoldása";
constexpr static char enNoValueToCompute[] = "No values to calculate";
constexpr static char frNoValueToCompute[] = "Aucune grandeur à calculer";
constexpr static char nlNoValueToCompute[] = "Geen waarden om te berekenen";
constexpr static char ptNoValueToCompute[] = "Não há dados para calcular";
constexpr static char itNoValueToCompute[] = "Nessun valore da calcolare";
constexpr static char deNoValueToCompute[] = "Keine Größe zum Berechnen";
constexpr static char esNoValueToCompute[] = "Ninguna medida que calcular";
constexpr static char huNoValueToCompute[] = "Nincs számítható érték";
constexpr static char enNoWordAvailableHere[] = "No word available here.";
constexpr static char frNoWordAvailableHere[] = "Aucun mot disponible à cet endroit.";
constexpr static char nlNoWordAvailableHere[] = "No word available here.";
constexpr static char ptNoWordAvailableHere[] = "Nenhuma palavra disponível aqui.";
constexpr static char itNoWordAvailableHere[] = "Nessuna parola disponibile qui.";
constexpr static char deNoWordAvailableHere[] = "Hier ist kein Wort verfügbar.";
constexpr static char esNoWordAvailableHere[] = "No hay ninguna palabra disponible aquí.";
constexpr static char huNoWordAvailableHere[] = "Nincs rendelkezésre álló szó.";
constexpr static char enNoZeroFound[] = "No zero found";
constexpr static char frNoZeroFound[] = "Aucune racine trouvée";
constexpr static char nlNoZeroFound[] = "Geen nulpunt gevonden";
constexpr static char ptNoZeroFound[] = "Nenhuma raiz encontrada";
constexpr static char itNoZeroFound[] = "Nessuno zero trovato";
constexpr static char deNoZeroFound[] = "Keine Nullstelle gefunden";
constexpr static char esNoZeroFound[] = "Ninguna raíz encontrada";
constexpr static char huNoZeroFound[] = "Nem talált nullát";
constexpr static char enNonLinearSystem[] = "The system is not linear";
constexpr static char frNonLinearSystem[] = "Le système n'est pas linéaire";
constexpr static char nlNonLinearSystem[] = "Het stelsel is niet lineair";
constexpr static char ptNonLinearSystem[] = "O sistema não é linear";
constexpr static char itNonLinearSystem[] = "Il sistema non è lineare";
constexpr static char deNonLinearSystem[] = "Das System ist nicht linear";
constexpr static char esNonLinearSystem[] = "El sistema no es lineal";
constexpr static char huNonLinearSystem[] = "A rendszer nem lineáris";
constexpr static char enNormCDF[] = "P(X<a) where X follows N(μ,σ)";
constexpr static char frNormCDF[] = "P(X<a) où X suit N(μ,σ)";
constexpr static char nlNormCDF[] = "P(X<a) waar X volgt N(μ,σ)";
constexpr static char ptNormCDF[] = "P(X<a) onde X segue N(μ,σ)";
constexpr static char itNormCDF[] = "P(X<a) dove X segue N(μ,)";
constexpr static char deNormCDF[] = "P(X<a) wobei X auf N(μ,σ) folgt";
constexpr static char esNormCDF[] = "P(X<a) donde X sigue N(μ,σ)";
constexpr static char huNormCDF[] = "P (X <a), ahol X az N-t követi (μ, σ2)";
constexpr static char enNormCDF2[] = "P(a<X<b) where X follows N(μ,σ)";
constexpr static char frNormCDF2[] = "P(a<X<b) où X suit N(μ,σ)";
constexpr static char nlNormCDF2[] = "P(a<X<b) waar X volgt N(μ,σ)";
constexpr static char ptNormCDF2[] = "P(a<X<b) onde X segue N(μ,σ)";
constexpr static char itNormCDF2[] = "P(a<X<b) dove X segue N(μ,σ)";
constexpr static char deNormCDF2[] = "P(a<X<b) wobei X auf N(μ,σ) folgt";
constexpr static char esNormCDF2[] = "P(a<X<b) donde X sigue N(μ,σ)";
constexpr static char huNormCDF2[] = "P (a <X <b) ahol X követi az N (μ, σ2)";
constexpr static char enNormPDF[] = "Probability density of N(μ,σ)";
constexpr static char frNormPDF[] = "Fonction densité N(μ,σ)";
constexpr static char nlNormPDF[] = "Kansdichtheid van N(μ,σ)";
constexpr static char ptNormPDF[] = "Densidade de probabilidade de N(μ,σ)";
constexpr static char itNormPDF[] = "Funzione di densità N(μ,σ)";
constexpr static char deNormPDF[] = "Wahrscheinlichkeitsdichte N(μ,σ)";
constexpr static char esNormPDF[] = "Densidad de probabilidad de N(μ,σ)";
constexpr static char huNormPDF[] = "N valószínüségi sürüsége (μ, σ2)";
constexpr static char enNormVector[] = "Norm";
constexpr static char frNormVector[] = "Norme";
constexpr static char nlNormVector[] = "Norm";
constexpr static char ptNormVector[] = "Norma";
constexpr static char itNormVector[] = "Norma";
constexpr static char deNormVector[] = "Norm";
constexpr static char esNormVector[] = "Norma";
constexpr static char huNormVector[] = "Norm";
constexpr static char enNormal[] = "Normal";
constexpr static char frNormal[] = "Normale";
constexpr static char nlNormal[] = "Normaal";
constexpr static char ptNormal[] = "Normal";
constexpr static char itNormal[] = "Normale";
constexpr static char deNormal[] = "Normal";
constexpr static char esNormal[] = "Normal";
constexpr static char huNormal[] = "Normale";
constexpr static char enNormalDistribution[] = "Normal distribution";
constexpr static char frNormalDistribution[] = "Loi normale";
constexpr static char nlNormalDistribution[] = "Normale verdeling";
constexpr static char ptNormalDistribution[] = "Distribuição normal";
constexpr static char itNormalDistribution[] = "Distribuzione normale";
constexpr static char deNormalDistribution[] = "Normalverteilung";
constexpr static char esNormalDistribution[] = "Distribución normal";
constexpr static char huNormalDistribution[] = "Normál eloszlás";
constexpr static char enNthRoot[] = "nth-root";
constexpr static char frNthRoot[] = "Racine n-ième";
constexpr static char nlNthRoot[] = "n-de-machtswortel";
constexpr static char ptNthRoot[] = "Raiz de índice n";
constexpr static char itNthRoot[] = "Radice n-esima";
constexpr static char deNthRoot[] = "n-te Wurzel";
constexpr static char esNthRoot[] = "Raíz enesima";
constexpr static char huNthRoot[] = "n-gyökér";
constexpr static char enNuclearConstants[] = "Nuclear and Atomic Constants";
constexpr static char frNuclearConstants[] = "Constantes Atomiques/Nucléaires";
constexpr static char nlNuclearConstants[] = "Nucleaire en Atoomconstanten";
constexpr static char ptNuclearConstants[] = "Constantes Atômicas e Nucleares";
constexpr static char itNuclearConstants[] = "Costanti nucleari e atomiche";
constexpr static char deNuclearConstants[] = "Nukleare und atomare Konstanten";
constexpr static char esNuclearConstants[] = "Constantes nucleares y atómicas";
constexpr static char huNuclearConstants[] = "Nukleáris Es Atomi Allandók";
constexpr static char enNuclearMagnetonTag[] = "Nuclear Magneton";
constexpr static char frNuclearMagnetonTag[] = "Magnéton Nucléaire";
constexpr static char nlNuclearMagnetonTag[] = "Kernmagneton";
constexpr static char ptNuclearMagnetonTag[] = "Imã Nuclear";
constexpr static char itNuclearMagnetonTag[] = "Magneton nucleare";
constexpr static char deNuclearMagnetonTag[] = "Kernmagneton";
constexpr static char esNuclearMagnetonTag[] = "Magnetón nuclear";
constexpr static char huNuclearMagnetonTag[] = "Nukleáris Magneton";
constexpr static char enNumberElementAc[] = "89 - Actinium (Ac)";
constexpr static char frNumberElementAc[] = "89 - Actinium (Ac)";
constexpr static char nlNumberElementAc[] = "89 - Actinium (Ac)";
constexpr static char ptNumberElementAc[] = "89 - Actínio (Ac)";
constexpr static char itNumberElementAc[] = "89 - Actinium (Ac)";
constexpr static char deNumberElementAc[] = "89 - Aktinium (Ac)";
constexpr static char esNumberElementAc[] = "89 - Actinio (Ac)";
constexpr static char huNumberElementAc[] = "89 - Aktinium (ac)";
constexpr static char enNumberElementAg[] = "47 - Money (Ag)";
constexpr static char frNumberElementAg[] = "47 - Argent (Ag)";
constexpr static char nlNumberElementAg[] = "47 - Money (Ag)";
constexpr static char ptNumberElementAg[] = "47 - Dinheiro (Ag)";
constexpr static char itNumberElementAg[] = "47 - Money (Ag)";
constexpr static char deNumberElementAg[] = "47 - Geld (Ag)";
constexpr static char esNumberElementAg[] = "47 - Dinero (Ag)";
constexpr static char huNumberElementAg[] = "47 - Pénz (Ag)";
constexpr static char enNumberElementAl[] = "13 - Aluminum (Al)";
constexpr static char frNumberElementAl[] = "13 - Aluminium (Al)";
constexpr static char nlNumberElementAl[] = "13 - Aluminum (Al)";
constexpr static char ptNumberElementAl[] = "13 - Alumínio (Al)";
constexpr static char itNumberElementAl[] = "13 - Aluminum (Al)";
constexpr static char deNumberElementAl[] = "13 - Aluminium (Al)";
constexpr static char esNumberElementAl[] = "13 - Aluminio (Al)";
constexpr static char huNumberElementAl[] = "13 - Alumínium (Al)";
constexpr static char enNumberElementAm[] = "95 - Americium (Am)";
constexpr static char frNumberElementAm[] = "95 - Américium (Am)";
constexpr static char nlNumberElementAm[] = "95 - Americium (Am)";
constexpr static char ptNumberElementAm[] = "95 - Amerício (Am)";
constexpr static char itNumberElementAm[] = "95 - Americium (Am)";
constexpr static char deNumberElementAm[] = "95 - Americium (Am)";
constexpr static char esNumberElementAm[] = "95 - Americio (Am)";
constexpr static char huNumberElementAm[] = "95 - Americium (Am)";
constexpr static char enNumberElementAr[] = "18 - Argon (Ar)";
constexpr static char frNumberElementAr[] = "18 - Argon (Ar)";
constexpr static char nlNumberElementAr[] = "18 - Argon (Ar)";
constexpr static char ptNumberElementAr[] = "18 - Argão (Ar)";
constexpr static char itNumberElementAr[] = "18 - Argon (Ar)";
constexpr static char deNumberElementAr[] = "18 - Argon (Ar)";
constexpr static char esNumberElementAr[] = "18 - Argón (Ar)";
constexpr static char huNumberElementAr[] = "18 - Argon (Ar)";
constexpr static char enNumberElementAs[] = "33 - Arsenic (As)";
constexpr static char frNumberElementAs[] = "33 - Arsenic (As)";
constexpr static char nlNumberElementAs[] = "33 - Arsenic (As)";
constexpr static char ptNumberElementAs[] = "33 - Arsênico (As)";
constexpr static char itNumberElementAs[] = "33 - Arsenic (As)";
constexpr static char deNumberElementAs[] = "33 - Arsen (As)";
constexpr static char esNumberElementAs[] = "33 - Arsénico (As)";
constexpr static char huNumberElementAs[] = "33 - Arzén (As)";
constexpr static char enNumberElementAt[] = "85 - astatine (At)";
constexpr static char frNumberElementAt[] = "85 - Astate (At)";
constexpr static char nlNumberElementAt[] = "85 - astatine (At)";
constexpr static char ptNumberElementAt[] = "85 - Astatine (At)";
constexpr static char itNumberElementAt[] = "85 - astatine (At)";
constexpr static char deNumberElementAt[] = "85 - Astat (At)";
constexpr static char esNumberElementAt[] = "85 - Astato (At)";
constexpr static char huNumberElementAt[] = "85 - Asztatin (At)";
constexpr static char enNumberElementAu[] = "79 - Gold (Au)";
constexpr static char frNumberElementAu[] = "79 - Or (O)";
constexpr static char nlNumberElementAu[] = "79 - Gold (Au)";
constexpr static char ptNumberElementAu[] = "79 - Ouro (O)";
constexpr static char itNumberElementAu[] = "79 - Gold (Au)";
constexpr static char deNumberElementAu[] = "79 - Gold (O)";
constexpr static char esNumberElementAu[] = "79 - Oro (O)";
constexpr static char huNumberElementAu[] = "79 - Arany (Au)";
constexpr static char enNumberElementB[] = "5 - Boron (B)";
constexpr static char frNumberElementB[] = "5 - Bore (B)";
constexpr static char nlNumberElementB[] = "5 - Boron (B)";
constexpr static char ptNumberElementB[] = "5 - Boro (B)";
constexpr static char itNumberElementB[] = "5 - Boron (B)";
constexpr static char deNumberElementB[] = "5 - Bor (B)";
constexpr static char esNumberElementB[] = "5 - Boro (B)";
constexpr static char huNumberElementB[] = "5 - Bór (B)";
constexpr static char enNumberElementBa[] = "56 - Barium (Ba)";
constexpr static char frNumberElementBa[] = "56 - Baryum (Ba)";
constexpr static char nlNumberElementBa[] = "56 - Barium (Ba)";
constexpr static char ptNumberElementBa[] = "56 - Bário (Ba)";
constexpr static char itNumberElementBa[] = "56 - Barium (Ba)";
constexpr static char deNumberElementBa[] = "56 - Barium (Ba)";
constexpr static char esNumberElementBa[] = "56 - Bario (Ba)";
constexpr static char huNumberElementBa[] = "56 - Bárium (Ba)";
constexpr static char enNumberElementBe[] = "4 - Beryllium (Be)";
constexpr static char frNumberElementBe[] = "4 - Béryllium (Be)";
constexpr static char nlNumberElementBe[] = "4 - Beryllium (Be)";
constexpr static char ptNumberElementBe[] = "4 - Berílio (Be)";
constexpr static char itNumberElementBe[] = "4 - Beryllium (Be)";
constexpr static char deNumberElementBe[] = "4 - Beryllium (Be)";
constexpr static char esNumberElementBe[] = "4 - Berilio (Be)";
constexpr static char huNumberElementBe[] = "4 - Berillium (Be)";
constexpr static char enNumberElementBh[] = "107 - Bohrium (Bh)";
constexpr static char frNumberElementBh[] = "107 - Bohrium (Bh)";
constexpr static char nlNumberElementBh[] = "107 - Bohrium (Bh)";
constexpr static char ptNumberElementBh[] = "107 - Bohrium (Bh)";
constexpr static char itNumberElementBh[] = "107 - Bohrium (Bh)";
constexpr static char deNumberElementBh[] = "107 - Bohrium (Bh)";
constexpr static char esNumberElementBh[] = "107 - Bohrio (Bh)";
constexpr static char huNumberElementBh[] = "107 - Bohrium (Bh)";
constexpr static char enNumberElementBi[] = "83 - Bismuth (Bi)";
constexpr static char frNumberElementBi[] = "83 - Bismuth (Bi)";
constexpr static char nlNumberElementBi[] = "83 - Bismuth (Bi)";
constexpr static char ptNumberElementBi[] = "83 - Bismuto (Bi)";
constexpr static char itNumberElementBi[] = "83 - Bismuth (Bi)";
constexpr static char deNumberElementBi[] = "83 - Wismut (Bi)";
constexpr static char esNumberElementBi[] = "83 - Bismuto (Bi)";
constexpr static char huNumberElementBi[] = "83 - Bizmut (Bi)";
constexpr static char enNumberElementBk[] = "97 - Berkelium (Bk)";
constexpr static char frNumberElementBk[] = "97 - Berkélium (Bk)";
constexpr static char nlNumberElementBk[] = "97 - Berkelium (Bk)";
constexpr static char ptNumberElementBk[] = "97 - Berkelium (Bk)";
constexpr static char itNumberElementBk[] = "97 - Berkelium (Bk)";
constexpr static char deNumberElementBk[] = "97 - Berkelium (Bk)";
constexpr static char esNumberElementBk[] = "97 - Berkelio (Bk)";
constexpr static char huNumberElementBk[] = "97 - Berkelium (Bk)";
constexpr static char enNumberElementBr[] = "35 - Bromine (Br)";
constexpr static char frNumberElementBr[] = "35 - Brome (Br)";
constexpr static char nlNumberElementBr[] = "35 - Bromine (Br)";
constexpr static char ptNumberElementBr[] = "35 - Bromo (Br)";
constexpr static char itNumberElementBr[] = "35 - Bromine (Br)";
constexpr static char deNumberElementBr[] = "35 - Brom (Br)";
constexpr static char esNumberElementBr[] = "35 - Bromo (Br)";
constexpr static char huNumberElementBr[] = "35 - Bróm (Br)";
constexpr static char enNumberElementC[] = "6 - Carbon (C)";
constexpr static char frNumberElementC[] = "6 - Carbone (C)";
constexpr static char nlNumberElementC[] = "6 - Carbon (C)";
constexpr static char ptNumberElementC[] = "6 - Carbono (C)";
constexpr static char itNumberElementC[] = "6 - Carbon (C)";
constexpr static char deNumberElementC[] = "6 - Kohlenstoff (C)";
constexpr static char esNumberElementC[] = "6 - Carbono (C)";
constexpr static char huNumberElementC[] = "6 - Szén (C)";
constexpr static char enNumberElementCa[] = "20 - Calcium (Ca)";
constexpr static char frNumberElementCa[] = "20 - Calcium (Ca)";
constexpr static char nlNumberElementCa[] = "20 - Calcium (Ca)";
constexpr static char ptNumberElementCa[] = "20 - Cálcio (Ca)";
constexpr static char itNumberElementCa[] = "20 - Calcium (Ca)";
constexpr static char deNumberElementCa[] = "20 - Kalzium (Ca)";
constexpr static char esNumberElementCa[] = "20 - Calcio (Ca)";
constexpr static char huNumberElementCa[] = "20 - Kalcium (Ca)";
constexpr static char enNumberElementCd[] = "48 - Cadmium (Cd)";
constexpr static char frNumberElementCd[] = "48 - Cadmium (Cd)";
constexpr static char nlNumberElementCd[] = "48 - Cadmium (Cd)";
constexpr static char ptNumberElementCd[] = "48 - Cádmio (Cd)";
constexpr static char itNumberElementCd[] = "48 - Cadmium (Cd)";
constexpr static char deNumberElementCd[] = "48 - Cadmium (Cd)";
constexpr static char esNumberElementCd[] = "48 - Cadmio (Cd)";
constexpr static char huNumberElementCd[] = "48 - Kadmium (Cd)";
constexpr static char enNumberElementCe[] = "58 - Cerium (Ce)";
constexpr static char frNumberElementCe[] = "58 - Cérium (Ce)";
constexpr static char nlNumberElementCe[] = "58 - Cerium (Ce)";
constexpr static char ptNumberElementCe[] = "58 - Cério (Ce)";
constexpr static char itNumberElementCe[] = "58 - Cerium (Ce)";
constexpr static char deNumberElementCe[] = "58 - Cer (Ce)";
constexpr static char esNumberElementCe[] = "58 - Cerio (Ce)";
constexpr static char huNumberElementCe[] = "58 - Cérium (Ce)";
constexpr static char enNumberElementCf[] = "98 - Californium (Cf)";
constexpr static char frNumberElementCf[] = "98 - Californium (Cf)";
constexpr static char nlNumberElementCf[] = "98 - Californium (Cf)";
constexpr static char ptNumberElementCf[] = "98 - Californium (Cf)";
constexpr static char itNumberElementCf[] = "98 - Californium (Cf)";
constexpr static char deNumberElementCf[] = "98 - Californium (Cf)";
constexpr static char esNumberElementCf[] = "98 - Californio (Cf)";
constexpr static char huNumberElementCf[] = "98 - Californium (Cf)";
constexpr static char enNumberElementCl[] = "17 - Chlorine (Cl)";
constexpr static char frNumberElementCl[] = "17 - Chlore (Cl)";
constexpr static char nlNumberElementCl[] = "17 - Chlorine (Cl)";
constexpr static char ptNumberElementCl[] = "17 - Cloro (Cl)";
constexpr static char itNumberElementCl[] = "17 - Chlorine (Cl)";
constexpr static char deNumberElementCl[] = "17 - Chlor (Cl)";
constexpr static char esNumberElementCl[] = "17 - Cloro (Cl)";
constexpr static char huNumberElementCl[] = "17 - Klór (Cl)";
constexpr static char enNumberElementCm[] = "96 - Curium (Cm)";
constexpr static char frNumberElementCm[] = "96 - Curium (Cm)";
constexpr static char nlNumberElementCm[] = "96 - Curium (Cm)";
constexpr static char ptNumberElementCm[] = "96 - Curandeiro (Cm)";
constexpr static char itNumberElementCm[] = "96 - Curium (Cm)";
constexpr static char deNumberElementCm[] = "96 - Curium (Cm)";
constexpr static char esNumberElementCm[] = "96 - Curio (Cm)";
constexpr static char huNumberElementCm[] = "96 - Curium (Cm)";
constexpr static char enNumberElementCn[] = "112 - Copernicium (Cn)";
constexpr static char frNumberElementCn[] = "112 - Copernicium (Cn)";
constexpr static char nlNumberElementCn[] = "112 - Copernicium (Cn)";
constexpr static char ptNumberElementCn[] = "112 - Copernicium (Cn)";
constexpr static char itNumberElementCn[] = "112 - Copernicium (Cn)";
constexpr static char deNumberElementCn[] = "112 - Copernicium (Cn)";
constexpr static char esNumberElementCn[] = "112 - Copernicio (Cn)";
constexpr static char huNumberElementCn[] = "112 - Copernicium (Cn)";
constexpr static char enNumberElementCo[] = "27 - Cobalt (Co)";
constexpr static char frNumberElementCo[] = "27 - Cobalt (Co)";
constexpr static char nlNumberElementCo[] = "27 - Cobalt (Co)";
constexpr static char ptNumberElementCo[] = "27 - Cobalto (Co)";
constexpr static char itNumberElementCo[] = "27 - Cobalt (Co)";
constexpr static char deNumberElementCo[] = "27 - Kobalt (Co)";
constexpr static char esNumberElementCo[] = "27 - Cobalto (Co)";
constexpr static char huNumberElementCo[] = "27 - Kobalt (ko)";
constexpr static char enNumberElementCr[] = "24 - Chromium (Cr)";
constexpr static char frNumberElementCr[] = "24 - Chrome (Cr)";
constexpr static char nlNumberElementCr[] = "24 - Chromium (Cr)";
constexpr static char ptNumberElementCr[] = "24 - Crômio (Cr)";
constexpr static char itNumberElementCr[] = "24 - Chromium (Cr)";
constexpr static char deNumberElementCr[] = "24 - Chrom (Cr)";
constexpr static char esNumberElementCr[] = "24 - Cromo (Cr)";
constexpr static char huNumberElementCr[] = "24 - Króm (Cr)";
constexpr static char enNumberElementCs[] = "55 - cesium (Cs)";
constexpr static char frNumberElementCs[] = "55 - Césium (Cs)";
constexpr static char nlNumberElementCs[] = "55 - cesium (Cs)";
constexpr static char ptNumberElementCs[] = "55 - Césio (Cs)";
constexpr static char itNumberElementCs[] = "55 - cesium (Cs)";
constexpr static char deNumberElementCs[] = "55 - Cäsium (Cs)";
constexpr static char esNumberElementCs[] = "55 - Cesio (Cs)";
constexpr static char huNumberElementCs[] = "55 - Cézium (Cs)";
constexpr static char enNumberElementCu[] = "29 - Copper (Cu)";
constexpr static char frNumberElementCu[] = "29 - Cuivre (Cu)";
constexpr static char nlNumberElementCu[] = "29 - Copper (Cu)";
constexpr static char ptNumberElementCu[] = "29 - Cobre (Cu)";
constexpr static char itNumberElementCu[] = "29 - Copper (Cu)";
constexpr static char deNumberElementCu[] = "29 - Kupfer (Cu)";
constexpr static char esNumberElementCu[] = "29 - Cobre (Cu)";
constexpr static char huNumberElementCu[] = "29 - Réz (Cu)";
constexpr static char enNumberElementDb[] = "105 - Dubnium (Db)";
constexpr static char frNumberElementDb[] = "105 - Dubnium (Db)";
constexpr static char nlNumberElementDb[] = "105 - Dubnium (Db)";
constexpr static char ptNumberElementDb[] = "105 - Dubnium (Db)";
constexpr static char itNumberElementDb[] = "105 - Dubnium (Db)";
constexpr static char deNumberElementDb[] = "105 - Dubnium (Db)";
constexpr static char esNumberElementDb[] = "105 - dubnio (Db)";
constexpr static char huNumberElementDb[] = "105 - Dubnium (Db)";
constexpr static char enNumberElementDs[] = "110 - Darmstadtium (Ds)";
constexpr static char frNumberElementDs[] = "110 - Darmstadtium (Ds)";
constexpr static char nlNumberElementDs[] = "110 - Darmstadtium (Ds)";
constexpr static char ptNumberElementDs[] = "110 - Darmstadtium (Ds)";
constexpr static char itNumberElementDs[] = "110 - Darmstadtium (Ds)";
constexpr static char deNumberElementDs[] = "110 - Darmstadtium (Ds)";
constexpr static char esNumberElementDs[] = "110 - Darmstadtium (Ds)";
constexpr static char huNumberElementDs[] = "110 - Darmstadtium (Ds)";
constexpr static char enNumberElementDy[] = "66 - Dysprosium (Dy)";
constexpr static char frNumberElementDy[] = "66 - Dysprosium (Dy)";
constexpr static char nlNumberElementDy[] = "66 - Dysprosium (Dy)";
constexpr static char ptNumberElementDy[] = "66 - Disprósio (Dy)";
constexpr static char itNumberElementDy[] = "66 - Dysprosium (Dy)";
constexpr static char deNumberElementDy[] = "66 - Dysprosium (Dy)";
constexpr static char esNumberElementDy[] = "66 - Disprosio (Dy)";
constexpr static char huNumberElementDy[] = "66 - Dysprosium (Dy)";
constexpr static char enNumberElementEr[] = "68 - Erbium (Er)";
constexpr static char frNumberElementEr[] = "68 - Erbium (Er)";
constexpr static char nlNumberElementEr[] = "68 - Erbium (Er)";
constexpr static char ptNumberElementEr[] = "68 - Erbium (Er)";
constexpr static char itNumberElementEr[] = "68 - Erbium (Er)";
constexpr static char deNumberElementEr[] = "68 - Erbium (Er)";
constexpr static char esNumberElementEr[] = "68 - Erbio (Er)";
constexpr static char huNumberElementEr[] = "68 - Erbium (Er)";
constexpr static char enNumberElementEs[] = "99 - Einsteinium (Es)";
constexpr static char frNumberElementEs[] = "99 - Einsteinium (Es)";
constexpr static char nlNumberElementEs[] = "99 - Einsteinium (Es)";
constexpr static char ptNumberElementEs[] = "99 - Einsteinium (Es)";
constexpr static char itNumberElementEs[] = "99 - Einsteinium (Es)";
constexpr static char deNumberElementEs[] = "99 - Einsteinium (Es)";
constexpr static char esNumberElementEs[] = "99 - Einstenio (Es)";
constexpr static char huNumberElementEs[] = "99 - Einsteinium (Es)";
constexpr static char enNumberElementEu[] = "63 - Europium (Eu)";
constexpr static char frNumberElementEu[] = "63 - Europium (Eu)";
constexpr static char nlNumberElementEu[] = "63 - Europium (Eu)";
constexpr static char ptNumberElementEu[] = "63 - Európio (Eu)";
constexpr static char itNumberElementEu[] = "63 - Europium (Eu)";
constexpr static char deNumberElementEu[] = "63 - Europium (Eu)";
constexpr static char esNumberElementEu[] = "63 - Europio (Eu)";
constexpr static char huNumberElementEu[] = "63 - Europium (Eu)";
constexpr static char enNumberElementF[] = "9 - Fluorine (F)";
constexpr static char frNumberElementF[] = "9 - Fluor (F)";
constexpr static char nlNumberElementF[] = "9 - Fluorine (F)";
constexpr static char ptNumberElementF[] = "9 - Flúor (F)";
constexpr static char itNumberElementF[] = "9 - Fluorine (F)";
constexpr static char deNumberElementF[] = "9 - Fluor (F)";
constexpr static char esNumberElementF[] = "9 - Flúor (F)";
constexpr static char huNumberElementF[] = "9 - Fluor (F)";
constexpr static char enNumberElementFe[] = "26 - Iron (Fe)";
constexpr static char frNumberElementFe[] = "26 - Fer (Fe)";
constexpr static char nlNumberElementFe[] = "26 - Iron (Fe)";
constexpr static char ptNumberElementFe[] = "26 - Ferro (Fe)";
constexpr static char itNumberElementFe[] = "26 - Iron (Fe)";
constexpr static char deNumberElementFe[] = "26 - Eisen (Fe)";
constexpr static char esNumberElementFe[] = "26 - Hierro (Fe)";
constexpr static char huNumberElementFe[] = "26 - Vas (Fe)";
constexpr static char enNumberElementFl[] = "114 - Flerovium (Fl)";
constexpr static char frNumberElementFl[] = "114 - Flérovium (Fl)";
constexpr static char nlNumberElementFl[] = "114 - Flerovium (Fl)";
constexpr static char ptNumberElementFl[] = "114 - Fleróvio (Fl)";
constexpr static char itNumberElementFl[] = "114 - Flerovium (Fl)";
constexpr static char deNumberElementFl[] = "114 - Flerovium (Fl)";
constexpr static char esNumberElementFl[] = "114 - Flerovium (Fl)";
constexpr static char huNumberElementFl[] = "114 - Flerovium (Fl)";
constexpr static char enNumberElementFm[] = "100 - Fermium (Fm)";
constexpr static char frNumberElementFm[] = "100 - Fermium (Fm)";
constexpr static char nlNumberElementFm[] = "100 - Fermium (Fm)";
constexpr static char ptNumberElementFm[] = "100 - Fermium (Fm)";
constexpr static char itNumberElementFm[] = "100 - Fermium (Fm)";
constexpr static char deNumberElementFm[] = "100 - Fermium (Fm)";
constexpr static char esNumberElementFm[] = "100 - Fermio (Fm)";
constexpr static char huNumberElementFm[] = "100 - Fermium (Fm)";
constexpr static char enNumberElementFr[] = "87 - francium (Fr)";
constexpr static char frNumberElementFr[] = "87 - Francium (Fr)";
constexpr static char nlNumberElementFr[] = "87 - francium (Fr)";
constexpr static char ptNumberElementFr[] = "87 - Francium (Fr)";
constexpr static char itNumberElementFr[] = "87 - francium (Fr)";
constexpr static char deNumberElementFr[] = "87 - Francium (Fr)";
constexpr static char esNumberElementFr[] = "87 - Francio (Fr)";
constexpr static char huNumberElementFr[] = "87 - Francium (Fr)";
constexpr static char enNumberElementGa[] = "31 - Gallium (Ga)";
constexpr static char frNumberElementGa[] = "31 - Gallium (Ga)";
constexpr static char nlNumberElementGa[] = "31 - Gallium (Ga)";
constexpr static char ptNumberElementGa[] = "31 - Gálio (Ga)";
constexpr static char itNumberElementGa[] = "31 - Gallium (Ga)";
constexpr static char deNumberElementGa[] = "31 - Gallium (Ga)";
constexpr static char esNumberElementGa[] = "31 - Galio (Ga)";
constexpr static char huNumberElementGa[] = "31 - Gallium (Ga)";
constexpr static char enNumberElementGd[] = "64 - Gadolinium (Gd)";
constexpr static char frNumberElementGd[] = "64 - Gadolinium (Gd)";
constexpr static char nlNumberElementGd[] = "64 - Gadolinium (Gd)";
constexpr static char ptNumberElementGd[] = "64 - Gadolínio (Gd)";
constexpr static char itNumberElementGd[] = "64 - Gadolinium (Gd)";
constexpr static char deNumberElementGd[] = "64 - Gadolinium (Gd)";
constexpr static char esNumberElementGd[] = "64 - Gadolinio (Gd)";
constexpr static char huNumberElementGd[] = "64 - Gadolinium (Gd)";
constexpr static char enNumberElementGe[] = "32 - Germanium (Ge)";
constexpr static char frNumberElementGe[] = "32 - Germanium (Ge)";
constexpr static char nlNumberElementGe[] = "32 - Germanium (Ge)";
constexpr static char ptNumberElementGe[] = "32 - Germânio (Ge)";
constexpr static char itNumberElementGe[] = "32 - Germanium (Ge)";
constexpr static char deNumberElementGe[] = "32 - Germanium (Ge)";
constexpr static char esNumberElementGe[] = "32 - Germanio (Ge)";
constexpr static char huNumberElementGe[] = "32 - Germánium (Ge)";
constexpr static char enNumberElementH[] = "1 - Hydrogen (H)";
constexpr static char frNumberElementH[] = "1 - Hydrogène (H)";
constexpr static char nlNumberElementH[] = "1 - Hydrogen (H)";
constexpr static char ptNumberElementH[] = "1 - Hidrogênio (H)";
constexpr static char itNumberElementH[] = "1 - Hydrogen (H)";
constexpr static char deNumberElementH[] = "1 - Wasserstoff (H)";
constexpr static char esNumberElementH[] = "1 - Hidrógeno (H)";
constexpr static char huNumberElementH[] = "1 - hidrogén (H)";
constexpr static char enNumberElementHe[] = "2 - Helium (He)";
constexpr static char frNumberElementHe[] = "2 - Hélium (He)";
constexpr static char nlNumberElementHe[] = "2 - Helium (He)";
constexpr static char ptNumberElementHe[] = "2 - Hélio (He)";
constexpr static char itNumberElementHe[] = "2 - Helium (He)";
constexpr static char deNumberElementHe[] = "2 - Helium (He)";
constexpr static char esNumberElementHe[] = "2 - Helio (He)";
constexpr static char huNumberElementHe[] = "2 - Hélium (He)";
constexpr static char enNumberElementHf[] = "72 - Hafnium (Hf)";
constexpr static char frNumberElementHf[] = "72 - Hafnium (Hf)";
constexpr static char nlNumberElementHf[] = "72 - Hafnium (Hf)";
constexpr static char ptNumberElementHf[] = "72 - Háfnio (Hf)";
constexpr static char itNumberElementHf[] = "72 - Hafnium (Hf)";
constexpr static char deNumberElementHf[] = "72 - Hafnium (Hf)";
constexpr static char esNumberElementHf[] = "72 - Hafnio (Hf)";
constexpr static char huNumberElementHf[] = "72 - Hafnium (Hf)";
constexpr static char enNumberElementHg[] = "80 - Mercury (Hg)";
constexpr static char frNumberElementHg[] = "80 - Mercure (Hg)";
constexpr static char nlNumberElementHg[] = "80 - Mercury (Hg)";
constexpr static char ptNumberElementHg[] = "80 - Mercúrio (Hg)";
constexpr static char itNumberElementHg[] = "80 - Mercury (Hg)";
constexpr static char deNumberElementHg[] = "80 - Quecksilber (Hg)";
constexpr static char esNumberElementHg[] = "80 - Mercurio (Hg)";
constexpr static char huNumberElementHg[] = "80 - Higany (Hg)";
constexpr static char enNumberElementHo[] = "67 - holmium (Ho)";
constexpr static char frNumberElementHo[] = "67 - Holmium (Ho)";
constexpr static char nlNumberElementHo[] = "67 - holmium (Ho)";
constexpr static char ptNumberElementHo[] = "67 - Holmium (Ho)";
constexpr static char itNumberElementHo[] = "67 - holmium (Ho)";
constexpr static char deNumberElementHo[] = "67 - Holmium (Ho)";
constexpr static char esNumberElementHo[] = "67 - Holmio (Ho)";
constexpr static char huNumberElementHo[] = "67 - holmium (Ho)";
constexpr static char enNumberElementHs[] = "108 - Hassium (Hs)";
constexpr static char frNumberElementHs[] = "108 - Hassium (Hs)";
constexpr static char nlNumberElementHs[] = "108 - Hassium (Hs)";
constexpr static char ptNumberElementHs[] = "108 - Hassium (Hs)";
constexpr static char itNumberElementHs[] = "108 - Hassium (Hs)";
constexpr static char deNumberElementHs[] = "108 - Hassium (Hs)";
constexpr static char esNumberElementHs[] = "108 - Hassio (Hs)";
constexpr static char huNumberElementHs[] = "108 - Hassium (Hs)";
constexpr static char enNumberElementI[] = "53 - Iodine (I)";
constexpr static char frNumberElementI[] = "53 - Iode (I)";
constexpr static char nlNumberElementI[] = "53 - Iodine (I)";
constexpr static char ptNumberElementI[] = "53 - Iodo (I)";
constexpr static char itNumberElementI[] = "53 - Iodine (I)";
constexpr static char deNumberElementI[] = "53 - Jod (I)";
constexpr static char esNumberElementI[] = "53 - Yodo (I)";
constexpr static char huNumberElementI[] = "53 - Jód (I)";
constexpr static char enNumberElementIn[] = "49 - Indium (In)";
constexpr static char frNumberElementIn[] = "49 - Indium (In)";
constexpr static char nlNumberElementIn[] = "49 - Indium (In)";
constexpr static char ptNumberElementIn[] = "49 - Indio (In)";
constexpr static char itNumberElementIn[] = "49 - Indium (In)";
constexpr static char deNumberElementIn[] = "49 - Indium (In)";
constexpr static char esNumberElementIn[] = "49 - Indio (In)";
constexpr static char huNumberElementIn[] = "49 -Iindium (be)";
constexpr static char enNumberElementIr[] = "77 - Iridium (Ir)";
constexpr static char frNumberElementIr[] = "77 - Iridium (Ir)";
constexpr static char nlNumberElementIr[] = "77 - Iridium (Ir)";
constexpr static char ptNumberElementIr[] = "77 - Irídio (Ir)";
constexpr static char itNumberElementIr[] = "77 - Iridium (Ir)";
constexpr static char deNumberElementIr[] = "77 - Iridium (Ir)";
constexpr static char esNumberElementIr[] = "77 - Iridio (Ir)";
constexpr static char huNumberElementIr[] = "77 - Iridium (Ir)";
constexpr static char enNumberElementK[] = "19 - Potassium (K)";
constexpr static char frNumberElementK[] = "19 - Potassium (K)";
constexpr static char nlNumberElementK[] = "19 - Potassium (K)";
constexpr static char ptNumberElementK[] = "19 - Potássio (K)";
constexpr static char itNumberElementK[] = "19 - Potassium (K)";
constexpr static char deNumberElementK[] = "19 - Kalium (K)";
constexpr static char esNumberElementK[] = "19 - Potasio (K)";
constexpr static char huNumberElementK[] = "19 - Kálium (K)";
constexpr static char enNumberElementKr[] = "36 - Krypton (Kr)";
constexpr static char frNumberElementKr[] = "36 - Krypton (Kr)";
constexpr static char nlNumberElementKr[] = "36 - Krypton (Kr)";
constexpr static char ptNumberElementKr[] = "36 - Criptônio (Kr)";
constexpr static char itNumberElementKr[] = "36 - Krypton (Kr)";
constexpr static char deNumberElementKr[] = "36 - Krypton (Kr)";
constexpr static char esNumberElementKr[] = "36 - Criptón (Kr)";
constexpr static char huNumberElementKr[] = "36 - Krypton (Kr)";
constexpr static char enNumberElementLa[] = "57 - Lanthanum (La)";
constexpr static char frNumberElementLa[] = "57 - Lanthane (La)";
constexpr static char nlNumberElementLa[] = "57 - Lanthanum (La)";
constexpr static char ptNumberElementLa[] = "57 - Lantânio (La)";
constexpr static char itNumberElementLa[] = "57 - Lanthanum (La)";
constexpr static char deNumberElementLa[] = "57 - Lanthan (La)";
constexpr static char esNumberElementLa[] = "57 - Lantano (La)";
constexpr static char huNumberElementLa[] = "57 - Lantán (La)";
constexpr static char enNumberElementLi[] = "3 - Lithium (Li)";
constexpr static char frNumberElementLi[] = "3 - Lithium (Li)";
constexpr static char nlNumberElementLi[] = "3 - Lithium (Li)";
constexpr static char ptNumberElementLi[] = "3 - Lítio (Li)";
constexpr static char itNumberElementLi[] = "3 - Lithium (Li)";
constexpr static char deNumberElementLi[] = "3 - Lithium (Li)";
constexpr static char esNumberElementLi[] = "3 - Litio (Li)";
constexpr static char huNumberElementLi[] = "3 - lítium (Li)";
constexpr static char enNumberElementLr[] = "103 - Lawrencium (Lr)";
constexpr static char frNumberElementLr[] = "103 - Lawrencium (Lr)";
constexpr static char nlNumberElementLr[] = "103 - Lawrencium (Lr)";
constexpr static char ptNumberElementLr[] = "103 - Lawrencium (Lr)";
constexpr static char itNumberElementLr[] = "103 - Lawrencium (Lr)";
constexpr static char deNumberElementLr[] = "103 - lawrencium (Lr)";
constexpr static char esNumberElementLr[] = "103 - Lawrencio (Lr)";
constexpr static char huNumberElementLr[] = "103 - Lawrencium (Lr)";
constexpr static char enNumberElementLu[] = "71 - Lutecium (Lu)";
constexpr static char frNumberElementLu[] = "71 - Lutécium (Lu)";
constexpr static char nlNumberElementLu[] = "71 - Lutecium (Lu)";
constexpr static char ptNumberElementLu[] = "71 - Lutécio (Lu)";
constexpr static char itNumberElementLu[] = "71 - Lutecium (Lu)";
constexpr static char deNumberElementLu[] = "71 - Lutetium (Lu)";
constexpr static char esNumberElementLu[] = "71 - Lutecio (Lu)";
constexpr static char huNumberElementLu[] = "71 - Lutecium (Lu)";
constexpr static char enNumberElementLv[] = "116 - Livermorium (Lv)";
constexpr static char frNumberElementLv[] = "116 - Livermorium (Lv)";
constexpr static char nlNumberElementLv[] = "116 - Livermorium (Lv)";
constexpr static char ptNumberElementLv[] = "116 - Livermorium (Lv)";
constexpr static char itNumberElementLv[] = "116 - Livermorium (Lv)";
constexpr static char deNumberElementLv[] = "116 - Livermorium (Lv)";
constexpr static char esNumberElementLv[] = "116 - Livermorium (Lv)";
constexpr static char huNumberElementLv[] = "116 - Livermorium (Lv)";
constexpr static char enNumberElementMc[] = "115 - Moscovium (Mc)";
constexpr static char frNumberElementMc[] = "115 - Moscovium (Mc)";
constexpr static char nlNumberElementMc[] = "115 - Moscovium (Mc)";
constexpr static char ptNumberElementMc[] = "115 - Moscovium (Mc)";
constexpr static char itNumberElementMc[] = "115 - Moscovium (Mc)";
constexpr static char deNumberElementMc[] = "115 - Moscovium (Mc)";
constexpr static char esNumberElementMc[] = "115 - Moscovium (Mc)";
constexpr static char huNumberElementMc[] = "115 - Moscovium (Mc)";
constexpr static char enNumberElementMd[] = "101 - Mendélévium (Md)";
constexpr static char frNumberElementMd[] = "101 - Mendélévium (Md)";
constexpr static char nlNumberElementMd[] = "101 - Mendélévium (Md)";
constexpr static char ptNumberElementMd[] = "101 - Mendelevium (Md)";
constexpr static char itNumberElementMd[] = "101 - Mendélévium (Md)";
constexpr static char deNumberElementMd[] = "101 - Mendelevium (Md)";
constexpr static char esNumberElementMd[] = "101 - Mendelevio (Md)";
constexpr static char huNumberElementMd[] = "101 - Mendélévium (Md)";
constexpr static char enNumberElementMg[] = "12 - Magnesium (Mg)";
constexpr static char frNumberElementMg[] = "12 - Magnésium (Mg)";
constexpr static char nlNumberElementMg[] = "12 - Magnesium (Mg)";
constexpr static char ptNumberElementMg[] = "12 - Magnésio (Mg)";
constexpr static char itNumberElementMg[] = "12 - Magnesium (Mg)";
constexpr static char deNumberElementMg[] = "12 - Magnesium (Mg)";
constexpr static char esNumberElementMg[] = "12 - Magnesio (Mg)";
constexpr static char huNumberElementMg[] = "12 - Magnézium (Mg)";
constexpr static char enNumberElementMn[] = "25 - Manganese (Mn)";
constexpr static char frNumberElementMn[] = "25 - Manganèse (Mn)";
constexpr static char nlNumberElementMn[] = "25 - Manganese (Mn)";
constexpr static char ptNumberElementMn[] = "25 - Manganês (Mn)";
constexpr static char itNumberElementMn[] = "25 - Manganese (Mn)";
constexpr static char deNumberElementMn[] = "25 - Mangan (Mn)";
constexpr static char esNumberElementMn[] = "25 - Manganeso (Mn)";
constexpr static char huNumberElementMn[] = "25 - Mangán (Mn)";
constexpr static char enNumberElementMo[] = "42 - Molybdenum (Mo)";
constexpr static char frNumberElementMo[] = "42 - Molybdène (Mo)";
constexpr static char nlNumberElementMo[] = "42 - Molybdenum (Mo)";
constexpr static char ptNumberElementMo[] = "42 - Molibdênio (Mo)";
constexpr static char itNumberElementMo[] = "42 - Molybdenum (Mo)";
constexpr static char deNumberElementMo[] = "42 - Molybdän (Mo)";
constexpr static char esNumberElementMo[] = "42 - Molibdeno (Mo)";
constexpr static char huNumberElementMo[] = "42 - Molibdén (Mo)";
constexpr static char enNumberElementMt[] = "109 - Meitnerium (Mt)";
constexpr static char frNumberElementMt[] = "109 - Meitnérium (Mt)";
constexpr static char nlNumberElementMt[] = "109 - Meitnerium (Mt)";
constexpr static char ptNumberElementMt[] = "109 - Meitnerium (Mt)";
constexpr static char itNumberElementMt[] = "109 - Meitnerium (Mt)";
constexpr static char deNumberElementMt[] = "109 - Meitnerium (Mt)";
constexpr static char esNumberElementMt[] = "109 - Meitnerio (Mt)";
constexpr static char huNumberElementMt[] = "109 - Meitnerium (Mt)";
constexpr static char enNumberElementN[] = "7 - Nitrogen (N)";
constexpr static char frNumberElementN[] = "7 - Azote (N)";
constexpr static char nlNumberElementN[] = "7 - Nitrogen (N)";
constexpr static char ptNumberElementN[] = "7 - Azoto (N)";
constexpr static char itNumberElementN[] = "7 - Nitrogen (N)";
constexpr static char deNumberElementN[] = "7 - Stickstoff (N)";
constexpr static char esNumberElementN[] = "7 - Nitrógeno (N)";
constexpr static char huNumberElementN[] = "7 - Nitrogén (N)";
constexpr static char enNumberElementNa[] = "11 - Sodium (Na)";
constexpr static char frNumberElementNa[] = "11 - Sodium (Na)";
constexpr static char nlNumberElementNa[] = "11 - Sodium (Na)";
constexpr static char ptNumberElementNa[] = "11 - Sódio (Na)";
constexpr static char itNumberElementNa[] = "11 - Sodium (Na)";
constexpr static char deNumberElementNa[] = "11 - Natrium (Na)";
constexpr static char esNumberElementNa[] = "11 - Sodio (Na)";
constexpr static char huNumberElementNa[] = "11 - Nátrium (Na)";
constexpr static char enNumberElementNb[] = "41 - Niobium (Nb)";
constexpr static char frNumberElementNb[] = "41 - Niobium (Nb)";
constexpr static char nlNumberElementNb[] = "41 - Niobium (Nb)";
constexpr static char ptNumberElementNb[] = "41 - Nióbio (Nb)";
constexpr static char itNumberElementNb[] = "41 - Niobium (Nb)";
constexpr static char deNumberElementNb[] = "41 - Niob (Nb)";
constexpr static char esNumberElementNb[] = "41 - Niobio (Nb)";
constexpr static char huNumberElementNb[] = "41 - Niobium (Nb)";
constexpr static char enNumberElementNd[] = "60 - Neodymium (Nd)";
constexpr static char frNumberElementNd[] = "60 - Néodyme (Nd)";
constexpr static char nlNumberElementNd[] = "60 - Neodymium (Nd)";
constexpr static char ptNumberElementNd[] = "60 - Neodímio (Nd)";
constexpr static char itNumberElementNd[] = "60 - Neodymium (Nd)";
constexpr static char deNumberElementNd[] = "60 - Neodym (Nd)";
constexpr static char esNumberElementNd[] = "60 - Neodimio (Nd)";
constexpr static char huNumberElementNd[] = "60 - neodímium (Nd)";
constexpr static char enNumberElementNe[] = "10 - Neon (Ne)";
constexpr static char frNumberElementNe[] = "10 - Néon (Ne)";
constexpr static char nlNumberElementNe[] = "10 - Neon (Ne)";
constexpr static char ptNumberElementNe[] = "10 - Néon (Ne)";
constexpr static char itNumberElementNe[] = "10 - Neon (Ne)";
constexpr static char deNumberElementNe[] = "10 - Neon (Ne)";
constexpr static char esNumberElementNe[] = "10 - Neón (Ne)";
constexpr static char huNumberElementNe[] = "10 - Neon (Ne)";
constexpr static char enNumberElementNh[] = "113 - Nihonium (Nh)";
constexpr static char frNumberElementNh[] = "113 - Nihonium (Nh)";
constexpr static char nlNumberElementNh[] = "113 - Nihonium (Nh)";
constexpr static char ptNumberElementNh[] = "113 - Nihonium (Nh)";
constexpr static char itNumberElementNh[] = "113 - Nihonium (Nh)";
constexpr static char deNumberElementNh[] = "113 - Nihonium (Nh)";
constexpr static char esNumberElementNh[] = "113 - Nihonium (Nh)";
constexpr static char huNumberElementNh[] = "113 - Nihónium (Nh)";
constexpr static char enNumberElementNi[] = "28 - Nickel (Ni)";
constexpr static char frNumberElementNi[] = "28 - Nickel (Ni)";
constexpr static char nlNumberElementNi[] = "28 - Nickel (Ni)";
constexpr static char ptNumberElementNi[] = "28 - Níquel (Ni)";
constexpr static char itNumberElementNi[] = "28 - Nickel (Ni)";
constexpr static char deNumberElementNi[] = "28 - Nickel (Ni)";
constexpr static char esNumberElementNi[] = "28 - Níquel (Ni)";
constexpr static char huNumberElementNi[] = "28 - Nikkel (Ni)";
constexpr static char enNumberElementNo[] = "102 - Nobelium (No)";
constexpr static char frNumberElementNo[] = "102 - Nobélium (No)";
constexpr static char nlNumberElementNo[] = "102 - Nobelium (No)";
constexpr static char ptNumberElementNo[] = "102 - Nobelium (No)";
constexpr static char itNumberElementNo[] = "102 - Nobelium (No)";
constexpr static char deNumberElementNo[] = "102 - nobelium (No)";
constexpr static char esNumberElementNo[] = "102 - Nobelio (No)";
constexpr static char huNumberElementNo[] = "102 - Nobelium (No)";
constexpr static char enNumberElementNp[] = "93 - Neptunium (Np)";
constexpr static char frNumberElementNp[] = "93 - Neptunium (Np)";
constexpr static char nlNumberElementNp[] = "93 - Neptunium (Np)";
constexpr static char ptNumberElementNp[] = "93 - Neptúnio (Np)";
constexpr static char itNumberElementNp[] = "93 - Neptunium (Np)";
constexpr static char deNumberElementNp[] = "93 - Neptunium (Np)";
constexpr static char esNumberElementNp[] = "93 - Neptunio (Np)";
constexpr static char huNumberElementNp[] = "93 - Neptunium (Np)";
constexpr static char enNumberElementO[] = "8 - Oxygen (O)";
constexpr static char frNumberElementO[] = "8 - Oxygène (O)";
constexpr static char nlNumberElementO[] = "8 - Oxygen (O)";
constexpr static char ptNumberElementO[] = "8 - Oxigênio (O)";
constexpr static char itNumberElementO[] = "8 - Oxygen (O)";
constexpr static char deNumberElementO[] = "8 - Sauerstoff (O)";
constexpr static char esNumberElementO[] = "8 - Oxígeno (O)";
constexpr static char huNumberElementO[] = "8 - Oxigén (O)";
constexpr static char enNumberElementOg[] = "118 - Oganesson (Og)";
constexpr static char frNumberElementOg[] = "118 - Oganesson (Og)";
constexpr static char nlNumberElementOg[] = "118 - Oganesson (Og)";
constexpr static char ptNumberElementOg[] = "118 - Oganesson (Og)";
constexpr static char itNumberElementOg[] = "118 - Oganesson (Og)";
constexpr static char deNumberElementOg[] = "118 - Oganesson (Og)";
constexpr static char esNumberElementOg[] = "118 - Oganesson (Og)";
constexpr static char huNumberElementOg[] = "118 - Oganesson (Og)";
constexpr static char enNumberElementOs[] = "76 - Osmium (Os)";
constexpr static char frNumberElementOs[] = "76 - Osmium (Os)";
constexpr static char nlNumberElementOs[] = "76 - Osmium (Os)";
constexpr static char ptNumberElementOs[] = "76 - Osmio (Os)";
constexpr static char itNumberElementOs[] = "76 - Osmium (Os)";
constexpr static char deNumberElementOs[] = "76 - Osmium (Os)";
constexpr static char esNumberElementOs[] = "76 - Osmio (Os)";
constexpr static char huNumberElementOs[] = "76 - Osmium (Os)";
constexpr static char enNumberElementP[] = "15 - Phosphorus (P)";
constexpr static char frNumberElementP[] = "15 - Phosphore (P)";
constexpr static char nlNumberElementP[] = "15 - Phosphorus (P)";
constexpr static char ptNumberElementP[] = "15 - Fósforo (P)";
constexpr static char itNumberElementP[] = "15 - Phosphorus (P)";
constexpr static char deNumberElementP[] = "15 - Phosphor (P)";
constexpr static char esNumberElementP[] = "15 - Fósforo (P)";
constexpr static char huNumberElementP[] = "15 - Foszfor (P)";
constexpr static char enNumberElementPa[] = "91 - Protactinium (Pa)";
constexpr static char frNumberElementPa[] = "91 - Protactinium (Pa)";
constexpr static char nlNumberElementPa[] = "91 - Protactinium (Pa)";
constexpr static char ptNumberElementPa[] = "91 - Protactínio (Pa)";
constexpr static char itNumberElementPa[] = "91 - Protactinium (Pa)";
constexpr static char deNumberElementPa[] = "91 - Protaktinium (Pa)";
constexpr static char esNumberElementPa[] = "91 - Protactinio (Pa)";
constexpr static char huNumberElementPa[] = "91 - Protactinium (Pa)";
constexpr static char enNumberElementPb[] = "82 - Lead (Pb)";
constexpr static char frNumberElementPb[] = "82 - Plomb (Pb)";
constexpr static char nlNumberElementPb[] = "82 - Lead (Pb)";
constexpr static char ptNumberElementPb[] = "82 - Levar (Pb)";
constexpr static char itNumberElementPb[] = "82 - Lead (Pb)";
constexpr static char deNumberElementPb[] = "82 - führen (Pb)";
constexpr static char esNumberElementPb[] = "82 - Conducir (Pb)";
constexpr static char huNumberElementPb[] = "82 - Olom (Pb)";
constexpr static char enNumberElementPd[] = "46 - Palladium (Pd)";
constexpr static char frNumberElementPd[] = "46 - Palladium (Pd)";
constexpr static char nlNumberElementPd[] = "46 - Palladium (Pd)";
constexpr static char ptNumberElementPd[] = "46 - Paládio (Pd)";
constexpr static char itNumberElementPd[] = "46 - Palladium (Pd)";
constexpr static char deNumberElementPd[] = "46 - Palladium (Pd)";
constexpr static char esNumberElementPd[] = "46 - Paladio (Pd)";
constexpr static char huNumberElementPd[] = "46 - Palládium (Pd)";
constexpr static char enNumberElementPm[] = "61 - Promethium (Pm)";
constexpr static char frNumberElementPm[] = "61 - Prométhium (Pm)";
constexpr static char nlNumberElementPm[] = "61 - Promethium (Pm)";
constexpr static char ptNumberElementPm[] = "61 - Promécio (Pm)";
constexpr static char itNumberElementPm[] = "61 - Promethium (Pm)";
constexpr static char deNumberElementPm[] = "61 - Promethium (Pm)";
constexpr static char esNumberElementPm[] = "61 - Prometeo (Pm)";
constexpr static char huNumberElementPm[] = "61 - Promethium (Pm)";
constexpr static char enNumberElementPo[] = "84 - Polonium (Po)";
constexpr static char frNumberElementPo[] = "84 - Polonium (Po)";
constexpr static char nlNumberElementPo[] = "84 - Polonium (Po)";
constexpr static char ptNumberElementPo[] = "84 - Polônio (Po)";
constexpr static char itNumberElementPo[] = "84 - Polonium (Po)";
constexpr static char deNumberElementPo[] = "84 - Polonium (Po)";
constexpr static char esNumberElementPo[] = "84 - Polonio (Po)";
constexpr static char huNumberElementPo[] = "84 - Polónium (Po)";
constexpr static char enNumberElementPr[] = "59 - praseodymium (Pr)";
constexpr static char frNumberElementPr[] = "59 - Praséodyme (Pr)";
constexpr static char nlNumberElementPr[] = "59 - praseodymium (Pr)";
constexpr static char ptNumberElementPr[] = "59 - Praseodímio (Pr)";
constexpr static char itNumberElementPr[] = "59 - praseodymium (Pr)";
constexpr static char deNumberElementPr[] = "59 - Praseodym (Pr)";
constexpr static char esNumberElementPr[] = "59 - Praseodimio (Pr)";
constexpr static char huNumberElementPr[] = "59 - prazeodímium (Pr)";
constexpr static char enNumberElementPt[] = "78 - Platinum (Pt)";
constexpr static char frNumberElementPt[] = "78 - Platine (Pt)";
constexpr static char nlNumberElementPt[] = "78 - Platinum (Pt)";
constexpr static char ptNumberElementPt[] = "78 - Platina (Pt)";
constexpr static char itNumberElementPt[] = "78 - Platinum (Pt)";
constexpr static char deNumberElementPt[] = "78 - Platin (Pt)";
constexpr static char esNumberElementPt[] = "78 - Platino (Pt)";
constexpr static char huNumberElementPt[] = "78 - Platinum (Pt)";
constexpr static char enNumberElementPu[] = "94 - Plutonium (Pu)";
constexpr static char frNumberElementPu[] = "94 - Plutonium (Pu)";
constexpr static char nlNumberElementPu[] = "94 - Plutonium (Pu)";
constexpr static char ptNumberElementPu[] = "94 - Plutônio (Pu)";
constexpr static char itNumberElementPu[] = "94 - Plutonium (Pu)";
constexpr static char deNumberElementPu[] = "94 - Plutonium (Pu)";
constexpr static char esNumberElementPu[] = "94 - Plutonio (Pu)";
constexpr static char huNumberElementPu[] = "94 - Plutónium (Pu)";
constexpr static char enNumberElementRa[] = "88 - Radium (Ra)";
constexpr static char frNumberElementRa[] = "88 - Radium (Ra)";
constexpr static char nlNumberElementRa[] = "88 - Radium (Ra)";
constexpr static char ptNumberElementRa[] = "88 - Rádio (Ra)";
constexpr static char itNumberElementRa[] = "88 - Radium (Ra)";
constexpr static char deNumberElementRa[] = "88 - Radium (Ra)";
constexpr static char esNumberElementRa[] = "88 - Radio (Ra)";
constexpr static char huNumberElementRa[] = "88 - Rádium (Ra)";
constexpr static char enNumberElementRb[] = "37 - Rubidium (Rb)";
constexpr static char frNumberElementRb[] = "37 - Rubidium (Rb)";
constexpr static char nlNumberElementRb[] = "37 - Rubidium (Rb)";
constexpr static char ptNumberElementRb[] = "37 - Rubídio (Rb)";
constexpr static char itNumberElementRb[] = "37 - Rubidium (Rb)";
constexpr static char deNumberElementRb[] = "37 - Rubidium (Rb)";
constexpr static char esNumberElementRb[] = "37 - Rubidio (Rb)";
constexpr static char huNumberElementRb[] = "37 - Rubídium (Rb)";
constexpr static char enNumberElementRe[] = "75 - Rhenium (Re)";
constexpr static char frNumberElementRe[] = "75 - Rhénium (Re)";
constexpr static char nlNumberElementRe[] = "75 - Rhenium (Re)";
constexpr static char ptNumberElementRe[] = "75 - Rênio (Re)";
constexpr static char itNumberElementRe[] = "75 - Rhenium (Re)";
constexpr static char deNumberElementRe[] = "75 - Rhenium (Re)";
constexpr static char esNumberElementRe[] = "75 - Renio (Re)";
constexpr static char huNumberElementRe[] = "75 - Renium (újra)";
constexpr static char enNumberElementRf[] = "104 - Rutherfordium (Rf)";
constexpr static char frNumberElementRf[] = "104 - Rutherfordium (Rf)";
constexpr static char nlNumberElementRf[] = "104 - Rutherfordium (Rf)";
constexpr static char ptNumberElementRf[] = "104 - Rutherfordium (Rf)";
constexpr static char itNumberElementRf[] = "104 - Rutherfordium (Rf)";
constexpr static char deNumberElementRf[] = "104 - rutherfordium (Rf)";
constexpr static char esNumberElementRf[] = "104 - Rutherfordio (Rf)";
constexpr static char huNumberElementRf[] = "104 - Rutherfordium (Rf)";
constexpr static char enNumberElementRg[] = "111 - Roentgenium (Rg)";
constexpr static char frNumberElementRg[] = "111 - Roentgenium (Rg)";
constexpr static char nlNumberElementRg[] = "111 - Roentgenium (Rg)";
constexpr static char ptNumberElementRg[] = "111 - Roentgenium (Rg)";
constexpr static char itNumberElementRg[] = "111 - Roentgenium (Rg)";
constexpr static char deNumberElementRg[] = "111 - Roentgenium (Rg)";
constexpr static char esNumberElementRg[] = "111 - Roentgenio (Rg)";
constexpr static char huNumberElementRg[] = "111 - Roentgenium (Rg)";
constexpr static char enNumberElementRh[] = "45 - rhodium (Rh)";
constexpr static char frNumberElementRh[] = "45 - Rhodium (Rh)";
constexpr static char nlNumberElementRh[] = "45 - rhodium (Rh)";
constexpr static char ptNumberElementRh[] = "45 - Ródio (Rh)";
constexpr static char itNumberElementRh[] = "45 - rhodium (Rh)";
constexpr static char deNumberElementRh[] = "45 - Rhodium (Rh)";
constexpr static char esNumberElementRh[] = "45 - Rodio (Rh)";
constexpr static char huNumberElementRh[] = "45 - Ródium (Rh)";
constexpr static char enNumberElementRn[] = "86 - Radon (Rn)";
constexpr static char frNumberElementRn[] = "86 - Radon (Rn)";
constexpr static char nlNumberElementRn[] = "86 - Radon (Rn)";
constexpr static char ptNumberElementRn[] = "86 - Radão (Rn)";
constexpr static char itNumberElementRn[] = "86 - Radon (Rn)";
constexpr static char deNumberElementRn[] = "86 - Radon (Rn)";
constexpr static char esNumberElementRn[] = "86 - Radón (Rn)";
constexpr static char huNumberElementRn[] = "86 - Radon (Rn)";
constexpr static char enNumberElementRu[] = "44 - Ruthenium (Ru)";
constexpr static char frNumberElementRu[] = "44 - Ruthénium (Ru)";
constexpr static char nlNumberElementRu[] = "44 - Ruthenium (Ru)";
constexpr static char ptNumberElementRu[] = "44 - Rutênio (Ru)";
constexpr static char itNumberElementRu[] = "44 - Ruthenium (Ru)";
constexpr static char deNumberElementRu[] = "44 - Ruthenium (Ru)";
constexpr static char esNumberElementRu[] = "44 - Rutenio (Ru)";
constexpr static char huNumberElementRu[] = "44 - Ruténium (Ru)";
constexpr static char enNumberElementS[] = "16 - Sulfur (S)";
constexpr static char frNumberElementS[] = "16 - Soufre (S)";
constexpr static char nlNumberElementS[] = "16 - Sulfur (S)";
constexpr static char ptNumberElementS[] = "16 - Enxofre (S)";
constexpr static char itNumberElementS[] = "16 - Sulfur (S)";
constexpr static char deNumberElementS[] = "16 - Schwefel (S)";
constexpr static char esNumberElementS[] = "16 - Azufre (S)";
constexpr static char huNumberElementS[] = "16 - Kén (S)";
constexpr static char enNumberElementSb[] = "51 - Antimony (Sb)";
constexpr static char frNumberElementSb[] = "51 - Antimoine (Sb)";
constexpr static char nlNumberElementSb[] = "51 - Antimony (Sb)";
constexpr static char ptNumberElementSb[] = "51 - Antimônio (Sb)";
constexpr static char itNumberElementSb[] = "51 - Antimony (Sb)";
constexpr static char deNumberElementSb[] = "51 - Antimon (Sb)";
constexpr static char esNumberElementSb[] = "51 - Antimonio (Sb)";
constexpr static char huNumberElementSb[] = "51 - Antimon (Sb)";
constexpr static char enNumberElementSc[] = "21 - Scandium (Sc)";
constexpr static char frNumberElementSc[] = "21 - Scandium (Sc)";
constexpr static char nlNumberElementSc[] = "21 - Scandium (Sc)";
constexpr static char ptNumberElementSc[] = "21 - Escândio (Sc)";
constexpr static char itNumberElementSc[] = "21 - Scandium (Sc)";
constexpr static char deNumberElementSc[] = "21 - Scandium (Sc)";
constexpr static char esNumberElementSc[] = "21 - Escandio (Sc)";
constexpr static char huNumberElementSc[] = "21 - Scandium (Sc)";
constexpr static char enNumberElementSe[] = "34 - Selenium (Se)";
constexpr static char frNumberElementSe[] = "34 - Sélénium (Se)";
constexpr static char nlNumberElementSe[] = "34 - Selenium (Se)";
constexpr static char ptNumberElementSe[] = "34 - Selênio (Se)";
constexpr static char itNumberElementSe[] = "34 - Selenium (Se)";
constexpr static char deNumberElementSe[] = "34 - Selen (Se)";
constexpr static char esNumberElementSe[] = "34 - Selenio (Se)";
constexpr static char huNumberElementSe[] = "34 - Szelén (Se)";
constexpr static char enNumberElementSg[] = "106 - Seaborgium (Sg)";
constexpr static char frNumberElementSg[] = "106 - Seaborgium (Sg)";
constexpr static char nlNumberElementSg[] = "106 - Seaborgium (Sg)";
constexpr static char ptNumberElementSg[] = "106 - Seaborgium (Sg)";
constexpr static char itNumberElementSg[] = "106 - Seaborgium (Sg)";
constexpr static char deNumberElementSg[] = "106 - Seaborgium (Sg)";
constexpr static char esNumberElementSg[] = "106 - Seaborgio (Sg)";
constexpr static char huNumberElementSg[] = "106 - Seaborgium (Sg)";
constexpr static char enNumberElementSi[] = "14 - Silicon (Si)";
constexpr static char frNumberElementSi[] = "14 - Silicium (Si)";
constexpr static char nlNumberElementSi[] = "14 - Silicon (Si)";
constexpr static char ptNumberElementSi[] = "14 - Silício (Si)";
constexpr static char itNumberElementSi[] = "14 - Silicon (Si)";
constexpr static char deNumberElementSi[] = "14 - Silizium (Si)";
constexpr static char esNumberElementSi[] = "14 - Silicio (Si)";
constexpr static char huNumberElementSi[] = "14 - Szilícium (Si)";
constexpr static char enNumberElementSm[] = "62 - Samarium (Sm)";
constexpr static char frNumberElementSm[] = "62 - Samarium (Sm)";
constexpr static char nlNumberElementSm[] = "62 - Samarium (Sm)";
constexpr static char ptNumberElementSm[] = "62 - Samário (Sm)";
constexpr static char itNumberElementSm[] = "62 - Samarium (Sm)";
constexpr static char deNumberElementSm[] = "62 - Samarium (Sm)";
constexpr static char esNumberElementSm[] = "62 - Samario (Sm)";
constexpr static char huNumberElementSm[] = "62 - Samarium (Sm)";
constexpr static char enNumberElementSn[] = "50 - Tin (Sn)";
constexpr static char frNumberElementSn[] = "50 - Etain (Sn)";
constexpr static char nlNumberElementSn[] = "50 - Tin (Sn)";
constexpr static char ptNumberElementSn[] = "50 - Estanho (Sn)";
constexpr static char itNumberElementSn[] = "50 - Tin (Sn)";
constexpr static char deNumberElementSn[] = "50 - Zinn (Sn)";
constexpr static char esNumberElementSn[] = "50 - Estaño (Sn)";
constexpr static char huNumberElementSn[] = "50 - On (Sn)";
constexpr static char enNumberElementSr[] = "38 - Strontium (Sr)";
constexpr static char frNumberElementSr[] = "38 - Strontium (Sr)";
constexpr static char nlNumberElementSr[] = "38 - Strontium (Sr)";
constexpr static char ptNumberElementSr[] = "38 - Estrôncio (Sr)";
constexpr static char itNumberElementSr[] = "38 - Strontium (Sr)";
constexpr static char deNumberElementSr[] = "38 - Strontium (Sr)";
constexpr static char esNumberElementSr[] = "38 - Estroncio (Sr)";
constexpr static char huNumberElementSr[] = "38 - Stroncium (Sr)";
constexpr static char enNumberElementTa[] = "73 - Tantalum (Ta)";
constexpr static char frNumberElementTa[] = "73 - Tantale (Ta)";
constexpr static char nlNumberElementTa[] = "73 - Tantalum (Ta)";
constexpr static char ptNumberElementTa[] = "73 - Tântalo (Ta)";
constexpr static char itNumberElementTa[] = "73 - Tantalum (Ta)";
constexpr static char deNumberElementTa[] = "73 - Tantal (Ta)";
constexpr static char esNumberElementTa[] = "73 - Tantalio (Ta)";
constexpr static char huNumberElementTa[] = "73 - Tantál (Ta)";
constexpr static char enNumberElementTb[] = "65 - Terbium (Tb)";
constexpr static char frNumberElementTb[] = "65 - Terbium (Tb)";
constexpr static char nlNumberElementTb[] = "65 - Terbium (Tb)";
constexpr static char ptNumberElementTb[] = "65 - Térbio (Tb)";
constexpr static char itNumberElementTb[] = "65 - Terbium (Tb)";
constexpr static char deNumberElementTb[] = "65 - Terbium (Tb)";
constexpr static char esNumberElementTb[] = "65 - Terbio (Tb)";
constexpr static char huNumberElementTb[] = "65 - Terbium (Tb)";
constexpr static char enNumberElementTc[] = "43 - Technetium (Tc)";
constexpr static char frNumberElementTc[] = "43 - Technétium (Tc)";
constexpr static char nlNumberElementTc[] = "43 - Technetium (Tc)";
constexpr static char ptNumberElementTc[] = "43 - Tecnécio (Tc)";
constexpr static char itNumberElementTc[] = "43 - Technetium (Tc)";
constexpr static char deNumberElementTc[] = "43 - Technetium (Tc)";
constexpr static char esNumberElementTc[] = "43 - Tecnecio (Tc)";
constexpr static char huNumberElementTc[] = "43 - Technecium (Tc)";
constexpr static char enNumberElementTe[] = "52 - Tellurium (Te)";
constexpr static char frNumberElementTe[] = "52 - Tellure (Te)";
constexpr static char nlNumberElementTe[] = "52 - Tellurium (Te)";
constexpr static char ptNumberElementTe[] = "52 - Telúrio (Te)";
constexpr static char itNumberElementTe[] = "52 - Tellurium (Te)";
constexpr static char deNumberElementTe[] = "52 - Tellur (Te)";
constexpr static char esNumberElementTe[] = "52 - Telurio (Te)";
constexpr static char huNumberElementTe[] = "52 - Tellúr (Te)";
constexpr static char enNumberElementTh[] = "90 - Thorium (Th)";
constexpr static char frNumberElementTh[] = "90 - Thorium (Th)";
constexpr static char nlNumberElementTh[] = "90 - Thorium (Th)";
constexpr static char ptNumberElementTh[] = "90 - Tório (Th)";
constexpr static char itNumberElementTh[] = "90 - Thorium (Th)";
constexpr static char deNumberElementTh[] = "90 - Thorium (Th)";
constexpr static char esNumberElementTh[] = "90 - Torio (Th)";
constexpr static char huNumberElementTh[] = "90 - Torium (Th)";
constexpr static char enNumberElementTi[] = "22 - Titanium (Ti)";
constexpr static char frNumberElementTi[] = "22 - Titane (Ti)";
constexpr static char nlNumberElementTi[] = "22 - Titanium (Ti)";
constexpr static char ptNumberElementTi[] = "22 - Titânio (Ti)";
constexpr static char itNumberElementTi[] = "22 - Titanium (Ti)";
constexpr static char deNumberElementTi[] = "22 - Titan (Ti)";
constexpr static char esNumberElementTi[] = "22 - Titanio (Ti)";
constexpr static char huNumberElementTi[] = "22 - Titán (Ti)";
constexpr static char enNumberElementTl[] = "81 - Thallium (Tl)";
constexpr static char frNumberElementTl[] = "81 - Thallium (Tl)";
constexpr static char nlNumberElementTl[] = "81 - Thallium (Tl)";
constexpr static char ptNumberElementTl[] = "81 - Tálio (Tl)";
constexpr static char itNumberElementTl[] = "81 - Thallium (Tl)";
constexpr static char deNumberElementTl[] = "81 - Thallium (Tl)";
constexpr static char esNumberElementTl[] = "81 - Talio (Tl)";
constexpr static char huNumberElementTl[] = "81 - Tallium (Tl)";
constexpr static char enNumberElementTm[] = "69 - Thulium (Tm)";
constexpr static char frNumberElementTm[] = "69 - Thulium (Tm)";
constexpr static char nlNumberElementTm[] = "69 - Thulium (Tm)";
constexpr static char ptNumberElementTm[] = "69 - Túlio (Tm)";
constexpr static char itNumberElementTm[] = "69 - Thulium (Tm)";
constexpr static char deNumberElementTm[] = "69 - Thulium (Tm)";
constexpr static char esNumberElementTm[] = "69 - Tulio (Tm)";
constexpr static char huNumberElementTm[] = "69 - Thulium (Tm)";
constexpr static char enNumberElementTs[] = "117 - Tennesse (Ts)";
constexpr static char frNumberElementTs[] = "117 - Tennesse (Ts)";
constexpr static char nlNumberElementTs[] = "117 - Tennesse (Ts)";
constexpr static char ptNumberElementTs[] = "117 - Tennesse (Ts)";
constexpr static char itNumberElementTs[] = "117 - Tennesse (Ts)";
constexpr static char deNumberElementTs[] = "117 - Tennesse (Ts)";
constexpr static char esNumberElementTs[] = "117 - Tennesse (Ts)";
constexpr static char huNumberElementTs[] = "117 - Tennesse (Ts)";
constexpr static char enNumberElementU[] = "92 - Uranium (U)";
constexpr static char frNumberElementU[] = "92 - Uranium (U)";
constexpr static char nlNumberElementU[] = "92 - Uranium (U)";
constexpr static char ptNumberElementU[] = "92 - Urânio (U)";
constexpr static char itNumberElementU[] = "92 - Uranium (U)";
constexpr static char deNumberElementU[] = "92 - Uran (U)";
constexpr static char esNumberElementU[] = "92 - Uranio (U)";
constexpr static char huNumberElementU[] = "92 - Urán (U)";
constexpr static char enNumberElementUbn[] = "120 - Unbinilium (Ubn)";
constexpr static char frNumberElementUbn[] = "120 - Unbinilium (Ubn)";
constexpr static char nlNumberElementUbn[] = "120 - Unbinilium (Ubn)";
constexpr static char ptNumberElementUbn[] = "120 - Unbinílio (Ubn)";
constexpr static char itNumberElementUbn[] = "120 - Unbinilium (Ubn)";
constexpr static char deNumberElementUbn[] = "120 - Unbinilium (Ubn)";
constexpr static char esNumberElementUbn[] = "120 - Unbinilio (Ubn)";
constexpr static char huNumberElementUbn[] = "120 - Unbinilium (Ubn)";
constexpr static char enNumberElementUue[] = "119 - Ununennium (Uue)";
constexpr static char frNumberElementUue[] = "119 - Ununennium (Uue)";
constexpr static char nlNumberElementUue[] = "119 - Ununennium (Uue)";
constexpr static char ptNumberElementUue[] = "119 - Ununénnio (Uue)";
constexpr static char itNumberElementUue[] = "119 - Ununennium (Uue)";
constexpr static char deNumberElementUue[] = "119 - Ununennium (Uue)";
constexpr static char esNumberElementUue[] = "119 - Ununennio (Uue)";
constexpr static char huNumberElementUue[] = "119 - Ununennium (Uue)";
constexpr static char enNumberElementV[] = "23 - Vanadium (V)";
constexpr static char frNumberElementV[] = "23 - Vanadium (V)";
constexpr static char nlNumberElementV[] = "23 - Vanadium (V)";
constexpr static char ptNumberElementV[] = "23 - Vanádio (V)";
constexpr static char itNumberElementV[] = "23 - Vanadium (V)";
constexpr static char deNumberElementV[] = "23 - Vanadium (V)";
constexpr static char esNumberElementV[] = "23 - Vanadio (V)";
constexpr static char huNumberElementV[] = "23 - vanádium (V)";
constexpr static char enNumberElementW[] = "74 - Tungsten (W)";
constexpr static char frNumberElementW[] = "74 - Tungstène (W)";
constexpr static char nlNumberElementW[] = "74 - Tungsten (W)";
constexpr static char ptNumberElementW[] = "74 - Tungstênio (W)";
constexpr static char itNumberElementW[] = "74 - Tungsten (W)";
constexpr static char deNumberElementW[] = "74 - Wolfram (W)";
constexpr static char esNumberElementW[] = "74 - Tungsteno (W)";
constexpr static char huNumberElementW[] = "74 - Volfrám (W)";
constexpr static char enNumberElementXe[] = "54 - Xenon (Xe)";
constexpr static char frNumberElementXe[] = "54 - Xénon (Xe)";
constexpr static char nlNumberElementXe[] = "54 - Xenon (Xe)";
constexpr static char ptNumberElementXe[] = "54 - Xênon (Xe)";
constexpr static char itNumberElementXe[] = "54 - Xenon (Xe)";
constexpr static char deNumberElementXe[] = "54 - Xenon (Xe)";
constexpr static char esNumberElementXe[] = "54 - Cenón (Xe)";
constexpr static char huNumberElementXe[] = "54 - Xenon (Xe)";
constexpr static char enNumberElementY[] = "39 - Yttrium (Y)";
constexpr static char frNumberElementY[] = "39 - Yttrium (Y)";
constexpr static char nlNumberElementY[] = "39 - Yttrium (Y)";
constexpr static char ptNumberElementY[] = "39 - Itrio (Y)";
constexpr static char itNumberElementY[] = "39 - Yttrium (Y)";
constexpr static char deNumberElementY[] = "39 - Yttrium (Y)";
constexpr static char esNumberElementY[] = "39 - Itrio (Y)";
constexpr static char huNumberElementY[] = "39 - Ittrium (Y)";
constexpr static char enNumberElementYb[] = "70 - Ytterbium (Yb)";
constexpr static char frNumberElementYb[] = "70 - Ytterbium (Yb)";
constexpr static char nlNumberElementYb[] = "70 - Ytterbium (Yb)";
constexpr static char ptNumberElementYb[] = "70 - Itérbio (Yb)";
constexpr static char itNumberElementYb[] = "70 - Ytterbium (Yb)";
constexpr static char deNumberElementYb[] = "70 - Ytterbium (Yb)";
constexpr static char esNumberElementYb[] = "70 - Iterbio (Yb)";
constexpr static char huNumberElementYb[] = "70 - Ytterbium (Yb)";
constexpr static char enNumberElementZn[] = "30 - Zinc (Zn)";
constexpr static char frNumberElementZn[] = "30 - Zinc (Zn)";
constexpr static char nlNumberElementZn[] = "30 - Zinc (Zn)";
constexpr static char ptNumberElementZn[] = "30 - Zinco (Zn)";
constexpr static char itNumberElementZn[] = "30 - Zinc (Zn)";
constexpr static char deNumberElementZn[] = "30 - Zink (Zn)";
constexpr static char esNumberElementZn[] = "30 - Zinc (Zn)";
constexpr static char huNumberElementZn[] = "30 - Cink (Zn)";
constexpr static char enNumberElementZr[] = "40 - Zirconium (Zr)";
constexpr static char frNumberElementZr[] = "40 - Zirconium (Zr)";
constexpr static char nlNumberElementZr[] = "40 - Zirconium (Zr)";
constexpr static char ptNumberElementZr[] = "40 - Zircônio (Zr)";
constexpr static char itNumberElementZr[] = "40 - Zirconium (Zr)";
constexpr static char deNumberElementZr[] = "40 - Zirkonium (Zr)";
constexpr static char esNumberElementZr[] = "40 - Circonio (Zr)";
constexpr static char huNumberElementZr[] = "40 - Cirkónium (Zr)";
constexpr static char enNumberOfDots[] = "Number of points";
constexpr static char frNumberOfDots[] = "Nombre de points";
constexpr static char nlNumberOfDots[] = "Aantal punten";
constexpr static char ptNumberOfDots[] = "Número de pontos";
constexpr static char itNumberOfDots[] = "Numero di punti";
constexpr static char deNumberOfDots[] = "Punktanzahl";
constexpr static char esNumberOfDots[] = "Número de puntos";
constexpr static char huNumberOfDots[] = "Pontok száma";
constexpr static char enOk[] = "Confirm";
constexpr static char frOk[] = "Valider";
constexpr static char nlOk[] = "Bevestig";
constexpr static char ptOk[] = "Confirmar";
constexpr static char itOk[] = "Conferma";
constexpr static char deOk[] = "Bestätigen";
constexpr static char esOk[] = "Confirmar";
constexpr static char huOk[] = "Ervényesítés";
constexpr static char enOmegaVersion[] = "Omega version";
constexpr static char frOmegaVersion[] = "Version d'Omega";
constexpr static char nlOmegaVersion[] = "Omega version";
constexpr static char ptOmegaVersion[] = "Versão do Omega";
constexpr static char itOmegaVersion[] = "Omega version";
constexpr static char deOmegaVersion[] = "Omega version";
constexpr static char esOmegaVersion[] = "Versión de Omega";
constexpr static char huOmegaVersion[] = "Omega verzió";
constexpr static char enOnlyFirstSolutionsDisplayed0[] = "Only the first 10 solutions";
constexpr static char frOnlyFirstSolutionsDisplayed0[] = "Seulement les 10 premières";
constexpr static char nlOnlyFirstSolutionsDisplayed0[] = "Alleen de eerste tien oplossingen";
constexpr static char ptOnlyFirstSolutionsDisplayed0[] = "Apenas as 10 primeiras";
constexpr static char itOnlyFirstSolutionsDisplayed0[] = "Solamente le prime 10";
constexpr static char deOnlyFirstSolutionsDisplayed0[] = "Es werden nur die ersten";
constexpr static char esOnlyFirstSolutionsDisplayed0[] = "Sólo se muestran las";
constexpr static char huOnlyFirstSolutionsDisplayed0[] = "Csak a 10 elsö megoldások";
constexpr static char enOnlyFirstSolutionsDisplayed1[] = "are displayed";
constexpr static char frOnlyFirstSolutionsDisplayed1[] = "solutions sont affichées";
constexpr static char nlOnlyFirstSolutionsDisplayed1[] = "worden weergegeven";
constexpr static char ptOnlyFirstSolutionsDisplayed1[] = "soluções são exibidas";
constexpr static char itOnlyFirstSolutionsDisplayed1[] = "soluzioni sono mostrate";
constexpr static char deOnlyFirstSolutionsDisplayed1[] = "zehn Lösungen angezeigt.";
constexpr static char esOnlyFirstSolutionsDisplayed1[] = "10 primeras soluciones";
constexpr static char huOnlyFirstSolutionsDisplayed1[] = "jelennek meg";
constexpr static char enOnlyRoot[] = "Root";
constexpr static char frOnlyRoot[] = "Racine";
constexpr static char nlOnlyRoot[] = "Wortel";
constexpr static char ptOnlyRoot[] = "Raiz";
constexpr static char itOnlyRoot[] = "Radice";
constexpr static char deOnlyRoot[] = "Wurzel";
constexpr static char esOnlyRoot[] = "Raíz";
constexpr static char huOnlyRoot[] = "Gyökér";
constexpr static char enOr[] = " or ";
constexpr static char frOr[] = " ou ";
constexpr static char nlOr[] = " of ";
constexpr static char ptOr[] = " ou ";
constexpr static char itOr[] = " o ";
constexpr static char deOr[] = " oder ";
constexpr static char esOr[] = " o ";
constexpr static char huOr[] = " vagy ";
constexpr static char enOrthonormal[] = "Equal axes";
constexpr static char frOrthonormal[] = "Orthonormé";
constexpr static char nlOrthonormal[] = "Orthonormaal";
constexpr static char ptOrthonormal[] = "Ortonormado";
constexpr static char itOrthonormal[] = "Ortonormale";
constexpr static char deOrthonormal[] = "Orthonormal";
constexpr static char esOrthonormal[] = "Ortonormal";
constexpr static char huOrthonormal[] = "Ortonormált";
constexpr static char enParametricType[] = "Parametric ";
constexpr static char frParametricType[] = "Paramétrique ";
constexpr static char nlParametricType[] = "Parametrisch ";
constexpr static char ptParametricType[] = "Paramétrico ";
constexpr static char itParametricType[] = "Parametrica ";
constexpr static char deParametricType[] = "Parameter ";
constexpr static char esParametricType[] = "Paramétrico ";
constexpr static char huParametricType[] = "Parametrikus ";
constexpr static char enParticleMass[] = "Particles Mass";
constexpr static char frParticleMass[] = "Masses des Particules";
constexpr static char nlParticleMass[] = "Deeltjesmassa";
constexpr static char ptParticleMass[] = "Massa de Partículas";
constexpr static char itParticleMass[] = "Massa delle particelle";
constexpr static char deParticleMass[] = "Partikel Masse";
constexpr static char esParticleMass[] = "Misa de las partículas";
constexpr static char huParticleMass[] = "Részecske Tömege";
constexpr static char enPermutation[] = "Permutation";
constexpr static char frPermutation[] = "Arrangement";
constexpr static char nlPermutation[] = "Permutatie";
constexpr static char ptPermutation[] = "Permutação";
constexpr static char itPermutation[] = "Permutazione";
constexpr static char dePermutation[] = "Permutation";
constexpr static char esPermutation[] = "Variación";
constexpr static char huPermutation[] = "Permutáció";
constexpr static char enPhysics[] = "Physics";
constexpr static char frPhysics[] = "Physique";
constexpr static char nlPhysics[] = "Physics";
constexpr static char ptPhysics[] = "Físico";
constexpr static char itPhysics[] = "Physics";
constexpr static char dePhysics[] = "Physikalisch";
constexpr static char esPhysics[] = "Físico";
constexpr static char huPhysics[] = "Fizika";
constexpr static char enPlanckChargeTag[] = "Planck Charge";
constexpr static char frPlanckChargeTag[] = "Charge de Planck";
constexpr static char nlPlanckChargeTag[] = "Plancklading";
constexpr static char ptPlanckChargeTag[] = "Taxa de Planck";
constexpr static char itPlanckChargeTag[] = "Carica di Planck";
constexpr static char dePlanckChargeTag[] = "Planck-Gebühr";
constexpr static char esPlanckChargeTag[] = "Carga de Planck";
constexpr static char huPlanckChargeTag[] = "Planck Töltés";
constexpr static char enPlanckCurrentTag[] = "Planck Current";
constexpr static char frPlanckCurrentTag[] = "Courant de Planck";
constexpr static char nlPlanckCurrentTag[] = "Planckstroom";
constexpr static char ptPlanckCurrentTag[] = "Corrente de Planck";
constexpr static char itPlanckCurrentTag[] = "Planck current";
constexpr static char dePlanckCurrentTag[] = "Planck-Strom";
constexpr static char esPlanckCurrentTag[] = "Corriente de Planck";
constexpr static char huPlanckCurrentTag[] = "Planck Aram";
constexpr static char enPlanckDensityTag[] = "Planck Density";
constexpr static char frPlanckDensityTag[] = "Densité de Planck";
constexpr static char nlPlanckDensityTag[] = "Planckdichtheid";
constexpr static char ptPlanckDensityTag[] = "Densidade de Planck";
constexpr static char itPlanckDensityTag[] = "Densità di planck";
constexpr static char dePlanckDensityTag[] = "Planck-Dichte";
constexpr static char esPlanckDensityTag[] = "Densidad de Planck";
constexpr static char huPlanckDensityTag[] = "Planck Sürüsége";
constexpr static char enPlanckEnergyTag[] = "Planck Energy";
constexpr static char frPlanckEnergyTag[] = "Energie de Planck";
constexpr static char nlPlanckEnergyTag[] = "Planck-energie";
constexpr static char ptPlanckEnergyTag[] = "Energia de Planck";
constexpr static char itPlanckEnergyTag[] = "Energia di Planck";
constexpr static char dePlanckEnergyTag[] = "Planck-Energie";
constexpr static char esPlanckEnergyTag[] = "Energía de Planck";
constexpr static char huPlanckEnergyTag[] = "Planck Energia";
constexpr static char enPlanckForceTag[] = "Planck Force";
constexpr static char frPlanckForceTag[] = "Force de Planck";
constexpr static char nlPlanckForceTag[] = "Planckkracht";
constexpr static char ptPlanckForceTag[] = "Força de Planck";
constexpr static char itPlanckForceTag[] = "Forza di Planck";
constexpr static char dePlanckForceTag[] = "Planck-Kraft";
constexpr static char esPlanckForceTag[] = "Fuerza de Planck";
constexpr static char huPlanckForceTag[] = "Planck Erő";
constexpr static char enPlanckImpedanceTag[] = "Planck Impedance";
constexpr static char frPlanckImpedanceTag[] = "Impédance de Planck";
constexpr static char nlPlanckImpedanceTag[] = "Planckimpedantie";
constexpr static char ptPlanckImpedanceTag[] = "Impedância do Planck";
constexpr static char itPlanckImpedanceTag[] = "Impedenza di planck";
constexpr static char dePlanckImpedanceTag[] = "Planck-Impedanz";
constexpr static char esPlanckImpedanceTag[] = "Impedancia de Planck";
constexpr static char huPlanckImpedanceTag[] = "Planck Impedancia";
constexpr static char enPlanckLengthTag[] = "Planck Length";
constexpr static char frPlanckLengthTag[] = "Longueur de Planck";
constexpr static char nlPlanckLengthTag[] = "Plancklengte";
constexpr static char ptPlanckLengthTag[] = "Comprimento do Planck";
constexpr static char itPlanckLengthTag[] = "Lunghezza di Planck";
constexpr static char dePlanckLengthTag[] = "Planck-Länge";
constexpr static char esPlanckLengthTag[] = "Longitud de Planck";
constexpr static char huPlanckLengthTag[] = "Planck Hossza";
constexpr static char enPlanckLinearMassTag[] = "Planck Linear Mass";
constexpr static char frPlanckLinearMassTag[] = "Masse Linéique de Planck";
constexpr static char nlPlanckLinearMassTag[] = "Planck Lineaire Massa";
constexpr static char ptPlanckLinearMassTag[] = "Massa Linear de Planck";
constexpr static char itPlanckLinearMassTag[] = "Massa lineare di Planck";
constexpr static char dePlanckLinearMassTag[] = "Lineare Masse nach Planck";
constexpr static char esPlanckLinearMassTag[] = "Masa lineal de Planck";
constexpr static char huPlanckLinearMassTag[] = "Planck Lineáris Tömeg";
constexpr static char enPlanckMassTag[] = "Planck Mass";
constexpr static char frPlanckMassTag[] = "Masse de Planck";
constexpr static char nlPlanckMassTag[] = "Planckmassa";
constexpr static char ptPlanckMassTag[] = "Massa de Planck";
constexpr static char itPlanckMassTag[] = "Messa di Planck";
constexpr static char dePlanckMassTag[] = "Planck-Masse";
constexpr static char esPlanckMassTag[] = "Masa de Planck";
constexpr static char huPlanckMassTag[] = "Planck Tömeg";
constexpr static char enPlanckPowerTag[] = "Planck Power";
constexpr static char frPlanckPowerTag[] = "Puissance de Planck";
constexpr static char nlPlanckPowerTag[] = "Planckvermogen";
constexpr static char ptPlanckPowerTag[] = "Potência Planck";
constexpr static char itPlanckPowerTag[] = "Potenza di Planck";
constexpr static char dePlanckPowerTag[] = "Planck-Leistung";
constexpr static char esPlanckPowerTag[] = "El poder de Planck";
constexpr static char huPlanckPowerTag[] = "Planck Hatalom";
constexpr static char enPlanckPressureTag[] = "Planck Pressure";
constexpr static char frPlanckPressureTag[] = "Pression de Planck";
constexpr static char nlPlanckPressureTag[] = "Planckdruk";
constexpr static char ptPlanckPressureTag[] = "Pressão Planck";
constexpr static char itPlanckPressureTag[] = "Planck pressure";
constexpr static char dePlanckPressureTag[] = "Planck-Druck";
constexpr static char esPlanckPressureTag[] = "Presión de Planck";
constexpr static char huPlanckPressureTag[] = "Planck Nyomás";
constexpr static char enPlanckQuantityMovementTag[] = "Planck Quantity of Movement";
constexpr static char frPlanckQuantityMovementTag[] = "Quantité de Mouvement de Planck";
constexpr static char nlPlanckQuantityMovementTag[] = "Planck Hoeveelheid beweging";
constexpr static char ptPlanckQuantityMovementTag[] = "Planck quantidade de movimento";
constexpr static char itPlanckQuantityMovementTag[] = "Planck quantità di movimento";
constexpr static char dePlanckQuantityMovementTag[] = "Planck-Menge der Bewegung";
constexpr static char esPlanckQuantityMovementTag[] = "Cantidad de movimiento de Planck";
constexpr static char huPlanckQuantityMovementTag[] = "Planck Mozgás Mennyisége";
constexpr static char enPlanckReduceTag[] = "Reduced Planck Constant";
constexpr static char frPlanckReduceTag[] = "Constante de Planck réduite";
constexpr static char nlPlanckReduceTag[] = "Reduced Planck Constant";
constexpr static char ptPlanckReduceTag[] = "Constante de Planck Reduzida";
constexpr static char itPlanckReduceTag[] = "Costante di Planck ridotta";
constexpr static char dePlanckReduceTag[] = "Reduzierte Planck-Konstante";
constexpr static char esPlanckReduceTag[] = "Constante reducida de Planck";
constexpr static char huPlanckReduceTag[] = "Csökkentett Planck Allandó";
constexpr static char enPlanckTag[] = "Planck Constant";
constexpr static char frPlanckTag[] = "Constante de Planck";
constexpr static char nlPlanckTag[] = "Planckconstante";
constexpr static char ptPlanckTag[] = "Constante de Planck";
constexpr static char itPlanckTag[] = "Costante di Planck";
constexpr static char dePlanckTag[] = "Planck - Konstante";
constexpr static char esPlanckTag[] = "Constante de Planck";
constexpr static char huPlanckTag[] = "Planck Allandó";
constexpr static char enPlanckTemperatureTag[] = "Planck Temperature";
constexpr static char frPlanckTemperatureTag[] = "Température de Planck";
constexpr static char nlPlanckTemperatureTag[] = "Plancktemperatuur";
constexpr static char ptPlanckTemperatureTag[] = "Temperatura Planck";
constexpr static char itPlanckTemperatureTag[] = "Temperatura di planck";
constexpr static char dePlanckTemperatureTag[] = "Planck-Temperatur";
constexpr static char esPlanckTemperatureTag[] = "Temperatura de Planck";
constexpr static char huPlanckTemperatureTag[] = "Planck Hőmérséklete";
constexpr static char enPlanckTensionTag[] = "Planck Tension";
constexpr static char frPlanckTensionTag[] = "Tension de Planck";
constexpr static char nlPlanckTensionTag[] = "Planckspanning";
constexpr static char ptPlanckTensionTag[] = "Tensão de Planck";
constexpr static char itPlanckTensionTag[] = "Tensione di planck";
constexpr static char dePlanckTensionTag[] = "Planck-Spannung";
constexpr static char esPlanckTensionTag[] = "Tensión de Planck";
constexpr static char huPlanckTensionTag[] = "Planck Feszültség";
constexpr static char enPlanckTimeTag[] = "Planck Time";
constexpr static char frPlanckTimeTag[] = "Temps de Planck";
constexpr static char nlPlanckTimeTag[] = "Plancktijd";
constexpr static char ptPlanckTimeTag[] = "Tempo de planificação";
constexpr static char itPlanckTimeTag[] = "Tempo di planck";
constexpr static char dePlanckTimeTag[] = "Planck-Zeit";
constexpr static char esPlanckTimeTag[] = "La hora de Planck";
constexpr static char huPlanckTimeTag[] = "Planck Idő";
constexpr static char enPlanckUnitsTag[] = "Planck Units";
constexpr static char frPlanckUnitsTag[] = "Unités de Planck";
constexpr static char nlPlanckUnitsTag[] = "Planck-eenheden";
constexpr static char ptPlanckUnitsTag[] = "Unidades de Planck";
constexpr static char itPlanckUnitsTag[] = "Unità Planck";
constexpr static char dePlanckUnitsTag[] = "Planck-Einheiten";
constexpr static char esPlanckUnitsTag[] = "Unidades de Planck";
constexpr static char huPlanckUnitsTag[] = "Planck Egységek";
constexpr static char enPlatinum[] = "Platinum";
constexpr static char frPlatinum[] = "Platine";
constexpr static char nlPlatinum[] = "Platina";
constexpr static char ptPlatinum[] = "Platina";
constexpr static char itPlatinum[] = "Platino";
constexpr static char dePlatinum[] = "Platin";
constexpr static char esPlatinum[] = "Platino";
constexpr static char huPlatinum[] = "Platina";
constexpr static char enPlot[] = "Plot graph";
constexpr static char frPlot[] = "Tracer le graphique";
constexpr static char nlPlot[] = "Grafiek plotten";
constexpr static char ptPlot[] = "Traçar o gráfico";
constexpr static char itPlot[] = "Traccia grafico";
constexpr static char dePlot[] = "Graphen zeichnen";
constexpr static char esPlot[] = "Dibujar el gráfico";
constexpr static char huPlot[] = "Grafikon rajzolása";
constexpr static char enPlotOptions[] = "Plot options";
constexpr static char frPlotOptions[] = "Options de la courbe";
constexpr static char nlPlotOptions[] = "Plotopties";
constexpr static char ptPlotOptions[] = "Opções da curva";
constexpr static char itPlotOptions[] = "Opzioni della curva";
constexpr static char dePlotOptions[] = "Plotoptionen";
constexpr static char esPlotOptions[] = "Opciones de la curva";
constexpr static char huPlotOptions[] = "Görbe beállítások";
constexpr static char enPoissonDistribution[] = "Poisson distribution";
constexpr static char frPoissonDistribution[] = "Loi de Poisson";
constexpr static char nlPoissonDistribution[] = "Poissonverdeling";
constexpr static char ptPoissonDistribution[] = "Distribuição de Poisson";
constexpr static char itPoissonDistribution[] = "Distribuzione di Poisson";
constexpr static char dePoissonDistribution[] = "Poisson-Verteilung";
constexpr static char esPoissonDistribution[] = "Distribución de Poisson";
constexpr static char huPoissonDistribution[] = "Poisson eloszlás";
constexpr static char enPolar[] = "Polar ";
constexpr static char frPolar[] = "Exponentielle ";
constexpr static char nlPolar[] = "Polair ";
constexpr static char ptPolar[] = "Polar ";
constexpr static char itPolar[] = "Esponenziale ";
constexpr static char dePolar[] = "Polar ";
constexpr static char esPolar[] = "Polar ";
constexpr static char huPolar[] = "Poláris ";
constexpr static char enPolarType[] = "Polar ";
constexpr static char frPolarType[] = "Polaire ";
constexpr static char nlPolarType[] = "Polair ";
constexpr static char ptPolarType[] = "Polar ";
constexpr static char itPolarType[] = "Polare ";
constexpr static char dePolarType[] = "Polar ";
constexpr static char esPolarType[] = "Polar ";
constexpr static char huPolarType[] = "Poláris ";
constexpr static char enPolynomeHasNoRealSolution0[] = "The polynomial has no";
constexpr static char frPolynomeHasNoRealSolution0[] = "Le polynôme n'admet pas";
constexpr static char nlPolynomeHasNoRealSolution0[] = "De polynoom heeft geen";
constexpr static char ptPolynomeHasNoRealSolution0[] = "O polinómio não tem";
constexpr static char itPolynomeHasNoRealSolution0[] = "Il polinomio non ammette";
constexpr static char dePolynomeHasNoRealSolution0[] = "Das Polynom hat";
constexpr static char esPolynomeHasNoRealSolution0[] = "El polinomio no tiene";
constexpr static char huPolynomeHasNoRealSolution0[] = "A polinomnak nincs";
constexpr static char enPolynomeHasNoRealSolution1[] = "real root";
constexpr static char frPolynomeHasNoRealSolution1[] = "de racine réelle";
constexpr static char nlPolynomeHasNoRealSolution1[] = "reële wortel";
constexpr static char ptPolynomeHasNoRealSolution1[] = "nenhuma raiz real";
constexpr static char itPolynomeHasNoRealSolution1[] = "una radice reale";
constexpr static char dePolynomeHasNoRealSolution1[] = "keine reelle Nullstelle";
constexpr static char esPolynomeHasNoRealSolution1[] = "ninguna raíz real";
constexpr static char huPolynomeHasNoRealSolution1[] = "valódi gyökére";
constexpr static char enPoolMemoryFull1[] = "The working memory is full.";
constexpr static char frPoolMemoryFull1[] = "La mémoire de travail est pleine.";
constexpr static char nlPoolMemoryFull1[] = "Het werkgeheugen is vol.";
constexpr static char ptPoolMemoryFull1[] = "A memória de trabalho está cheia.";
constexpr static char itPoolMemoryFull1[] = "La memoria di lavoro è piena.";
constexpr static char dePoolMemoryFull1[] = "Der Arbeitsspeicher ist voll.";
constexpr static char esPoolMemoryFull1[] = "La memoria de trabajo está llena.";
constexpr static char huPoolMemoryFull1[] = "A memória megtelt.";
constexpr static char enPoolMemoryFull2[] = "Try again.";
constexpr static char frPoolMemoryFull2[] = "Réessayez.";
constexpr static char nlPoolMemoryFull2[] = "Opnieuw proberen.";
constexpr static char ptPoolMemoryFull2[] = "Tente novamente.";
constexpr static char itPoolMemoryFull2[] = "Riprovare.";
constexpr static char dePoolMemoryFull2[] = "Versuchen Sie es erneut.";
constexpr static char esPoolMemoryFull2[] = "Intente de nuevo.";
constexpr static char huPoolMemoryFull2[] = "Kérem próbálja újra.";
constexpr static char enPower[] = "Power";
constexpr static char frPower[] = "Puissance";
constexpr static char nlPower[] = "Macht";
constexpr static char ptPower[] = "Potência";
constexpr static char itPower[] = "Potenza";
constexpr static char dePower[] = "Potenz";
constexpr static char esPower[] = "Potencial";
constexpr static char huPower[] = "Teljesítmény";
constexpr static char enPowerDimension[] = "Powerful";
constexpr static char frPowerDimension[] = "Puissance";
constexpr static char nlPowerDimension[] = "Kracht";
constexpr static char ptPowerDimension[] = "Poderoso";
constexpr static char itPowerDimension[] = "Potere";
constexpr static char dePowerDimension[] = "Mächtig";
constexpr static char esPowerDimension[] = "Potencia";
constexpr static char huPowerDimension[] = "Erős";
constexpr static char enPredefinedVariablesIgnoredLeft[] = "Ignored";
constexpr static char frPredefinedVariablesIgnoredLeft[] = "Variable";
constexpr static char nlPredefinedVariablesIgnoredLeft[] = "Genegeerde";
constexpr static char ptPredefinedVariablesIgnoredLeft[] = "Variáveis";
constexpr static char itPredefinedVariablesIgnoredLeft[] = "Variabil";
constexpr static char dePredefinedVariablesIgnoredLeft[] = "Ignoriert";
constexpr static char esPredefinedVariablesIgnoredLeft[] = "Variables";
constexpr static char huPredefinedVariablesIgnoredLeft[] = "Mellözött";
constexpr static char enPredefinedVariablesIgnoredRight[] = " predefined variables";
constexpr static char frPredefinedVariablesIgnoredRight[] = "s prédéfinies ignorées";
constexpr static char nlPredefinedVariablesIgnoredRight[] = " opgeslagen variabelen";
constexpr static char ptPredefinedVariablesIgnoredRight[] = " pré-definidas ignoradas";
constexpr static char itPredefinedVariablesIgnoredRight[] = "i predefinite ignorate";
constexpr static char dePredefinedVariablesIgnoredRight[] = " vordefinierte Variablen";
constexpr static char esPredefinedVariablesIgnoredRight[] = " predefinidas ignoradas";
constexpr static char huPredefinedVariablesIgnoredRight[] = "elöre-meghatározott változók";
constexpr static char enPredefinedVariablesUsedLeft[] = "Used ";
constexpr static char frPredefinedVariablesUsedLeft[] = "Variable";
constexpr static char nlPredefinedVariablesUsedLeft[] = "Gebruikte ";
constexpr static char ptPredefinedVariablesUsedLeft[] = "Variáveis ";
constexpr static char itPredefinedVariablesUsedLeft[] = "Variabili";
constexpr static char dePredefinedVariablesUsedLeft[] = "Verwendete";
constexpr static char esPredefinedVariablesUsedLeft[] = "Variables";
constexpr static char huPredefinedVariablesUsedLeft[] = "Alkalmazott elöre-";
constexpr static char enPredefinedVariablesUsedRight[] = "predefined variables";
constexpr static char frPredefinedVariablesUsedRight[] = "s prédéfinies utilisées";
constexpr static char nlPredefinedVariablesUsedRight[] = "opgeslagen variabelen";
constexpr static char ptPredefinedVariablesUsedRight[] = "pré-definidas utilizadas";
constexpr static char itPredefinedVariablesUsedRight[] = " predefinite utilizzate";
constexpr static char dePredefinedVariablesUsedRight[] = " vordefinierte Variablen";
constexpr static char esPredefinedVariablesUsedRight[] = " predefinidas utilizadas";
constexpr static char huPredefinedVariablesUsedRight[] = "meghatározott változók";
constexpr static char enPrediction[] = "Simple prediction interval";
constexpr static char frPrediction[] = "Intervalle fluctuation simple (2de)";
constexpr static char nlPrediction[] = "Eenvoudig voorspellingsinterval";
constexpr static char ptPrediction[] = "Intervalo de previsão simples";
constexpr static char itPrediction[] = "Intervallo di previsione semplice";
constexpr static char dePrediction[] = "Einfaches Vorhersageintervall";
constexpr static char esPrediction[] = "Intervalo de predicción simple";
constexpr static char huPrediction[] = "Egyszerü elörejelzési intervallum";
constexpr static char enPrediction95[] = "Prediction interval 95%";
constexpr static char frPrediction95[] = "Intervalle fluctuation 95% (Term)";
constexpr static char nlPrediction95[] = "Voorspellingsinterval 95%";
constexpr static char ptPrediction95[] = "Intervalo de previsão 95%";
constexpr static char itPrediction95[] = "Intervallo di previsione al 95%";
constexpr static char dePrediction95[] = "Vorhersageintervall 95%";
constexpr static char esPrediction95[] = "Intervalo de predicción 95%";
constexpr static char huPrediction95[] = "Jóslási intervallum 95%";
constexpr static char enPreimage[] = "Inverse image";
constexpr static char frPreimage[] = "Antécédent";
constexpr static char nlPreimage[] = "Origineel";
constexpr static char ptPreimage[] = "Imagem inversa";
constexpr static char itPreimage[] = "Controimmagine";
constexpr static char dePreimage[] = "Urbild";
constexpr static char esPreimage[] = "Imagen inversa";
constexpr static char huPreimage[] = "Inverz kép";
constexpr static char enPressAKey[] = "Press a key";
constexpr static char frPressAKey[] = "Appuyez sur une touche";
constexpr static char nlPressAKey[] = "druk op een knop";
constexpr static char ptPressAKey[] = "Pressione uma tecla";
constexpr static char itPressAKey[] = "Premi un tasto";
constexpr static char dePressAKey[] = "drücke eine Taste";
constexpr static char esPressAKey[] = "presione una tecla";
constexpr static char huPressAKey[] = "Nyomj meg egy gombot";
constexpr static char enPressureDimension[] = "Pressure";
constexpr static char frPressureDimension[] = "Pression";
constexpr static char nlPressureDimension[] = "Druk";
constexpr static char ptPressureDimension[] = "Pressão";
constexpr static char itPressureDimension[] = "Pressione";
constexpr static char dePressureDimension[] = "Druck";
constexpr static char esPressureDimension[] = "Presión";
constexpr static char huPressureDimension[] = "Nyomás";
constexpr static char enPrimeFactorDecomposition[] = "Integer factorization";
constexpr static char frPrimeFactorDecomposition[] = "Décomposition en facteurs premiers";
constexpr static char nlPrimeFactorDecomposition[] = "Ontbinden in factoren";
constexpr static char ptPrimeFactorDecomposition[] = "Fatorização de inteiros";
constexpr static char itPrimeFactorDecomposition[] = "Scomposizione in fattori primi";
constexpr static char dePrimeFactorDecomposition[] = "Ganzzahlige Faktorisierung";
constexpr static char esPrimeFactorDecomposition[] = "Factorización de enteros";
constexpr static char huPrimeFactorDecomposition[] = "Egész szám tényezö";
constexpr static char enPrimeFactors[] = "Prime factors";
constexpr static char frPrimeFactors[] = "Facteurs premiers";
constexpr static char nlPrimeFactors[] = "Ontbinding";
constexpr static char ptPrimeFactors[] = "Fatorização";
constexpr static char itPrimeFactors[] = "Fattorizzazione";
constexpr static char dePrimeFactors[] = "Primfaktoren";
constexpr static char esPrimeFactors[] = "Factores primos";
constexpr static char huPrimeFactors[] = "Alapvetö tényezök";
constexpr static char enProbaApp[] = "Probability";
constexpr static char frProbaApp[] = "Probabilités";
constexpr static char nlProbaApp[] = "Kansrekenen";
constexpr static char ptProbaApp[] = "Probabilidades";
constexpr static char itProbaApp[] = "Probabilità";
constexpr static char deProbaApp[] = "Wahrsch.";
constexpr static char esProbaApp[] = "Probabilidad";
constexpr static char huProbaApp[] = "Valószínüség";
constexpr static char enProbaAppCapital[] = "PROBABILITY";
constexpr static char frProbaAppCapital[] = "PROBABILITES";
constexpr static char nlProbaAppCapital[] = "KANSREKENEN";
constexpr static char ptProbaAppCapital[] = "PROBABILIDADES";
constexpr static char itProbaAppCapital[] = "PROBABILITA";
constexpr static char deProbaAppCapital[] = "WAHRSCHEINLICHKEIT";
constexpr static char esProbaAppCapital[] = "PROBABILIDAD";
constexpr static char huProbaAppCapital[] = "VALOSZINUSEG";
constexpr static char enProbability[] = "Probability";
constexpr static char frProbability[] = "Probabilités";
constexpr static char nlProbability[] = "Kansverdelingen";
constexpr static char ptProbability[] = "Probabilidade";
constexpr static char itProbability[] = "Probabilità";
constexpr static char deProbability[] = "Wahrscheinlichkeit";
constexpr static char esProbability[] = "Probabilidad";
constexpr static char huProbability[] = "Valószínüség";
constexpr static char enProduct[] = "Product";
constexpr static char frProduct[] = "Produit";
constexpr static char nlProduct[] = "Product";
constexpr static char ptProduct[] = "Produto";
constexpr static char itProduct[] = "Prodotto";
constexpr static char deProduct[] = "Produkt";
constexpr static char esProduct[] = "Productorio";
constexpr static char huProduct[] = "Termék";
constexpr static char enProportional[] = "Proportional";
constexpr static char frProportional[] = "Proportionnelle";
constexpr static char nlProportional[] = "Proportioneel";
constexpr static char ptProportional[] = "Proporcional";
constexpr static char itProportional[] = "Proporzionale";
constexpr static char deProportional[] = "Proportional";
constexpr static char esProportional[] = "Proporcional";
constexpr static char huProportional[] = "Altalános";
constexpr static char enProtonMassTag[] = "Proton";
constexpr static char frProtonMassTag[] = "Proton";
constexpr static char nlProtonMassTag[] = "Proton";
constexpr static char ptProtonMassTag[] = "Próton";
constexpr static char itProtonMassTag[] = "Protone";
constexpr static char deProtonMassTag[] = "Protons";
constexpr static char esProtonMassTag[] = "Protón";
constexpr static char huProtonMassTag[] = "Proton";
constexpr static char enPython1J[] = "Imaginary i";
constexpr static char frPython1J[] = "i complexe";
constexpr static char nlPython1J[] = "Imaginaire i";
constexpr static char ptPython1J[] = "i Complexo";
constexpr static char itPython1J[] = "Unità immaginaria";
constexpr static char dePython1J[] = "Imaginäres i";
constexpr static char esPython1J[] = "Imaginary i";
constexpr static char huPython1J[] = "Képzeletbeli i";
constexpr static char enPythonAbs[] = "Absolute value/Magnitude";
constexpr static char frPythonAbs[] = "Valeur absolue/Module";
constexpr static char nlPythonAbs[] = "Absolute waarde";
constexpr static char ptPythonAbs[] = "Valor absoluto/módulo";
constexpr static char itPythonAbs[] = "Valore assoluto/Modulo";
constexpr static char dePythonAbs[] = "Absoluter Wert/Absolute Größe";
constexpr static char esPythonAbs[] = "Absolute value/Magnitude";
constexpr static char huPythonAbs[] = "Abszolút érték/nagyság";
constexpr static char enPythonAcos[] = "Arc cosine";
constexpr static char frPythonAcos[] = "Arc cosinus";
constexpr static char nlPythonAcos[] = "Arccosinus";
constexpr static char ptPythonAcos[] = "Arco cosseno";
constexpr static char itPythonAcos[] = "Coseno d'arco";
constexpr static char dePythonAcos[] = "Bogenkosinus";
constexpr static char esPythonAcos[] = "Arc cosine";
constexpr static char huPythonAcos[] = "Iv (arc) koszinusz";
constexpr static char enPythonAcosh[] = "Arc hyperbolic cosine";
constexpr static char frPythonAcosh[] = "Arc cosinus hyperbolique";
constexpr static char nlPythonAcosh[] = "Arccosinus hyperbolicus";
constexpr static char ptPythonAcosh[] = "Arco cosseno hiperbólico";
constexpr static char itPythonAcosh[] = "Coseno iperbolico inverso";
constexpr static char dePythonAcosh[] = "Bogenhyperbolischer Kosinus";
constexpr static char esPythonAcosh[] = "Arc hyperbolic cosine";
constexpr static char huPythonAcosh[] = "Hiperbolikus arc koszinusz";
constexpr static char enPythonAmpersand[] = "Bitwise and";
constexpr static char frPythonAmpersand[] = "Et logique";
constexpr static char nlPythonAmpersand[] = "Bitsgewijze en";
constexpr static char ptPythonAmpersand[] = "Operador binário and";
constexpr static char itPythonAmpersand[] = "Congiunzione";
constexpr static char dePythonAmpersand[] = "Bitweises und";
constexpr static char esPythonAmpersand[] = "Bitwise and";
constexpr static char huPythonAmpersand[] = "Logikus és";
constexpr static char enPythonAppend[] = "Add x to the end of the list";
constexpr static char frPythonAppend[] = "Insère x à la fin de la liste";
constexpr static char nlPythonAppend[] = "Voeg x toe aan het eind van je lijst";
constexpr static char ptPythonAppend[] = "Adicionar x no fim da lista";
constexpr static char itPythonAppend[] = "Inserisce x alla fine della lista";
constexpr static char dePythonAppend[] = "x an das Ende der Liste anfügen";
constexpr static char esPythonAppend[] = "Add x to the end of the list";
constexpr static char huPythonAppend[] = "Lista végére hozzáadni x-et";
constexpr static char enPythonArrow[] = "Arrow from (x,y) to (x+dx,y+dy)";
constexpr static char frPythonArrow[] = "Flèche de (x,y) à (x+dx,y+dy)";
constexpr static char nlPythonArrow[] = "Pijl van (x,y) naar (x+dx,y+dy)";
constexpr static char ptPythonArrow[] = "Seta de (x,y) para (x+dx,y+dy)";
constexpr static char itPythonArrow[] = "Freccia da (x,y) a (x+dx,y+dy)";
constexpr static char dePythonArrow[] = "Pfeil von (x,y) nach (x+dx,y+dy)";
constexpr static char esPythonArrow[] = "Arrow from (x,y) to (x+dx,y+dy)";
constexpr static char huPythonArrow[] = "(x,y) nyíla (x+dx,y+dy) nyílához";
constexpr static char enPythonAsin[] = "Arc sine";
constexpr static char frPythonAsin[] = "Arc sinus";
constexpr static char nlPythonAsin[] = "Arcsinus";
constexpr static char ptPythonAsin[] = "Arco seno";
constexpr static char itPythonAsin[] = "Arco sinusoidale";
constexpr static char dePythonAsin[] = "Sinusbogen";
constexpr static char esPythonAsin[] = "Arc sine";
constexpr static char huPythonAsin[] = "Iv (arc) szinusz";
constexpr static char enPythonAsinh[] = "Arc hyperbolic sine";
constexpr static char frPythonAsinh[] = "Arc sinus hyperbolique";
constexpr static char nlPythonAsinh[] = "Arcsinus hyperbolicus";
constexpr static char ptPythonAsinh[] = "Arco seno hiperbólico";
constexpr static char itPythonAsinh[] = "Arco sinusoidale iperbolico";
constexpr static char dePythonAsinh[] = "Kreisbogen hyperbolischer Sinus";
constexpr static char esPythonAsinh[] = "Arc hyperbolic sine";
constexpr static char huPythonAsinh[] = "Hiperbolikus ív (arc) szinusz";
constexpr static char enPythonAtan[] = "Arc tangent";
constexpr static char frPythonAtan[] = "Arc tangente";
constexpr static char nlPythonAtan[] = "Arctangens";
constexpr static char ptPythonAtan[] = "Arco tangente";
constexpr static char itPythonAtan[] = "Arco tangente";
constexpr static char dePythonAtan[] = "Arkustangens";
constexpr static char esPythonAtan[] = "Arc tangent";
constexpr static char huPythonAtan[] = "Iv (arc) érintö (tan)";
constexpr static char enPythonAtan2[] = "Return atan(y/x)";
constexpr static char frPythonAtan2[] = "Calcul de atan(y/x)";
constexpr static char nlPythonAtan2[] = "Geeft atan(y/x)";
constexpr static char ptPythonAtan2[] = "Cálculo de atan(y/x)";
constexpr static char itPythonAtan2[] = "Calcolo di atan(y/x)";
constexpr static char dePythonAtan2[] = "Rückgabe atan(y/x)";
constexpr static char esPythonAtan2[] = "Return atan(y/x)";
constexpr static char huPythonAtan2[] = "atan(y/x) sámolása";
constexpr static char enPythonAtanh[] = "Arc hyperbolic tangent";
constexpr static char frPythonAtanh[] = "Arc tangente hyperbolique";
constexpr static char nlPythonAtanh[] = "Arctangens hyperbolicus";
constexpr static char ptPythonAtanh[] = "Arco tangente hiperbólica";
constexpr static char itPythonAtanh[] = "Arco tangente iperbolico";
constexpr static char dePythonAtanh[] = "Hyperbeltangens";
constexpr static char esPythonAtanh[] = "Arc hyperbolic tangent";
constexpr static char huPythonAtanh[] = "Hiperbolikus ív (arc) érintö (atan)";
constexpr static char enPythonAxis[] = "Set axes to (xmin,xmax,ymin,ymax)";
constexpr static char frPythonAxis[] = "Met les axes (xmin,xmax,ymin,ymax)";
constexpr static char nlPythonAxis[] = "Stel de assen in (xmin,xmax,ymin,ymax)";
constexpr static char ptPythonAxis[] = "Definir eixos (xmin,xmax,ymin,ymax)";
constexpr static char itPythonAxis[] = "Imposta assi (xmin,xmax,ymin,ymax)";
constexpr static char dePythonAxis[] = "Achsen auf (xmin,xmax,ymin,ymax)";
constexpr static char esPythonAxis[] = "Set axes to (xmin,xmax,ymin,ymax)";
constexpr static char huPythonAxis[] = "Tengelyeket (xmin,xmax,ymin,ymax)-ra állitani";
constexpr static char enPythonBar[] = "Draw a bar plot with x values";
constexpr static char frPythonBar[] = "Diagramme en barres de la liste x";
constexpr static char nlPythonBar[] = "Teken staafdiagram met x-waarden";
constexpr static char ptPythonBar[] = "Gráfico de barras com valores de x";
constexpr static char itPythonBar[] = "Grafico a barre con x valori";
constexpr static char dePythonBar[] = "Balkendiagramm mit x-Werten";
constexpr static char esPythonBar[] = "Draw a bar plot with x values";
constexpr static char huPythonBar[] = "Az x lista oszlopdiagramja";
constexpr static char enPythonBattery[] = "Return battery voltage";
constexpr static char frPythonBattery[] = "Renvoie le voltage de la batterie";
constexpr static char nlPythonBattery[] = "Return batterijspanning";
constexpr static char ptPythonBattery[] = "Retornar a voltagem da bateria";
constexpr static char itPythonBattery[] = "Restituisce la tensione della batteria";
constexpr static char dePythonBattery[] = "Rückgabe der Batteriespannung";
constexpr static char esPythonBattery[] = "Rückgabe der Batteriespannung";
constexpr static char huPythonBattery[] = "Az akkumulátor feszültségének visszaadása";
constexpr static char enPythonBatteryIscharging[] = "Return if battery is charging";
constexpr static char frPythonBatteryIscharging[] = "Chargement en cours";
constexpr static char nlPythonBatteryIscharging[] = "Keer terug als de batterij wordt opgeladen";
constexpr static char ptPythonBatteryIscharging[] = "Retorne se a bateria estiver carregando";
constexpr static char itPythonBatteryIscharging[] = "Restituisce se la batteria è in carica";
constexpr static char dePythonBatteryIscharging[] = "Gibt zurück, ob die Batterie geladen wird";
constexpr static char esPythonBatteryIscharging[] = "Gibt zurück, ob die Batterie geladen wird";
constexpr static char huPythonBatteryIscharging[] = "Visszaadja, ha az akkumulátor töltődik";
constexpr static char enPythonBatteryLevel[] = "Return battery level";
constexpr static char frPythonBatteryLevel[] = "Renvoie le niveau de la batterie";
constexpr static char nlPythonBatteryLevel[] = "Batterijniveau teruggeven";
constexpr static char ptPythonBatteryLevel[] = "Retornar nível de bateria";
constexpr static char itPythonBatteryLevel[] = "Restituisce il livello della batteria";
constexpr static char dePythonBatteryLevel[] = "Gibt den Batteriestand zurück";
constexpr static char esPythonBatteryLevel[] = "Gibt den Batteriestand zurück";
constexpr static char huPythonBatteryLevel[] = "Az akkumulátor töltöttségi szintjének visszaadása";
constexpr static char enPythonBin[] = "Convert integer to binary";
constexpr static char frPythonBin[] = "Conversion d'un entier en binaire";
constexpr static char nlPythonBin[] = "Zet integer om in een binair getal";
constexpr static char ptPythonBin[] = "Converter número inteiro em binário";
constexpr static char itPythonBin[] = "Converte un intero in binario";
constexpr static char dePythonBin[] = "Ganzzahl in Binärwert umwandeln";
constexpr static char esPythonBin[] = "Convert integer to binary";
constexpr static char huPythonBin[] = "Egész szám konvertálása binárisra";
constexpr static char enPythonCeil[] = "Ceiling";
constexpr static char frPythonCeil[] = "Plafond";
constexpr static char nlPythonCeil[] = "Plafond";
constexpr static char ptPythonCeil[] = "Teto";
constexpr static char itPythonCeil[] = "Parte intera superiore";
constexpr static char dePythonCeil[] = "Aufrunden";
constexpr static char esPythonCeil[] = "Ceiling";
constexpr static char huPythonCeil[] = "Mennyezet";
constexpr static char enPythonChoice[] = "Random number in the list";
constexpr static char frPythonChoice[] = "Nombre aléatoire dans la liste";
constexpr static char nlPythonChoice[] = "Geeft willek. getal van de lijst";
constexpr static char ptPythonChoice[] = "Número aleatório na lista";
constexpr static char itPythonChoice[] = "Numero aleatorio nella lista";
constexpr static char dePythonChoice[] = "Zufällige Zahl in der Liste";
constexpr static char esPythonChoice[] = "Random number in the list";
constexpr static char huPythonChoice[] = "Véletlenszerü szám a listában";
constexpr static char enPythonClear[] = "Empty the list";
constexpr static char frPythonClear[] = "Vide la liste";
constexpr static char nlPythonClear[] = "Lijst leegmaken";
constexpr static char ptPythonClear[] = "Esvaziar a lista";
constexpr static char itPythonClear[] = "Svuota la lista";
constexpr static char dePythonClear[] = "Liste leeren";
constexpr static char esPythonClear[] = "Empty the list";
constexpr static char huPythonClear[] = "A lista ürítése";
constexpr static char enPythonCmathFunction[] = "cmath module function prefix";
constexpr static char frPythonCmathFunction[] = "Préfixe fonction du module cmath";
constexpr static char nlPythonCmathFunction[] = "cmath module voorvoegsel";
constexpr static char ptPythonCmathFunction[] = "Prefixo da função do módulo cmath";
constexpr static char itPythonCmathFunction[] = "Funz. prefissata modulo cmath";
constexpr static char dePythonCmathFunction[] = "cmath-Modul-Funktionspräfix";
constexpr static char esPythonCmathFunction[] = "cmath module function prefix";
constexpr static char huPythonCmathFunction[] = "cmath modul funkció elötag";
constexpr static char enPythonColor[] = "Define a rgb color";
constexpr static char frPythonColor[] = "Définit une couleur rvb";
constexpr static char nlPythonColor[] = "Definieer een rgb kleur";
constexpr static char ptPythonColor[] = "Define uma cor rgb";
constexpr static char itPythonColor[] = "Definisci un colore rvb";
constexpr static char dePythonColor[] = "Eine RGB-Farbe definieren";
constexpr static char esPythonColor[] = "Define a rgb color";
constexpr static char huPythonColor[] = "Rgb (pzk) szín allítása";
constexpr static char enPythonColorBlack[] = "Black color";
constexpr static char frPythonColorBlack[] = "Couleur noire";
constexpr static char nlPythonColorBlack[] = "Zwarte kleur";
constexpr static char ptPythonColorBlack[] = "Cor preta";
constexpr static char itPythonColorBlack[] = "Colore nero";
constexpr static char dePythonColorBlack[] = "Farbe Schwarz";
constexpr static char esPythonColorBlack[] = "Black color";
constexpr static char huPythonColorBlack[] = "Fekete szín";
constexpr static char enPythonColorBlue[] = "Blue color";
constexpr static char frPythonColorBlue[] = "Couleur bleue";
constexpr static char nlPythonColorBlue[] = "Blauwe kleur";
constexpr static char ptPythonColorBlue[] = "Cor azul";
constexpr static char itPythonColorBlue[] = "Colore blu";
constexpr static char dePythonColorBlue[] = "Farbe Blau";
constexpr static char esPythonColorBlue[] = "Blue color";
constexpr static char huPythonColorBlue[] = "Kék szín";
constexpr static char enPythonColorBrown[] = "Brown color";
constexpr static char frPythonColorBrown[] = "Couleur marron";
constexpr static char nlPythonColorBrown[] = "Bruine kleur";
constexpr static char ptPythonColorBrown[] = "Cor castanha";
constexpr static char itPythonColorBrown[] = "Colore marrone";
constexpr static char dePythonColorBrown[] = "Farbe Braun";
constexpr static char esPythonColorBrown[] = "Brown color";
constexpr static char huPythonColorBrown[] = "Barna szín";
constexpr static char enPythonColorGray[] = "Gray color";
constexpr static char frPythonColorGray[] = "Couleur grise";
constexpr static char nlPythonColorGray[] = "Grijze kleur";
constexpr static char ptPythonColorGray[] = "Cor cinzenta";
constexpr static char itPythonColorGray[] = "Colore grigio";
constexpr static char dePythonColorGray[] = "Farbe Grau";
constexpr static char esPythonColorGray[] = "Gray color";
constexpr static char huPythonColorGray[] = "Szürke szín";
constexpr static char enPythonColorGreen[] = "Green color";
constexpr static char frPythonColorGreen[] = "Couleur verte";
constexpr static char nlPythonColorGreen[] = "Groene kleur";
constexpr static char ptPythonColorGreen[] = "Cor verde";
constexpr static char itPythonColorGreen[] = "Colore verde";
constexpr static char dePythonColorGreen[] = "Farbe Grün";
constexpr static char esPythonColorGreen[] = "Green color";
constexpr static char huPythonColorGreen[] = "Zöld szín";
constexpr static char enPythonColorOrange[] = "Orange color";
constexpr static char frPythonColorOrange[] = "Couleur orange";
constexpr static char nlPythonColorOrange[] = "Oranje kleur";
constexpr static char ptPythonColorOrange[] = "Cor laranja";
constexpr static char itPythonColorOrange[] = "Colore arancione";
constexpr static char dePythonColorOrange[] = "Farbe Orange";
constexpr static char esPythonColorOrange[] = "Orange color";
constexpr static char huPythonColorOrange[] = "Narancssárga szín";
constexpr static char enPythonColorPink[] = "Pink color";
constexpr static char frPythonColorPink[] = "Couleur rose";
constexpr static char nlPythonColorPink[] = "Roze kleur";
constexpr static char ptPythonColorPink[] = "Cor rosa";
constexpr static char itPythonColorPink[] = "Colore rosa";
constexpr static char dePythonColorPink[] = "Farbe Rosa";
constexpr static char esPythonColorPink[] = "Pink color";
constexpr static char huPythonColorPink[] = "Rózsaszín szín";
constexpr static char enPythonColorPurple[] = "Purple color";
constexpr static char frPythonColorPurple[] = "Couleur violette";
constexpr static char nlPythonColorPurple[] = "Paarse kleur";
constexpr static char ptPythonColorPurple[] = "Cor roxa";
constexpr static char itPythonColorPurple[] = "Colore viola";
constexpr static char dePythonColorPurple[] = "Farbe Violett";
constexpr static char esPythonColorPurple[] = "Purple color";
constexpr static char huPythonColorPurple[] = "Lila szín";
constexpr static char enPythonColorRed[] = "Red color";
constexpr static char frPythonColorRed[] = "Couleur rouge";
constexpr static char nlPythonColorRed[] = "Rode kleur";
constexpr static char ptPythonColorRed[] = "Cor vermelha";
constexpr static char itPythonColorRed[] = "Colore rosso";
constexpr static char dePythonColorRed[] = "Farbe Rot";
constexpr static char esPythonColorRed[] = "Red color";
constexpr static char huPythonColorRed[] = "Piros szín";
constexpr static char enPythonColorWhite[] = "White color";
constexpr static char frPythonColorWhite[] = "Couleur blanche";
constexpr static char nlPythonColorWhite[] = "Witte kleur";
constexpr static char ptPythonColorWhite[] = "Cor branca";
constexpr static char itPythonColorWhite[] = "Colore bianco";
constexpr static char dePythonColorWhite[] = "Farbe Weiß";
constexpr static char esPythonColorWhite[] = "White color";
constexpr static char huPythonColorWhite[] = "Fehér szín";
constexpr static char enPythonColorYellow[] = "Yellow color";
constexpr static char frPythonColorYellow[] = "Couleur jaune";
constexpr static char nlPythonColorYellow[] = "Gele kleur";
constexpr static char ptPythonColorYellow[] = "Cor amarela";
constexpr static char itPythonColorYellow[] = "Colore giallo";
constexpr static char dePythonColorYellow[] = "Farbe Gelb";
constexpr static char esPythonColorYellow[] = "Yellow color";
constexpr static char huPythonColorYellow[] = "Sárga szín";
constexpr static char enPythonComplex[] = "Return a+ib";
constexpr static char frPythonComplex[] = "Renvoie a+ib";
constexpr static char nlPythonComplex[] = "Geeft a+ib";
constexpr static char ptPythonComplex[] = "Devolve a+ib";
constexpr static char itPythonComplex[] = "Restituisce a+ib";
constexpr static char dePythonComplex[] = "Gib a+ib zurück";
constexpr static char esPythonComplex[] = "Return a+ib";
constexpr static char huPythonComplex[] = "A + ib visszaadása";
constexpr static char enPythonCopySign[] = "Return x with the sign of y";
constexpr static char frPythonCopySign[] = "Renvoie x avec le signe de y";
constexpr static char nlPythonCopySign[] = "Geeft x met het teken van y";
constexpr static char ptPythonCopySign[] = "Devolve x com o sinal de y";
constexpr static char itPythonCopySign[] = "Restituisce x con segno di y";
constexpr static char dePythonCopySign[] = "Gib x mit Vorzeichen von y zurück";
constexpr static char esPythonCopySign[] = "Return x with the sign of y";
constexpr static char huPythonCopySign[] = "X visszaadása y jelével";
constexpr static char enPythonCos[] = "Cosine";
constexpr static char frPythonCos[] = "Cosinus";
constexpr static char nlPythonCos[] = "Cosinus";
constexpr static char ptPythonCos[] = "Cosseno";
constexpr static char itPythonCos[] = "Coseno";
constexpr static char dePythonCos[] = "Kosinus";
constexpr static char esPythonCos[] = "Cosine";
constexpr static char huPythonCos[] = "Koszinusz";
constexpr static char enPythonCosh[] = "Hyperbolic cosine";
constexpr static char frPythonCosh[] = "Cosinus hyperbolique";
constexpr static char nlPythonCosh[] = "Cosinus hyperbolicus";
constexpr static char ptPythonCosh[] = "Cosseno hiperbólico";
constexpr static char itPythonCosh[] = "Coseno iperbolico";
constexpr static char dePythonCosh[] = "Hyperbolischer Kosinus";
constexpr static char esPythonCosh[] = "Hyperbolic cosine";
constexpr static char huPythonCosh[] = "Hiperbolikus koszinusz";
constexpr static char enPythonCount[] = "Count the occurrences of x";
constexpr static char frPythonCount[] = "Compte les occurrences de x";
constexpr static char nlPythonCount[] = "Tel voorkomen van x";
constexpr static char ptPythonCount[] = "Contar as ocorrências de x";
constexpr static char itPythonCount[] = "Conta le ricorrenze di x";
constexpr static char dePythonCount[] = "Zählt die Vorkommen von x";
constexpr static char esPythonCount[] = "Count the occurrences of x";
constexpr static char huPythonCount[] = "Számolja az x elöfordulását";
constexpr static char enPythonDegrees[] = "Convert x from radians to degrees";
constexpr static char frPythonDegrees[] = "Conversion de radians en degrés";
constexpr static char nlPythonDegrees[] = "Zet x om van radialen naar graden";
constexpr static char ptPythonDegrees[] = "Converter x de radianos para graus";
constexpr static char itPythonDegrees[] = "Conversione di radianti in gradi";
constexpr static char dePythonDegrees[] = "x von Bogenmaß in Grad umrechnen";
constexpr static char esPythonDegrees[] = "Convert x from radians to degrees";
constexpr static char huPythonDegrees[] = "x konvertálása radiánokrol fokokra";
constexpr static char enPythonDivMod[] = "Quotient and remainder";
constexpr static char frPythonDivMod[] = "Quotient et reste";
constexpr static char nlPythonDivMod[] = "Quotiënt en rest";
constexpr static char ptPythonDivMod[] = "Quociente e resto";
constexpr static char itPythonDivMod[] = "Quoziente e resto";
constexpr static char dePythonDivMod[] = "Quotient und Rest";
constexpr static char esPythonDivMod[] = "Quotient and remainder";
constexpr static char huPythonDivMod[] = "Hányados és maradék";
constexpr static char enPythonDrawCircle[] = "Draw a circle";
constexpr static char frPythonDrawCircle[] = "Trace un cercle";
constexpr static char nlPythonDrawCircle[] = "Teken een cirkel";
constexpr static char ptPythonDrawCircle[] = "Desenha um círculo";
constexpr static char itPythonDrawCircle[] = "Disegnare un cerchio";
constexpr static char dePythonDrawCircle[] = "Zeichne einen Kreis";
constexpr static char esPythonDrawCircle[] = "Draw a circle";
constexpr static char huPythonDrawCircle[] = "Rajzolj egy kört";
constexpr static char enPythonDrawLine[] = "Draw a line";
constexpr static char frPythonDrawLine[] = "Trace une ligne";
constexpr static char nlPythonDrawLine[] = "Teken een lijn";
constexpr static char ptPythonDrawLine[] = "Desenhe uma linha";
constexpr static char itPythonDrawLine[] = "Disegna una linea";
constexpr static char dePythonDrawLine[] = "Eine Linie zeichnen";
constexpr static char esPythonDrawLine[] = "Draw a line";
constexpr static char huPythonDrawLine[] = "Húzzon egy vonalat ";
constexpr static char enPythonDrawString[] = "Display a text from pixel (x,y)";
constexpr static char frPythonDrawString[] = "Affiche un texte au pixel (x,y)";
constexpr static char nlPythonDrawString[] = "Geef een tekst weer van pixel (x,y)";
constexpr static char ptPythonDrawString[] = "Mostrar o texto do pixel (x,y)";
constexpr static char itPythonDrawString[] = "Visualizza il testo dal pixel x,y";
constexpr static char dePythonDrawString[] = "Text bei Pixel (x,y) darstellen";
constexpr static char esPythonDrawString[] = "Display a text from pixel (x,y)";
constexpr static char huPythonDrawString[] = "Szöveg megjelenítése (x, y)-en";
constexpr static char enPythonErf[] = "Error function";
constexpr static char frPythonErf[] = "Fonction d'erreur";
constexpr static char nlPythonErf[] = "Error functie";
constexpr static char ptPythonErf[] = "Função erro";
constexpr static char itPythonErf[] = "Funzione d'errore";
constexpr static char dePythonErf[] = "Fehlerfunktion";
constexpr static char esPythonErf[] = "Error function";
constexpr static char huPythonErf[] = "Hiba funkció";
constexpr static char enPythonErfc[] = "Complementary error function";
constexpr static char frPythonErfc[] = "Fonction d'erreur complémentaire";
constexpr static char nlPythonErfc[] = "Complementaire error functie";
constexpr static char ptPythonErfc[] = "Função erro complementar";
constexpr static char itPythonErfc[] = "Funzione d'errore complementare";
constexpr static char dePythonErfc[] = "Komplementäre Fehlerfunktion";
constexpr static char esPythonErfc[] = "Complementary error function";
constexpr static char huPythonErfc[] = "Kiegészítö hiba funkció";
constexpr static char enPythonEval[] = "Return the evaluated expression";
constexpr static char frPythonEval[] = "Evalue l'expression en argument ";
constexpr static char nlPythonEval[] = "Geef de geëvalueerde uitdrukking";
constexpr static char ptPythonEval[] = "Devolve a expressão avaliada";
constexpr static char itPythonEval[] = "Valuta l'espressione nell'argomento ";
constexpr static char dePythonEval[] = "Rückgabe ausgewerteter Ausdruck";
constexpr static char esPythonEval[] = "Return the evaluated expression";
constexpr static char huPythonEval[] = "Visszaadja az értékelt kifejezést";
constexpr static char enPythonExp[] = "Exponential function";
constexpr static char frPythonExp[] = "Fonction exponentielle";
constexpr static char nlPythonExp[] = "Exponentiële functie";
constexpr static char ptPythonExp[] = "Função exponencial";
constexpr static char itPythonExp[] = "Funzione esponenziale";
constexpr static char dePythonExp[] = "Exponentialfunktion";
constexpr static char esPythonExp[] = "Exponential function";
constexpr static char huPythonExp[] = "Exponenciális függvény";
constexpr static char enPythonExpm1[] = "Compute exp(x)-1";
constexpr static char frPythonExpm1[] = "Calcul de exp(x)-1";
constexpr static char nlPythonExpm1[] = "Bereken exp(x)-1";
constexpr static char ptPythonExpm1[] = "Calcular exp(x)-1";
constexpr static char itPythonExpm1[] = "Calcola exp(x)-1";
constexpr static char dePythonExpm1[] = "Berechne exp(x)-1";
constexpr static char esPythonExpm1[] = "Compute exp(x)-1";
constexpr static char huPythonExpm1[] = "exp(x)-1 sámitása";
constexpr static char enPythonFabs[] = "Absolute value";
constexpr static char frPythonFabs[] = "Valeur absolue";
constexpr static char nlPythonFabs[] = "Absolute waarde";
constexpr static char ptPythonFabs[] = "Valor absoluto";
constexpr static char itPythonFabs[] = "Valore assoluto";
constexpr static char dePythonFabs[] = "Absoluter Wert";
constexpr static char esPythonFabs[] = "Absolute value";
constexpr static char huPythonFabs[] = "Abszolút érték";
constexpr static char enPythonFactorial[] = "Factorial of x";
constexpr static char frPythonFactorial[] = "Factorielle de x";
constexpr static char nlPythonFactorial[] = "faculteit van x";
constexpr static char ptPythonFactorial[] = "Fatorial de x";
constexpr static char itPythonFactorial[] = "Fattoriale di x";
constexpr static char dePythonFactorial[] = "Fakultät von x";
constexpr static char esPythonFactorial[] = "factorial de x";
constexpr static char huPythonFactorial[] = "x faktorál";
constexpr static char enPythonFileClose[] = "Closes a file";
constexpr static char frPythonFileClose[] = "Ferme un fichier";
constexpr static char nlPythonFileClose[] = "Closes a file";
constexpr static char ptPythonFileClose[] = "Closes a file";
constexpr static char itPythonFileClose[] = "Closes a file";
constexpr static char dePythonFileClose[] = "Schließt eine Datei";
constexpr static char esPythonFileClose[] = "Closes a file";
constexpr static char huPythonFileClose[] = "Bezárni egy fájlt";
constexpr static char enPythonFileClosed[] = "True if file was closed";
constexpr static char frPythonFileClosed[] = "True si le fichier a été fermé";
constexpr static char nlPythonFileClosed[] = "True if file was closed";
constexpr static char ptPythonFileClosed[] = "True if file was closed";
constexpr static char itPythonFileClosed[] = "True if file was closed";
constexpr static char dePythonFileClosed[] = "Wahr, wenn Datei geschlossen wurde";
constexpr static char esPythonFileClosed[] = "True if file was closed";
constexpr static char huPythonFileClosed[] = "True ha a fájl bezárva";
constexpr static char enPythonFileMode[] = "Contains file's open mode";
constexpr static char frPythonFileMode[] = "Mode d'ouverture du fichier";
constexpr static char nlPythonFileMode[] = "Contains file's open mode";
constexpr static char ptPythonFileMode[] = "Contains file's open mode";
constexpr static char itPythonFileMode[] = "Contains file's open mode";
constexpr static char dePythonFileMode[] = "Enthält den Offnungsmodus der Datei";
constexpr static char esPythonFileMode[] = "Contains file's open mode";
constexpr static char huPythonFileMode[] = "A fájl nyitott módja";
constexpr static char enPythonFileName[] = "Contains file's name";
constexpr static char frPythonFileName[] = "Nom du fichier";
constexpr static char nlPythonFileName[] = "Contains file's name";
constexpr static char ptPythonFileName[] = "Contains file's name";
constexpr static char itPythonFileName[] = "Contains file's name";
constexpr static char dePythonFileName[] = "Enthält den Namen der Datei";
constexpr static char esPythonFileName[] = "Contains file's name";
constexpr static char huPythonFileName[] = "A fájl neve";
constexpr static char enPythonFileOpen[] = "Opens a file";
constexpr static char frPythonFileOpen[] = "Ouvre un fichier";
constexpr static char nlPythonFileOpen[] = "Opens a file";
constexpr static char ptPythonFileOpen[] = "Opens a file";
constexpr static char itPythonFileOpen[] = "Opens a file";
constexpr static char dePythonFileOpen[] = "Offnet eine Datei";
constexpr static char esPythonFileOpen[] = "Opens a file";
constexpr static char huPythonFileOpen[] = "Fájl megnyitása";
constexpr static char enPythonFileRead[] = "Read up to size bytes";
constexpr static char frPythonFileRead[] = "Lit jusqu'à size bytes";
constexpr static char nlPythonFileRead[] = "Read up to size bytes";
constexpr static char ptPythonFileRead[] = "Read up to size bytes";
constexpr static char itPythonFileRead[] = "Read up to size bytes";
constexpr static char dePythonFileRead[] = "Lesen bis zu einer Größe von Bytes";
constexpr static char esPythonFileRead[] = "Read up to size bytes";
constexpr static char huPythonFileRead[] = "Olvas 16 bájtig";
constexpr static char enPythonFileReadable[] = "Tells if read can be used on a file";
constexpr static char frPythonFileReadable[] = "Indique si read peut être utilisé";
constexpr static char nlPythonFileReadable[] = "Tells if read can be used on a file";
constexpr static char ptPythonFileReadable[] = "Tells if read can be used on a file";
constexpr static char itPythonFileReadable[] = "Tells if read can be used on a file";
constexpr static char dePythonFileReadable[] = "Kann Datei gelesen werden?";
constexpr static char esPythonFileReadable[] = "Tells if read can be used on a file";
constexpr static char huPythonFileReadable[] = "read-et lehete használni";
constexpr static char enPythonFileReadline[] = "Reads a line or up to size bytes";
constexpr static char frPythonFileReadline[] = "Lit une ligne ou jusqu'à size bytes";
constexpr static char nlPythonFileReadline[] = "Reads a line or up to size bytes";
constexpr static char ptPythonFileReadline[] = "Reads a line or up to size bytes";
constexpr static char itPythonFileReadline[] = "Reads a line or up to size bytes";
constexpr static char dePythonFileReadline[] = "Liest Zeile oder Anzahl Bytes";
constexpr static char esPythonFileReadline[] = "Reads a line or up to size bytes";
constexpr static char huPythonFileReadline[] = "Olvas egy sort vagy 16 bájtig";
constexpr static char enPythonFileReadlines[] = "Reads a list of lines";
constexpr static char frPythonFileReadlines[] = "Lit une liste de lignes";
constexpr static char nlPythonFileReadlines[] = "Reads a list of lines";
constexpr static char ptPythonFileReadlines[] = "Reads a list of lines";
constexpr static char itPythonFileReadlines[] = "Reads a list of lines";
constexpr static char dePythonFileReadlines[] = "Liest eine Liste von Zeilen";
constexpr static char esPythonFileReadlines[] = "Reads a list of lines";
constexpr static char huPythonFileReadlines[] = "Olvas több sort";
constexpr static char enPythonFileSeek[] = "Move file's cursor";
constexpr static char frPythonFileSeek[] = "Déplace le curseur interne";
constexpr static char nlPythonFileSeek[] = "Move file's cursor";
constexpr static char ptPythonFileSeek[] = "Move file's cursor";
constexpr static char itPythonFileSeek[] = "Move file's cursor";
constexpr static char dePythonFileSeek[] = "Bewegt den Cursor einer Datei";
constexpr static char esPythonFileSeek[] = "Move file's internal cursor";
constexpr static char huPythonFileSeek[] = "A kurzort áthelyezni";
constexpr static char enPythonFileSeekable[] = "Tells if seek can be used on a file";
constexpr static char frPythonFileSeekable[] = "Indique si seek peut être utilisé";
constexpr static char nlPythonFileSeekable[] = "Tells if seek can be used on a file";
constexpr static char ptPythonFileSeekable[] = "Tells if seek can be used on a file";
constexpr static char itPythonFileSeekable[] = "Tells if seek can be used on a file";
constexpr static char dePythonFileSeekable[] = "Kann Datei durchsucht werden?";
constexpr static char esPythonFileSeekable[] = "Tells if seek can be used on a file";
constexpr static char huPythonFileSeekable[] = "Seek-et lehete használni";
constexpr static char enPythonFileTell[] = "Get file's cursor location";
constexpr static char frPythonFileTell[] = "Donne la posititon du curseur";
constexpr static char nlPythonFileTell[] = "Get file's cursor location";
constexpr static char ptPythonFileTell[] = "Get file's cursor location";
constexpr static char itPythonFileTell[] = "Get file's cursor location";
constexpr static char dePythonFileTell[] = "Position des Cursors ermitteln";
constexpr static char esPythonFileTell[] = "Get file's internal cursor location";
constexpr static char huPythonFileTell[] = "Visszaadja a kurzor helye";
constexpr static char enPythonFileTruncate[] = "Resize the file to size";
constexpr static char frPythonFileTruncate[] = "Redimensionne le fichier";
constexpr static char nlPythonFileTruncate[] = "Resize the file to size";
constexpr static char ptPythonFileTruncate[] = "Resize the file to size";
constexpr static char itPythonFileTruncate[] = "Resize the file to size";
constexpr static char dePythonFileTruncate[] = "Verkleinert die Datei auf Größe";
constexpr static char esPythonFileTruncate[] = "Resize the file to size";
constexpr static char huPythonFileTruncate[] = "A fájl átméretezése";
constexpr static char enPythonFileWritable[] = "Tells if write can be used on a file";
constexpr static char frPythonFileWritable[] = "Indique si write peut être utilisé";
constexpr static char nlPythonFileWritable[] = "Tells if write can be used on a file";
constexpr static char ptPythonFileWritable[] = "Tells if write can be used on a file";
constexpr static char itPythonFileWritable[] = "Tells if write can be used on a file";
constexpr static char dePythonFileWritable[] = "Kann Datei geschrieben werden?";
constexpr static char esPythonFileWritable[] = "Tells if write can be used on a file";
constexpr static char huPythonFileWritable[] = "write-ot lehete használni";
constexpr static char enPythonFileWrite[] = "Write b into file";
constexpr static char frPythonFileWrite[] = "Ecrit b dans le fichier";
constexpr static char nlPythonFileWrite[] = "Write b into file";
constexpr static char ptPythonFileWrite[] = "Write b into file";
constexpr static char itPythonFileWrite[] = "Write b into file";
constexpr static char dePythonFileWrite[] = "Schreibe b in Datei";
constexpr static char esPythonFileWrite[] = "Write b into file";
constexpr static char huPythonFileWrite[] = "b-t irjon a fájlba";
constexpr static char enPythonFileWritelines[] = "Writes a list of lines";
constexpr static char frPythonFileWritelines[] = "Ecrit une liste de lignes";
constexpr static char nlPythonFileWritelines[] = "Writes a list of lines";
constexpr static char ptPythonFileWritelines[] = "Writes a list of lines";
constexpr static char itPythonFileWritelines[] = "Writes a list of lines";
constexpr static char dePythonFileWritelines[] = "Schreibt eine Liste von Zeilen";
constexpr static char esPythonFileWritelines[] = "Writes a list of lines";
constexpr static char huPythonFileWritelines[] = "Irjon több sort";
constexpr static char enPythonFillCircle[] = "Fill a circle";
constexpr static char frPythonFillCircle[] = "Remplit un cercle";
constexpr static char nlPythonFillCircle[] = "Vul een cirkel";
constexpr static char ptPythonFillCircle[] = "Preencher um círculo";
constexpr static char itPythonFillCircle[] = "Riempire un cerchio";
constexpr static char dePythonFillCircle[] = "Füllt einen Kreis";
constexpr static char esPythonFillCircle[] = "Fill a circle";
constexpr static char huPythonFillCircle[] = "Kitölti a kört";
constexpr static char enPythonFillPolygon[] = "Fill a polygon";
constexpr static char frPythonFillPolygon[] = "Remplit un polygone";
constexpr static char nlPythonFillPolygon[] = "Vul een veelhoek";
constexpr static char ptPythonFillPolygon[] = "Preencher um polígono";
constexpr static char itPythonFillPolygon[] = "Riempire un poligono";
constexpr static char dePythonFillPolygon[] = "Füllt ein Polygon";
constexpr static char esPythonFillPolygon[] = "Fill a polygon";
constexpr static char huPythonFillPolygon[] = "Kitölti a poligont";
constexpr static char enPythonFillRect[] = "Fill a rectangle at pixel (x,y)";
constexpr static char frPythonFillRect[] = "Remplit un rectangle";
constexpr static char nlPythonFillRect[] = "Vul een rechthoek bij pixel (x,y)";
constexpr static char ptPythonFillRect[] = "Preencher um retângulo em (x,y)";
constexpr static char itPythonFillRect[] = "Riempie un rettangolo";
constexpr static char dePythonFillRect[] = "Gefülltes Rechteck bei Pixel (x,y)";
constexpr static char esPythonFillRect[] = "Fill a rectangle at pixel (x,y)";
constexpr static char huPythonFillRect[] = "Téglalap töltése";
constexpr static char enPythonFloat[] = "Convert x to a float";
constexpr static char frPythonFloat[] = "Conversion en flottant";
constexpr static char nlPythonFloat[] = "Zet x om in een float";
constexpr static char ptPythonFloat[] = "Converter x num flutuante";
constexpr static char itPythonFloat[] = "Conversione in flottanti";
constexpr static char dePythonFloat[] = "x in einen Fließkommawert umwandeln";
constexpr static char esPythonFloat[] = "Convert x to a float";
constexpr static char huPythonFloat[] = "Konvertálása tizedes számra";
constexpr static char enPythonFloor[] = "Floor";
constexpr static char frPythonFloor[] = "Partie entière";
constexpr static char nlPythonFloor[] = "Vloer";
constexpr static char ptPythonFloor[] = "Parte inteira";
constexpr static char itPythonFloor[] = "Parte intera";
constexpr static char dePythonFloor[] = "Abrunden";
constexpr static char esPythonFloor[] = "Floor";
constexpr static char huPythonFloor[] = "Egész része";
constexpr static char enPythonFmod[] = "a modulo b";
constexpr static char frPythonFmod[] = "a modulo b";
constexpr static char nlPythonFmod[] = "a modulo b";
constexpr static char ptPythonFmod[] = "a módulo b";
constexpr static char itPythonFmod[] = "a modulo b";
constexpr static char dePythonFmod[] = "a modulo b";
constexpr static char esPythonFmod[] = "a modulo b";
constexpr static char huPythonFmod[] = "a modulo b";
constexpr static char enPythonFrExp[] = "Mantissa and exponent of x: (m,e)";
constexpr static char frPythonFrExp[] = "Mantisse et exposant de x : (m,e)";
constexpr static char nlPythonFrExp[] = "Mantisse en exponent van x: (m,e)";
constexpr static char ptPythonFrExp[] = "Coeficiente e expoente de x: (m, e)";
constexpr static char itPythonFrExp[] = "Mantissa ed esponente di x : (m,e)";
constexpr static char dePythonFrExp[] = "Mantisse und Exponent von x: (m,e)";
constexpr static char esPythonFrExp[] = "Mantissa and exponent of x: (m,e)";
constexpr static char huPythonFrExp[] = "X mantissája és kiállítója";
constexpr static char enPythonGamma[] = "Gamma function";
constexpr static char frPythonGamma[] = "Fonction gamma";
constexpr static char nlPythonGamma[] = "Gammafunctie";
constexpr static char ptPythonGamma[] = "Função gama";
constexpr static char itPythonGamma[] = "Funzione gamma";
constexpr static char dePythonGamma[] = "Gamma-Funktion";
constexpr static char esPythonGamma[] = "Gamma function";
constexpr static char huPythonGamma[] = "Gamma funkció";
constexpr static char enPythonGetBrightness[] = "Get brightness level";
constexpr static char frPythonGetBrightness[] = "Obtenir le niveau de luminosité";
constexpr static char nlPythonGetBrightness[] = "Get brightness level";
constexpr static char ptPythonGetBrightness[] = "Obter nível de brilho";
constexpr static char itPythonGetBrightness[] = "Ottieni livello di luminosità";
constexpr static char dePythonGetBrightness[] = "Helligkeitsstufe abrufen";
constexpr static char esPythonGetBrightness[] = "Obtener nivel de brillo";
constexpr static char huPythonGetBrightness[] = "Get brightness level";
constexpr static char enPythonGetKeys[] = "Get keys pressed";
constexpr static char frPythonGetKeys[] = "Obtenir les touches pressées";
constexpr static char nlPythonGetKeys[] = "Get toetsen ingedrukt";
constexpr static char ptPythonGetKeys[] = "Obter teclas pressionadas";
constexpr static char itPythonGetKeys[] = "Premere i tasti";
constexpr static char dePythonGetKeys[] = "Gedrückte Tasten erhalten";
constexpr static char esPythonGetKeys[] = "Obtener teclas presionadas";
constexpr static char huPythonGetKeys[] = "Billentyűk lenyomva";
constexpr static char enPythonGetPalette[] = "Get theme palette";
constexpr static char frPythonGetPalette[] = "Obtient la palette du thème";
constexpr static char nlPythonGetPalette[] = "Thema palet krijgen";
constexpr static char ptPythonGetPalette[] = "Obter paleta temática";
constexpr static char itPythonGetPalette[] = "Ottieni la tavolozza del tema";
constexpr static char dePythonGetPalette[] = "Themenpalette erhalten";
constexpr static char esPythonGetPalette[] = "Get theme palette";
constexpr static char huPythonGetPalette[] = "Téma paletta beszerzése";
constexpr static char enPythonGetPixel[] = "Return pixel (x,y) color";
constexpr static char frPythonGetPixel[] = "Renvoie la couleur du pixel (x,y)";
constexpr static char nlPythonGetPixel[] = "Geef pixel (x,y) kleur (rgb)";
constexpr static char ptPythonGetPixel[] = "Devolve a cor do pixel (x,y)";
constexpr static char itPythonGetPixel[] = "Restituisce colore del pixel(x,y)";
constexpr static char dePythonGetPixel[] = "Farbe von Pixel (x,y) zurückgeben";
constexpr static char esPythonGetPixel[] = "Return pixel (x,y) color";
constexpr static char huPythonGetPixel[] = "Visszatéríti (x,y) színét";
constexpr static char enPythonGetrandbits[] = "Integer with k random bits";
constexpr static char frPythonGetrandbits[] = "Nombre aléatoire sur k bits";
constexpr static char nlPythonGetrandbits[] = "Integer met k willekeurige bits";
constexpr static char ptPythonGetrandbits[] = "Número inteiro aleatório com k bits";
constexpr static char itPythonGetrandbits[] = "Numero aleatorio con k bit";
constexpr static char dePythonGetrandbits[] = "Ganzzahl mit k Zufallsbits";
constexpr static char esPythonGetrandbits[] = "Integer with k random bits";
constexpr static char huPythonGetrandbits[] = "Váletlenszám visszatérítése k biten";
constexpr static char enPythonGrid[] = "Toggle the visibility of the grid";
constexpr static char frPythonGrid[] = "Affiche ou masque la grille";
constexpr static char nlPythonGrid[] = "Verander zichtbaarheid raster";
constexpr static char ptPythonGrid[] = "Alterar visibilidade da grelha";
constexpr static char itPythonGrid[] = "Attiva la visibilità della griglia";
constexpr static char dePythonGrid[] = "Sichtbarkeit des Gitters umschalten";
constexpr static char esPythonGrid[] = "Toggle the visibility of the grid";
constexpr static char huPythonGrid[] = "Rács megjelenítése/elrejtése";
constexpr static char enPythonHex[] = "Convert integer to hexadecimal";
constexpr static char frPythonHex[] = "Conversion entier en hexadécimal";
constexpr static char nlPythonHex[] = "Zet integer om in hexadecimaal";
constexpr static char ptPythonHex[] = "Converter inteiro em hexadecimal";
constexpr static char itPythonHex[] = "Conversione intero in esadecimale";
constexpr static char dePythonHex[] = "Ganzzahl in Hexadezimal umwandeln";
constexpr static char esPythonHex[] = "Convert integer to hexadecimal";
constexpr static char huPythonHex[] = "Decimális szám konvertálása hexadecimális számra";
constexpr static char enPythonHist[] = "Draw the histogram of x";
constexpr static char frPythonHist[] = "Histogramme de la liste x";
constexpr static char nlPythonHist[] = "Teken het histogram van x";
constexpr static char ptPythonHist[] = "Desenhar o histograma de x";
constexpr static char itPythonHist[] = "Disegna l'istogramma di x";
constexpr static char dePythonHist[] = "Zeichnet das Histogramm von x";
constexpr static char esPythonHist[] = "Draw the histogram of x";
constexpr static char huPythonHist[] = "x hisztográmiája";
constexpr static char enPythonImag[] = "Imaginary part of z";
constexpr static char frPythonImag[] = "Partie imaginaire de z";
constexpr static char nlPythonImag[] = "Imaginair deel van z";
constexpr static char ptPythonImag[] = "Parte imaginária de z";
constexpr static char itPythonImag[] = "Parte immaginaria di z";
constexpr static char dePythonImag[] = "Imaginärteil von z";
constexpr static char esPythonImag[] = "Imaginary part of z";
constexpr static char huPythonImag[] = "z képzeletbeli része";
constexpr static char enPythonImportCmath[] = "Import cmath module";
constexpr static char frPythonImportCmath[] = "Importation du module cmath";
constexpr static char nlPythonImportCmath[] = "Importeer cmath module";
constexpr static char ptPythonImportCmath[] = "Importar módulo cmath";
constexpr static char itPythonImportCmath[] = "Importa modulo cmath";
constexpr static char dePythonImportCmath[] = "cmath-Modul importieren";
constexpr static char esPythonImportCmath[] = "Import cmath module";
constexpr static char huPythonImportCmath[] = "cmath modul importálása";
constexpr static char enPythonImportIon[] = "Import ion module";
constexpr static char frPythonImportIon[] = "Importation du module ion";
constexpr static char nlPythonImportIon[] = "Importeer ion module";
constexpr static char ptPythonImportIon[] = "Importar módulo ion";
constexpr static char itPythonImportIon[] = "Importa modulo ion";
constexpr static char dePythonImportIon[] = "Ion-Modul importieren";
constexpr static char esPythonImportIon[] = "Import ion module";
constexpr static char huPythonImportIon[] = "Ion modul importálása";
constexpr static char enPythonImportKandinsky[] = "Import kandinsky module";
constexpr static char frPythonImportKandinsky[] = "Importation du module kandinsky";
constexpr static char nlPythonImportKandinsky[] = "Importeer kandinsky module";
constexpr static char ptPythonImportKandinsky[] = "Importar módulo kandinsky";
constexpr static char itPythonImportKandinsky[] = "Importa modulo kandinsky";
constexpr static char dePythonImportKandinsky[] = "Kandinsky-Modul importieren";
constexpr static char esPythonImportKandinsky[] = "Import kandinsky module";
constexpr static char huPythonImportKandinsky[] = "Kandinsky modul importálása";
constexpr static char enPythonImportMath[] = "Import math module";
constexpr static char frPythonImportMath[] = "Importation du module math";
constexpr static char nlPythonImportMath[] = "Importeer math module";
constexpr static char ptPythonImportMath[] = "Importar módulo math";
constexpr static char itPythonImportMath[] = "Importa modulo math";
constexpr static char dePythonImportMath[] = "Math-Modul importieren";
constexpr static char esPythonImportMath[] = "Import math module";
constexpr static char huPythonImportMath[] = "math modul importálása";
constexpr static char enPythonImportMatplotlibPyplot[] = "Import matplotlib.pyplot module";
constexpr static char frPythonImportMatplotlibPyplot[] = "Importation de matplotlib.pyplot";
constexpr static char nlPythonImportMatplotlibPyplot[] = "Importeer matplotlib.pyplot module";
constexpr static char ptPythonImportMatplotlibPyplot[] = "Importar módulo matplotlib.pyplot";
constexpr static char itPythonImportMatplotlibPyplot[] = "Importa modulo matplotlib.pyplot";
constexpr static char dePythonImportMatplotlibPyplot[] = "Matplotlib.pyplot-Modul importieren";
constexpr static char esPythonImportMatplotlibPyplot[] = "Import matplotlib.pyplot module";
constexpr static char huPythonImportMatplotlibPyplot[] = "matplotlib.pyplot modul importálása";
constexpr static char enPythonImportNumpy[] = "Import ulab.numpy module";
constexpr static char frPythonImportNumpy[] = "Importation de ulab.numpy";
constexpr static char nlPythonImportNumpy[] = "Importeer ulab.numpy module";
constexpr static char ptPythonImportNumpy[] = "Importar módulo ulab.numpy";
constexpr static char itPythonImportNumpy[] = "Importa modulo ulab.numpy";
constexpr static char dePythonImportNumpy[] = "Ulab.numpy-Modul importieren";
constexpr static char esPythonImportNumpy[] = "Import ulab.numpy module";
constexpr static char huPythonImportNumpy[] = "ulab.numpy modul importálása";
constexpr static char enPythonImportOs[] = "Import os module";
constexpr static char frPythonImportOs[] = "Importation du module os";
constexpr static char nlPythonImportOs[] = "Importeer os module";
constexpr static char ptPythonImportOs[] = "Import os module";
constexpr static char itPythonImportOs[] = "Importa modulo os";
constexpr static char dePythonImportOs[] = "OS-Modul importieren";
constexpr static char esPythonImportOs[] = "Import os module";
constexpr static char huPythonImportOs[] = "os modul importálása";
constexpr static char enPythonImportRandom[] = "Import random module";
constexpr static char frPythonImportRandom[] = "Importation du module random";
constexpr static char nlPythonImportRandom[] = "Importeer random module";
constexpr static char ptPythonImportRandom[] = "Importar módulo random";
constexpr static char itPythonImportRandom[] = "Importa modulo random";
constexpr static char dePythonImportRandom[] = "Random-Modul importieren";
constexpr static char esPythonImportRandom[] = "Import random module";
constexpr static char huPythonImportRandom[] = "Véletlenszerü modul importálása";
constexpr static char enPythonImportScipy[] = "Import ulab.scipy module";
constexpr static char frPythonImportScipy[] = "Importation de ulab.scipy";
constexpr static char nlPythonImportScipy[] = "Importeer ulab.scipy module";
constexpr static char ptPythonImportScipy[] = "Importar módulo ulab.scipy";
constexpr static char itPythonImportScipy[] = "Importa modulo ulab.scipy";
constexpr static char dePythonImportScipy[] = "Ulab.scipy-Modul importieren";
constexpr static char esPythonImportScipy[] = "Import ulab.scipy module";
constexpr static char huPythonImportScipy[] = "ulab.scipy modul importálása";
constexpr static char enPythonImportSys[] = "Import sys module";
constexpr static char frPythonImportSys[] = "Importation du module sys";
constexpr static char nlPythonImportSys[] = "Importeer sys module";
constexpr static char ptPythonImportSys[] = "Import sys module";
constexpr static char itPythonImportSys[] = "Importa modulo sys";
constexpr static char dePythonImportSys[] = "SYS-Modul importieren";
constexpr static char esPythonImportSys[] = "Import sys module";
constexpr static char huPythonImportSys[] = "sys modul importálása";
constexpr static char enPythonImportTime[] = "Import time module";
constexpr static char frPythonImportTime[] = "Importation du module temps";
constexpr static char nlPythonImportTime[] = "Import time module";
constexpr static char ptPythonImportTime[] = "Import time module";
constexpr static char itPythonImportTime[] = "Import time module";
constexpr static char dePythonImportTime[] = "Time-Modul importieren";
constexpr static char esPythonImportTime[] = "Import time module";
constexpr static char huPythonImportTime[] = "time modul importálása";
constexpr static char enPythonImportTurtle[] = "Import turtle module";
constexpr static char frPythonImportTurtle[] = "Importation du module turtle";
constexpr static char nlPythonImportTurtle[] = "Importeer turtle module";
constexpr static char ptPythonImportTurtle[] = "Importar módulo turtle";
constexpr static char itPythonImportTurtle[] = "Importa del modulo turtle";
constexpr static char dePythonImportTurtle[] = "Turtle-Modul importieren";
constexpr static char esPythonImportTurtle[] = "Import turtle module";
constexpr static char huPythonImportTurtle[] = "turtle modul importálása";
constexpr static char enPythonImportUtils[] = "Importing ulab.utils";
constexpr static char frPythonImportUtils[] = "Importation de ulab.utils";
constexpr static char nlPythonImportUtils[] = "Ulab.utils importeren";
constexpr static char ptPythonImportUtils[] = "Importando ulab.utils";
constexpr static char itPythonImportUtils[] = "Importazione di ulab.utils";
constexpr static char dePythonImportUtils[] = "Importieren von ulab.utils";
constexpr static char esPythonImportUtils[] = "Importando ulab.utils";
constexpr static char huPythonImportUtils[] = "Az ulab.utils importálása";
constexpr static char enPythonIndex[] = "Index of the first x occurrence";
constexpr static char frPythonIndex[] = "Indice première occurrence de x";
constexpr static char nlPythonIndex[] = "Index van de eerste x aanwezigheden";
constexpr static char ptPythonIndex[] = "Indice da primeira ocorrência de x";
constexpr static char itPythonIndex[] = "Indice prima occorrenza di x";
constexpr static char dePythonIndex[] = "Index des ersten x-Vorkommens";
constexpr static char esPythonIndex[] = "Index of the first x occurrence";
constexpr static char huPythonIndex[] = "Az elsö x esemény indexe";
constexpr static char enPythonInput[] = "Prompt a value";
constexpr static char frPythonInput[] = "Entrer une valeur";
constexpr static char nlPythonInput[] = "Wijs een waarde toe";
constexpr static char ptPythonInput[] = "Adicionar um valor";
constexpr static char itPythonInput[] = "Inserire un valore";
constexpr static char dePythonInput[] = "Einen Wert abfragen";
constexpr static char esPythonInput[] = "Prompt a value";
constexpr static char huPythonInput[] = "Irjon egy értéket (számot)";
constexpr static char enPythonInsert[] = "Insert x at index i in the list";
constexpr static char frPythonInsert[] = "Insère x en i-ème position";
constexpr static char nlPythonInsert[] = "Voeg x toe aan index i in de lijst";
constexpr static char ptPythonInsert[] = "Inserir x no índice i na lista";
constexpr static char itPythonInsert[] = "Inserire x in posizione i-esima";
constexpr static char dePythonInsert[] = "x an Index i in die Liste einfügen";
constexpr static char esPythonInsert[] = "Insert x at index i in the list";
constexpr static char huPythonInsert[] = "x-et i. pozícióra helyezze a listában";
constexpr static char enPythonInt[] = "Convert x to an integer";
constexpr static char frPythonInt[] = "Conversion en entier";
constexpr static char nlPythonInt[] = "Zet x om in een integer";
constexpr static char ptPythonInt[] = "Converter x num número inteiro";
constexpr static char itPythonInt[] = "Conversione in intero";
constexpr static char dePythonInt[] = "x in eine ganze Zahl umwandeln";
constexpr static char esPythonInt[] = "Convert x to an integer";
constexpr static char huPythonInt[] = "egész számra konvertálás";
constexpr static char enPythonIonFunction[] = "ion module function prefix";
constexpr static char frPythonIonFunction[] = "Préfixe fonction module ion";
constexpr static char nlPythonIonFunction[] = "ion module voorvoegsel";
constexpr static char ptPythonIonFunction[] = "Prefixo da função do módulo ion";
constexpr static char itPythonIonFunction[] = "Prefisso di funzione modulo ion";
constexpr static char dePythonIonFunction[] = "Ion-Modul-Funktionspräfix";
constexpr static char esPythonIonFunction[] = "ion module function prefix";
constexpr static char huPythonIonFunction[] = "ion modul funkció elötag";
constexpr static char enPythonIsFinite[] = "Check if x is finite";
constexpr static char frPythonIsFinite[] = "Teste si x est fini";
constexpr static char nlPythonIsFinite[] = "Controleer of x eindig is";
constexpr static char ptPythonIsFinite[] = "Verificar se x é finito";
constexpr static char itPythonIsFinite[] = "Testa se x è finito";
constexpr static char dePythonIsFinite[] = "Prüfen, ob x endlich ist";
constexpr static char esPythonIsFinite[] = "Check if x is finite";
constexpr static char huPythonIsFinite[] = "x véges-e";
constexpr static char enPythonIsInfinite[] = "Check if x is infinity";
constexpr static char frPythonIsInfinite[] = "Teste si x est infini";
constexpr static char nlPythonIsInfinite[] = "Controleer of x oneindig is";
constexpr static char ptPythonIsInfinite[] = "Verificar se x é infinito";
constexpr static char itPythonIsInfinite[] = "Testa se x est infinito";
constexpr static char dePythonIsInfinite[] = "Prüfen, ob x unendlich ist";
constexpr static char esPythonIsInfinite[] = "Check if x is infinity";
constexpr static char huPythonIsInfinite[] = "x végtelen-e";
constexpr static char enPythonIsKeyDown[] = "Return True if the k key is down";
constexpr static char frPythonIsKeyDown[] = "Renvoie True si touche k enfoncée";
constexpr static char nlPythonIsKeyDown[] = "Geef True als k toets omlaag is";
constexpr static char ptPythonIsKeyDown[] = "Devolve True se tecla k pressionada";
constexpr static char itPythonIsKeyDown[] = "Restituisce True premendo tasto k";
constexpr static char dePythonIsKeyDown[] = "Wahr, wenn die Taste k gedrückt ist";
constexpr static char esPythonIsKeyDown[] = "Return True if the k key is down";
constexpr static char huPythonIsKeyDown[] = "True-t válaszol ha a k gomb le van nyomva";
constexpr static char enPythonIsNaN[] = "Check if x is a NaN";
constexpr static char frPythonIsNaN[] = "Teste si x est NaN";
constexpr static char nlPythonIsNaN[] = "Controleer of x geen getal is";
constexpr static char ptPythonIsNaN[] = "Verificar se x é um NaN";
constexpr static char itPythonIsNaN[] = "Testa se x è NaN";
constexpr static char dePythonIsNaN[] = "Prüfen, ob x keine Zahl ist";
constexpr static char esPythonIsNaN[] = "Check if x is a NaN";
constexpr static char huPythonIsNaN[] = "Ellenörizze hogy x nem NaN";
constexpr static char enPythonKandinskyFunction[] = "kandinsky module function prefix";
constexpr static char frPythonKandinskyFunction[] = "Préfixe fonction module kandinsky";
constexpr static char nlPythonKandinskyFunction[] = "kandinsky module voorvoegsel";
constexpr static char ptPythonKandinskyFunction[] = "Prefixo da função do módulo kandinsky";
constexpr static char itPythonKandinskyFunction[] = "Prefisso funzione modulo kandinsky";
constexpr static char dePythonKandinskyFunction[] = "Kandinsky-Modul Funktionspräfix";
constexpr static char esPythonKandinskyFunction[] = "kandinsky module function prefix";
constexpr static char huPythonKandinskyFunction[] = "kandinsky modul funkció elötag";
constexpr static char enPythonKeyAlpha[] = "ALPHA key";
constexpr static char frPythonKeyAlpha[] = "Touche ALPHA";
constexpr static char nlPythonKeyAlpha[] = "ALPHA toets";
constexpr static char ptPythonKeyAlpha[] = "tecla ALPHA";
constexpr static char itPythonKeyAlpha[] = "Tasto ALPHA";
constexpr static char dePythonKeyAlpha[] = "ALPHA key";
constexpr static char esPythonKeyAlpha[] = "ALPHA key";
constexpr static char huPythonKeyAlpha[] = "ALPHA kulcs";
constexpr static char enPythonKeyAns[] = "ANS key";
constexpr static char frPythonKeyAns[] = "Touche ANS";
constexpr static char nlPythonKeyAns[] = "ANS toets";
constexpr static char ptPythonKeyAns[] = "tecla ANS";
constexpr static char itPythonKeyAns[] = "Tasto ANS";
constexpr static char dePythonKeyAns[] = "ANS key";
constexpr static char esPythonKeyAns[] = "ANS key";
constexpr static char huPythonKeyAns[] = "ANS kulcs";
constexpr static char enPythonKeyBack[] = "BACK key";
constexpr static char frPythonKeyBack[] = "Touche RETOUR";
constexpr static char nlPythonKeyBack[] = "TERUG toets";
constexpr static char ptPythonKeyBack[] = "tecla VOLTAR";
constexpr static char itPythonKeyBack[] = "Tasto INDIETRO";
constexpr static char dePythonKeyBack[] = "BACK key";
constexpr static char esPythonKeyBack[] = "BACK key";
constexpr static char huPythonKeyBack[] = "VISSZA gomb";
constexpr static char enPythonKeyBackspace[] = "BACKSPACE key";
constexpr static char frPythonKeyBackspace[] = "Touche EFFACER";
constexpr static char nlPythonKeyBackspace[] = "BACKSPACE toets";
constexpr static char ptPythonKeyBackspace[] = "tecla APAGAR";
constexpr static char itPythonKeyBackspace[] = "Tasto CANCELLA";
constexpr static char dePythonKeyBackspace[] = "BACKSPACE key";
constexpr static char esPythonKeyBackspace[] = "BACKSPACE key";
constexpr static char huPythonKeyBackspace[] = "BACKSPACE billentyű";
constexpr static char enPythonKeyComma[] = "COMMA key";
constexpr static char frPythonKeyComma[] = "Touche VIRGULE";
constexpr static char nlPythonKeyComma[] = "KOMMA toets";
constexpr static char ptPythonKeyComma[] = "tecla VIRGULA";
constexpr static char itPythonKeyComma[] = "Tasto VIRGOLA";
constexpr static char dePythonKeyComma[] = "COMMA key";
constexpr static char esPythonKeyComma[] = "COMMA key";
constexpr static char huPythonKeyComma[] = "VESZSU gomb";
constexpr static char enPythonKeyCosine[] = "COSINE key";
constexpr static char frPythonKeyCosine[] = "Touche COSINUS";
constexpr static char nlPythonKeyCosine[] = "COSINUS toets";
constexpr static char ptPythonKeyCosine[] = "tecla COSSENO";
constexpr static char itPythonKeyCosine[] = "Tasto COSENO";
constexpr static char dePythonKeyCosine[] = "COSINE key";
constexpr static char esPythonKeyCosine[] = "COSINE key";
constexpr static char huPythonKeyCosine[] = "KOSINUS kulcs";
constexpr static char enPythonKeyDivision[] = "DIVISION key";
constexpr static char frPythonKeyDivision[] = "Touche DIVISION";
constexpr static char nlPythonKeyDivision[] = "DELEN toets";
constexpr static char ptPythonKeyDivision[] = "tecla DIVISAO";
constexpr static char itPythonKeyDivision[] = "Tasto DIVISIONE";
constexpr static char dePythonKeyDivision[] = "DIVISION key";
constexpr static char esPythonKeyDivision[] = "DIVISION key";
constexpr static char huPythonKeyDivision[] = "OSZTAS kulcs";
constexpr static char enPythonKeyDot[] = "DOT key";
constexpr static char frPythonKeyDot[] = "Touche POINT";
constexpr static char nlPythonKeyDot[] = "PUNT toets";
constexpr static char ptPythonKeyDot[] = "tecla PONTO";
constexpr static char itPythonKeyDot[] = "Tasto PUNTO";
constexpr static char dePythonKeyDot[] = "DOT key";
constexpr static char esPythonKeyDot[] = "DOT key";
constexpr static char huPythonKeyDot[] = "DOT gomb";
constexpr static char enPythonKeyDown[] = "DOWN ARROW key";
constexpr static char frPythonKeyDown[] = "Touche FLECHE BAS";
constexpr static char nlPythonKeyDown[] = "PIJL OMLAAG toets";
constexpr static char ptPythonKeyDown[] = "tecla SETA BAIXO";
constexpr static char itPythonKeyDown[] = "Tasto FRECCIA BASSO";
constexpr static char dePythonKeyDown[] = "DOWN ARROW key";
constexpr static char esPythonKeyDown[] = "DOWN ARROW key";
constexpr static char huPythonKeyDown[] = "LE NYIL billentyű";
constexpr static char enPythonKeyEe[] = "10 POWER X key";
constexpr static char frPythonKeyEe[] = "Touche 10 PUISSANCE X";
constexpr static char nlPythonKeyEe[] = "10 TOT DE MACHT X toets";
constexpr static char ptPythonKeyEe[] = "tecla 10 expoente X";
constexpr static char itPythonKeyEe[] = "Tasto 10 POTENZA X";
constexpr static char dePythonKeyEe[] = "10 POWER X key";
constexpr static char esPythonKeyEe[] = "10 POWER X key";
constexpr static char huPythonKeyEe[] = "10 POWER X gomb";
constexpr static char enPythonKeyEight[] = "8 key";
constexpr static char frPythonKeyEight[] = "Touche 8";
constexpr static char nlPythonKeyEight[] = "8 toets";
constexpr static char ptPythonKeyEight[] = "tecla 8";
constexpr static char itPythonKeyEight[] = "Tasto 8";
constexpr static char dePythonKeyEight[] = "8 key";
constexpr static char esPythonKeyEight[] = "8 key";
constexpr static char huPythonKeyEight[] = "8 kulcs";
constexpr static char enPythonKeyExe[] = "EXE key";
constexpr static char frPythonKeyExe[] = "Touche EXE";
constexpr static char nlPythonKeyExe[] = "EXE toets";
constexpr static char ptPythonKeyExe[] = "tecla EXE";
constexpr static char itPythonKeyExe[] = "Tasto EXE";
constexpr static char dePythonKeyExe[] = "EXE key";
constexpr static char esPythonKeyExe[] = "EXE key";
constexpr static char huPythonKeyExe[] = "EXE kulcs";
constexpr static char enPythonKeyExp[] = "EXPONENTIAL key";
constexpr static char frPythonKeyExp[] = "Touche EXPONENTIELLE";
constexpr static char nlPythonKeyExp[] = "EXPONENTIEEL toets";
constexpr static char ptPythonKeyExp[] = "tecla EXPONENCIAL";
constexpr static char itPythonKeyExp[] = "Tasto ESPONENZIALE";
constexpr static char dePythonKeyExp[] = "EXPONENTIAL key";
constexpr static char esPythonKeyExp[] = "EXPONENTIAL key";
constexpr static char huPythonKeyExp[] = "EXPONENTIALIS kulcs";
constexpr static char enPythonKeyFive[] = "5 key";
constexpr static char frPythonKeyFive[] = "Touche 5";
constexpr static char nlPythonKeyFive[] = "5 toets";
constexpr static char ptPythonKeyFive[] = "tecla 5";
constexpr static char itPythonKeyFive[] = "Tasto 5";
constexpr static char dePythonKeyFive[] = "5 key";
constexpr static char esPythonKeyFive[] = "5 key";
constexpr static char huPythonKeyFive[] = "5 kulcs";
constexpr static char enPythonKeyFour[] = "4 key";
constexpr static char frPythonKeyFour[] = "Touche 4";
constexpr static char nlPythonKeyFour[] = "4 toets";
constexpr static char ptPythonKeyFour[] = "tecla 4";
constexpr static char itPythonKeyFour[] = "Tasto 4";
constexpr static char dePythonKeyFour[] = "4 key";
constexpr static char esPythonKeyFour[] = "4 key";
constexpr static char huPythonKeyFour[] = "4 kulcs";
constexpr static char enPythonKeyHome[] = "HOME key";
constexpr static char frPythonKeyHome[] = "Touche HOME";
constexpr static char nlPythonKeyHome[] = "HOME toets";
constexpr static char ptPythonKeyHome[] = "tecla HOME";
constexpr static char itPythonKeyHome[] = "Tasto CASA";
constexpr static char dePythonKeyHome[] = "HOME key";
constexpr static char esPythonKeyHome[] = "HOME key";
constexpr static char huPythonKeyHome[] = "Lakáskulcs";
constexpr static char enPythonKeyImaginary[] = "IMAGINARY I key";
constexpr static char frPythonKeyImaginary[] = "Touche I IMAGINAIRE";
constexpr static char nlPythonKeyImaginary[] = "IMAGINAIRE I toets";
constexpr static char ptPythonKeyImaginary[] = "tecla I IMAGINARIO";
constexpr static char itPythonKeyImaginary[] = "Tasto I IMMAGINE";
constexpr static char dePythonKeyImaginary[] = "IMAGINARY I key";
constexpr static char esPythonKeyImaginary[] = "IMAGINARY I key";
constexpr static char huPythonKeyImaginary[] = "KEPZELETES I kulcs";
constexpr static char enPythonKeyLeft[] = "LEFT ARROW key";
constexpr static char frPythonKeyLeft[] = "Touche FLECHE GAUCHE";
constexpr static char nlPythonKeyLeft[] = "PIJL NAAR LINKS toets";
constexpr static char ptPythonKeyLeft[] = "tecla SETA ESQUERDA";
constexpr static char itPythonKeyLeft[] = "Tasto FRECCIA SINISTRA";
constexpr static char dePythonKeyLeft[] = "LEFT ARROW key";
constexpr static char esPythonKeyLeft[] = "LEFT ARROW key";
constexpr static char huPythonKeyLeft[] = "BALRA NYIL billentyű";
constexpr static char enPythonKeyLeftParenthesis[] = "LEFT PARENTHESIS key";
constexpr static char frPythonKeyLeftParenthesis[] = "Touche PARENTHESE GAUCHE";
constexpr static char nlPythonKeyLeftParenthesis[] = "HAAKJE OPENEN toets";
constexpr static char ptPythonKeyLeftParenthesis[] = "tecla PARENTESE ESQUERDO";
constexpr static char itPythonKeyLeftParenthesis[] = "Tasto PARENTESI SINISTRA";
constexpr static char dePythonKeyLeftParenthesis[] = "LEFT PARENTHESIS key";
constexpr static char esPythonKeyLeftParenthesis[] = "LEFT PARENTHESIS key";
constexpr static char huPythonKeyLeftParenthesis[] = "BAL ZAROZELO gomb";
constexpr static char enPythonKeyLn[] = "NATURAL LOGARITHM key";
constexpr static char frPythonKeyLn[] = "Touche LOGARITHME NEPERIEN";
constexpr static char nlPythonKeyLn[] = "NATUURLIJKE LOGARITME toets";
constexpr static char ptPythonKeyLn[] = "tecla LOGARITMO NATURAL";
constexpr static char itPythonKeyLn[] = "Tasto LOGARITMO NEPERIANO";
constexpr static char dePythonKeyLn[] = "NATURAL LOGARITHM key";
constexpr static char esPythonKeyLn[] = "NATURAL LOGARITHM key";
constexpr static char huPythonKeyLn[] = "TERMESZETES LOGARITMUS kulcs";
constexpr static char enPythonKeyLog[] = "DECIMAL LOGARITHM key";
constexpr static char frPythonKeyLog[] = "Touche LOGARITHME DECIMAL";
constexpr static char nlPythonKeyLog[] = "BRIGGSE LOGARITME toets";
constexpr static char ptPythonKeyLog[] = "tecla LOGARITMO DECIMAL";
constexpr static char itPythonKeyLog[] = "Tasto LOGARITMO DECIMALE";
constexpr static char dePythonKeyLog[] = "DECIMAL LOGARITHM key";
constexpr static char esPythonKeyLog[] = "DECIMAL LOGARITHM key";
constexpr static char huPythonKeyLog[] = "DECIMALIS LOGARITMUS billentyű";
constexpr static char enPythonKeyMinus[] = "MINUS key";
constexpr static char frPythonKeyMinus[] = "Touche MOINS";
constexpr static char nlPythonKeyMinus[] = "MIN toets";
constexpr static char ptPythonKeyMinus[] = "tecla MENOS";
constexpr static char itPythonKeyMinus[] = "Tasto MENO";
constexpr static char dePythonKeyMinus[] = "MINUS key";
constexpr static char esPythonKeyMinus[] = "MINUS key";
constexpr static char huPythonKeyMinus[] = "MINUS gomb";
constexpr static char enPythonKeyMultiplication[] = "MULTIPLICATION key";
constexpr static char frPythonKeyMultiplication[] = "Touche MULTIPLICATION";
constexpr static char nlPythonKeyMultiplication[] = "VERMENIGVULDIGEN toets";
constexpr static char ptPythonKeyMultiplication[] = "tecla MULTIPLICACAO";
constexpr static char itPythonKeyMultiplication[] = "Tasto MOLTIPLICAZIONE";
constexpr static char dePythonKeyMultiplication[] = "MULTIPLICATION key";
constexpr static char esPythonKeyMultiplication[] = "MULTIPLICATION key";
constexpr static char huPythonKeyMultiplication[] = "SZORZAT gomb";
constexpr static char enPythonKeyNine[] = "9 key";
constexpr static char frPythonKeyNine[] = "Touche 9";
constexpr static char nlPythonKeyNine[] = "9 toets";
constexpr static char ptPythonKeyNine[] = "tecla 9";
constexpr static char itPythonKeyNine[] = "Tasto 9";
constexpr static char dePythonKeyNine[] = "9 key";
constexpr static char esPythonKeyNine[] = "9 key";
constexpr static char huPythonKeyNine[] = "9 kulcs";
constexpr static char enPythonKeyOk[] = "OK key";
constexpr static char frPythonKeyOk[] = "Touche OK";
constexpr static char nlPythonKeyOk[] = "OK toets";
constexpr static char ptPythonKeyOk[] = "tecla OK";
constexpr static char itPythonKeyOk[] = "Tasto OK";
constexpr static char dePythonKeyOk[] = "OK key";
constexpr static char esPythonKeyOk[] = "OK key";
constexpr static char huPythonKeyOk[] = "OK gomb";
constexpr static char enPythonKeyOnOff[] = "ON/OFF key";
constexpr static char frPythonKeyOnOff[] = "Touche ON/OFF";
constexpr static char nlPythonKeyOnOff[] = "AAN/UIT toets";
constexpr static char ptPythonKeyOnOff[] = "tecla ON/OFF";
constexpr static char itPythonKeyOnOff[] = "Tasto ON/OFF";
constexpr static char dePythonKeyOnOff[] = "ON/OFF key";
constexpr static char esPythonKeyOnOff[] = "ON/OFF key";
constexpr static char huPythonKeyOnOff[] = "BE/KI gomb";
constexpr static char enPythonKeyOne[] = "1 key";
constexpr static char frPythonKeyOne[] = "Touche 1";
constexpr static char nlPythonKeyOne[] = "1 toets";
constexpr static char ptPythonKeyOne[] = "tecla 1";
constexpr static char itPythonKeyOne[] = "Tasto 1";
constexpr static char dePythonKeyOne[] = "1 key";
constexpr static char esPythonKeyOne[] = "1 key";
constexpr static char huPythonKeyOne[] = "1 kulcs";
constexpr static char enPythonKeyPi[] = "PI key";
constexpr static char frPythonKeyPi[] = "Touche PI";
constexpr static char nlPythonKeyPi[] = "PI toets";
constexpr static char ptPythonKeyPi[] = "tecla PI";
constexpr static char itPythonKeyPi[] = "Tasto PI";
constexpr static char dePythonKeyPi[] = "PI key";
constexpr static char esPythonKeyPi[] = "PI key";
constexpr static char huPythonKeyPi[] = "PI kulcs";
constexpr static char enPythonKeyPlus[] = "PLUS key";
constexpr static char frPythonKeyPlus[] = "Touche PLUS";
constexpr static char nlPythonKeyPlus[] = "PLUS toets";
constexpr static char ptPythonKeyPlus[] = "tecla MAIS";
constexpr static char itPythonKeyPlus[] = "Tasto PIU";
constexpr static char dePythonKeyPlus[] = "PLUS key";
constexpr static char esPythonKeyPlus[] = "PLUS key";
constexpr static char huPythonKeyPlus[] = "PLUSZ kulcs";
constexpr static char enPythonKeyPower[] = "POWER key";
constexpr static char frPythonKeyPower[] = "Touche PUISSANCE";
constexpr static char nlPythonKeyPower[] = "MACHT toets";
constexpr static char ptPythonKeyPower[] = "tecla EXPOENTE";
constexpr static char itPythonKeyPower[] = "Tasto POTENZA";
constexpr static char dePythonKeyPower[] = "POWER key";
constexpr static char esPythonKeyPower[] = "POWER key";
constexpr static char huPythonKeyPower[] = "POWER gomb";
constexpr static char enPythonKeyRight[] = "RIGHT ARROW key";
constexpr static char frPythonKeyRight[] = "Touche FLECHE DROITE";
constexpr static char nlPythonKeyRight[] = "PIJL NAAR RECHTS toets";
constexpr static char ptPythonKeyRight[] = "tecla SETA DIREITA";
constexpr static char itPythonKeyRight[] = "Tasto FRECCIA DESTRA";
constexpr static char dePythonKeyRight[] = "RIGHT ARROW key";
constexpr static char esPythonKeyRight[] = "RIGHT ARROW key";
constexpr static char huPythonKeyRight[] = "JOBBRA NYIL billentyű";
constexpr static char enPythonKeyRightParenthesis[] = "RIGHT PARENTHESIS key";
constexpr static char frPythonKeyRightParenthesis[] = "Touche PARENTHESE DROITE";
constexpr static char nlPythonKeyRightParenthesis[] = "HAAKJE SLUITEN toets";
constexpr static char ptPythonKeyRightParenthesis[] = "tecla PARENTESE DIREITO";
constexpr static char itPythonKeyRightParenthesis[] = "Tasto PARENTESI DESTRA";
constexpr static char dePythonKeyRightParenthesis[] = "RIGHT PARENTHESIS key";
constexpr static char esPythonKeyRightParenthesis[] = "RIGHT PARENTHESIS key";
constexpr static char huPythonKeyRightParenthesis[] = "JOBB ZAROZELO billentyű";
constexpr static char enPythonKeySeven[] = "7 key";
constexpr static char frPythonKeySeven[] = "Touche 7";
constexpr static char nlPythonKeySeven[] = "7 toets";
constexpr static char ptPythonKeySeven[] = "tecla 7";
constexpr static char itPythonKeySeven[] = "Tasto 7";
constexpr static char dePythonKeySeven[] = "7 key";
constexpr static char esPythonKeySeven[] = "7 key";
constexpr static char huPythonKeySeven[] = "7 kulcs";
constexpr static char enPythonKeyShift[] = "SHIFT key";
constexpr static char frPythonKeyShift[] = "Touche SHIFT";
constexpr static char nlPythonKeyShift[] = "SHIFT toets";
constexpr static char ptPythonKeyShift[] = "tecla SHIFT";
constexpr static char itPythonKeyShift[] = "Tasto SHIFT";
constexpr static char dePythonKeyShift[] = "SHIFT key";
constexpr static char esPythonKeyShift[] = "SHIFT key";
constexpr static char huPythonKeyShift[] = "SHIFT billentyű";
constexpr static char enPythonKeySine[] = "SINE key";
constexpr static char frPythonKeySine[] = "Touche SINUS";
constexpr static char nlPythonKeySine[] = "SINUS toets";
constexpr static char ptPythonKeySine[] = "tecla SENO";
constexpr static char itPythonKeySine[] = "Tasto SENO";
constexpr static char dePythonKeySine[] = "SINE key";
constexpr static char esPythonKeySine[] = "SINE key";
constexpr static char huPythonKeySine[] = "SINE gomb";
constexpr static char enPythonKeySix[] = "6 key";
constexpr static char frPythonKeySix[] = "Touche 6";
constexpr static char nlPythonKeySix[] = "6 toets";
constexpr static char ptPythonKeySix[] = "tecla 6";
constexpr static char itPythonKeySix[] = "Tasto 6";
constexpr static char dePythonKeySix[] = "6 key";
constexpr static char esPythonKeySix[] = "6 key";
constexpr static char huPythonKeySix[] = "6 kulcs";
constexpr static char enPythonKeySqrt[] = "SQUARE ROOT key";
constexpr static char frPythonKeySqrt[] = "Touche RACINE CARREE";
constexpr static char nlPythonKeySqrt[] = "VIERKANTSWORTEL toets";
constexpr static char ptPythonKeySqrt[] = "tecla RAIZ QUADRADA";
constexpr static char itPythonKeySqrt[] = "Tasto RADICE QUADRATA";
constexpr static char dePythonKeySqrt[] = "SQUARE ROOT key";
constexpr static char esPythonKeySqrt[] = "SQUARE ROOT key";
constexpr static char huPythonKeySqrt[] = "NEGYGYOK kulcs";
constexpr static char enPythonKeySquare[] = "SQUARE key";
constexpr static char frPythonKeySquare[] = "Touche CARRE";
constexpr static char nlPythonKeySquare[] = "KWADRAAT toets";
constexpr static char ptPythonKeySquare[] = "tecla AO QUADRADO";
constexpr static char itPythonKeySquare[] = "Tasto QUADRATO";
constexpr static char dePythonKeySquare[] = "SQUARE key";
constexpr static char esPythonKeySquare[] = "SQUARE key";
constexpr static char huPythonKeySquare[] = "SZOGZET billentyű";
constexpr static char enPythonKeyTangent[] = "TANGENT key";
constexpr static char frPythonKeyTangent[] = "Touche TANGENTE";
constexpr static char nlPythonKeyTangent[] = "TANGENS toets";
constexpr static char ptPythonKeyTangent[] = "tecla TANGENTE";
constexpr static char itPythonKeyTangent[] = "Tasto TANGENTE";
constexpr static char dePythonKeyTangent[] = "TANGENT key";
constexpr static char esPythonKeyTangent[] = "TANGENT key";
constexpr static char huPythonKeyTangent[] = "ERINTO gomb";
constexpr static char enPythonKeyThree[] = "3 key";
constexpr static char frPythonKeyThree[] = "Touche 3";
constexpr static char nlPythonKeyThree[] = "3 toets";
constexpr static char ptPythonKeyThree[] = "tecla 3";
constexpr static char itPythonKeyThree[] = "Tasto 3";
constexpr static char dePythonKeyThree[] = "3 key";
constexpr static char esPythonKeyThree[] = "3 key";
constexpr static char huPythonKeyThree[] = "3 kulcs";
constexpr static char enPythonKeyToolbox[] = "TOOLBOX key";
constexpr static char frPythonKeyToolbox[] = "Touche BOITE A OUTILS";
constexpr static char nlPythonKeyToolbox[] = "TOOLBOX toets";
constexpr static char ptPythonKeyToolbox[] = "tecla CAIXA DE FERRAMENTAS";
constexpr static char itPythonKeyToolbox[] = "Tasto TOOLBOX";
constexpr static char dePythonKeyToolbox[] = "TOOLBOX key";
constexpr static char esPythonKeyToolbox[] = "TOOLBOX key";
constexpr static char huPythonKeyToolbox[] = "TOOLBOX gomb";
constexpr static char enPythonKeyTwo[] = "2 key";
constexpr static char frPythonKeyTwo[] = "Touche 2";
constexpr static char nlPythonKeyTwo[] = "2 toets";
constexpr static char ptPythonKeyTwo[] = "tecla 2";
constexpr static char itPythonKeyTwo[] = "Tasto 2";
constexpr static char dePythonKeyTwo[] = "2 key";
constexpr static char esPythonKeyTwo[] = "2 key";
constexpr static char huPythonKeyTwo[] = "2 kulcs";
constexpr static char enPythonKeyUp[] = "UP ARROW key";
constexpr static char frPythonKeyUp[] = "Touche FLECHE HAUT";
constexpr static char nlPythonKeyUp[] = "PIJL OMHOOG toets";
constexpr static char ptPythonKeyUp[] = "tecla SETA CIMA ";
constexpr static char itPythonKeyUp[] = "Tasto FRECCIA ALTO";
constexpr static char dePythonKeyUp[] = "UP ARROW key";
constexpr static char esPythonKeyUp[] = "UP ARROW key";
constexpr static char huPythonKeyUp[] = "FEL NYIL billentyű";
constexpr static char enPythonKeyVar[] = "VAR key";
constexpr static char frPythonKeyVar[] = "Touche VAR";
constexpr static char nlPythonKeyVar[] = "VAR toets";
constexpr static char ptPythonKeyVar[] = "tecla VAR";
constexpr static char itPythonKeyVar[] = "Tasto VAR";
constexpr static char dePythonKeyVar[] = "VAR key";
constexpr static char esPythonKeyVar[] = "VAR key";
constexpr static char huPythonKeyVar[] = "VAR gomb";
constexpr static char enPythonKeyXnt[] = "X,N,T key";
constexpr static char frPythonKeyXnt[] = "Touche X,N,T";
constexpr static char nlPythonKeyXnt[] = "X,N,T toets";
constexpr static char ptPythonKeyXnt[] = "tecla X,N,T";
constexpr static char itPythonKeyXnt[] = "Tasto X,N,T";
constexpr static char dePythonKeyXnt[] = "X,N,T key";
constexpr static char esPythonKeyXnt[] = "X,N,T key";
constexpr static char huPythonKeyXnt[] = "X,N,T gomb";
constexpr static char enPythonKeyZero[] = "0 key";
constexpr static char frPythonKeyZero[] = "Touche 0";
constexpr static char nlPythonKeyZero[] = "0 toets";
constexpr static char ptPythonKeyZero[] = "tecla 0";
constexpr static char itPythonKeyZero[] = "Tasto 0";
constexpr static char dePythonKeyZero[] = "0 key";
constexpr static char esPythonKeyZero[] = "0 key";
constexpr static char huPythonKeyZero[] = "0 kulcs";
constexpr static char enPythonLF[] = "Line feed";
constexpr static char frPythonLF[] = "Saut à la ligne";
constexpr static char nlPythonLF[] = "Nieuwe regel";
constexpr static char ptPythonLF[] = "Nova linha";
constexpr static char itPythonLF[] = "Nuova riga";
constexpr static char dePythonLF[] = "Zeilenvorschub";
constexpr static char esPythonLF[] = "Line feed";
constexpr static char huPythonLF[] = "Enter";
constexpr static char enPythonLdexp[] = "Return x*(2**i), inverse of frexp";
constexpr static char frPythonLdexp[] = "Inverse de frexp : x*(2**i)";
constexpr static char nlPythonLdexp[] = "Geeft x*(2**i), inversie van frexp";
constexpr static char ptPythonLdexp[] = "Devolve x*(2**i), inverso de frexp";
constexpr static char itPythonLdexp[] = "Inversa di frexp : x*(2**i)";
constexpr static char dePythonLdexp[] = "Liefert x*(2**i), Inverse von frexp";
constexpr static char esPythonLdexp[] = "Return x*(2**i), inverse of frexp";
constexpr static char huPythonLdexp[] = "frexp ellentéte : x*(2**i)";
constexpr static char enPythonLength[] = "Length of an object";
constexpr static char frPythonLength[] = "Longueur d'un objet";
constexpr static char nlPythonLength[] = "Lengte van een object";
constexpr static char ptPythonLength[] = "Comprimento de um objeto";
constexpr static char itPythonLength[] = "Longhezza di un oggetto";
constexpr static char dePythonLength[] = "Länge eines Objekts";
constexpr static char esPythonLength[] = "Length of an object";
constexpr static char huPythonLength[] = "Egy targy hossza";
constexpr static char enPythonLgamma[] = "Log-gamma function";
constexpr static char frPythonLgamma[] = "Logarithme de la fonction gamma";
constexpr static char nlPythonLgamma[] = "Log-gammafunctie";
constexpr static char ptPythonLgamma[] = "Logaritmo da função gama";
constexpr static char itPythonLgamma[] = "Logaritmo della funzione gamma";
constexpr static char dePythonLgamma[] = "Log-Gamma-Funktion";
constexpr static char esPythonLgamma[] = "Log-gamma function";
constexpr static char huPythonLgamma[] = "Gamma funkció logaritmusa";
constexpr static char enPythonLocalTime[] = "Convert time into tuple";
constexpr static char frPythonLocalTime[] = "Convertir le temps en tuple";
constexpr static char nlPythonLocalTime[] = "Zet tijd om in tuple";
constexpr static char ptPythonLocalTime[] = "Convert o tempo em tupla";
constexpr static char itPythonLocalTime[] = "Converti il tempo in tuple";
constexpr static char dePythonLocalTime[] = "Zeit in Tupel umwandeln";
constexpr static char esPythonLocalTime[] = "Convertir el tiempo en tupla";
constexpr static char huPythonLocalTime[] = "Idő konvertálása csomóvá";
constexpr static char enPythonLog[] = "Logarithm to base a";
constexpr static char frPythonLog[] = "Logarithme de base a";
constexpr static char nlPythonLog[] = "Logaritme met grondgetal a";
constexpr static char ptPythonLog[] = "Logaritmo de base a";
constexpr static char itPythonLog[] = "Logaritmo di base a";
constexpr static char dePythonLog[] = "Logarithmus zur Basis a";
constexpr static char esPythonLog[] = "Logarithm to base a";
constexpr static char huPythonLog[] = "a alapú logaritmus";
constexpr static char enPythonLog10[] = "Logarithm to base 10";
constexpr static char frPythonLog10[] = "Logarithme décimal";
constexpr static char nlPythonLog10[] = "Logaritme met grondgetal 10";
constexpr static char ptPythonLog10[] = "Logaritmo de base 10";
constexpr static char itPythonLog10[] = "Logaritmo decimale";
constexpr static char dePythonLog10[] = "Logarithmus zur Basis 10";
constexpr static char esPythonLog10[] = "Logarithm to base 10";
constexpr static char huPythonLog10[] = "Decimális logaritmus";
constexpr static char enPythonLog2[] = "Logarithm to base 2";
constexpr static char frPythonLog2[] = "Logarithme de base 2";
constexpr static char nlPythonLog2[] = "Logaritme met grondgetal 2";
constexpr static char ptPythonLog2[] = "Logaritmo de base 2";
constexpr static char itPythonLog2[] = "Logaritmo di base 2";
constexpr static char dePythonLog2[] = "Logarithmus zur Basis 2";
constexpr static char esPythonLog2[] = "Logarithm to base 2";
constexpr static char huPythonLog2[] = "Bináris logaritmus";
constexpr static char enPythonMathFunction[] = "math module function prefix";
constexpr static char frPythonMathFunction[] = "Préfixe fonction du module math";
constexpr static char nlPythonMathFunction[] = "math module voorvoegsel";
constexpr static char ptPythonMathFunction[] = "Prefixo da função do módulo math";
constexpr static char itPythonMathFunction[] = "Prefisso funzione del modulo math";
constexpr static char dePythonMathFunction[] = "Funktionspräfix des Math-Moduls";
constexpr static char esPythonMathFunction[] = "math module function prefix";
constexpr static char huPythonMathFunction[] = "math modul funkció elötag";
constexpr static char enPythonMatplotlibPyplotFunction[] = "matplotlib.pyplot module prefix";
constexpr static char frPythonMatplotlibPyplotFunction[] = "Préfixe du module matplotlib.pyplot";
constexpr static char nlPythonMatplotlibPyplotFunction[] = "matplotlib.pyplot module prefix";
constexpr static char ptPythonMatplotlibPyplotFunction[] = "Prefixo do módulo matplotlib.pyplot";
constexpr static char itPythonMatplotlibPyplotFunction[] = "Prefisso modulo matplotlib.pyplot";
constexpr static char dePythonMatplotlibPyplotFunction[] = "matplotlib.pyplot Modul-Präfix";
constexpr static char esPythonMatplotlibPyplotFunction[] = "matplotlib.pyplot module prefix";
constexpr static char huPythonMatplotlibPyplotFunction[] = "matplotlib.pyplot elötag";
constexpr static char enPythonMax[] = "Maximum";
constexpr static char frPythonMax[] = "Maximum";
constexpr static char nlPythonMax[] = "Maximum";
constexpr static char ptPythonMax[] = "Máximo";
constexpr static char itPythonMax[] = "Massimo";
constexpr static char dePythonMax[] = "Maximum";
constexpr static char esPythonMax[] = "Maximum";
constexpr static char huPythonMax[] = "Maximum";
constexpr static char enPythonMin[] = "Minimum";
constexpr static char frPythonMin[] = "Minimum";
constexpr static char nlPythonMin[] = "Minimum";
constexpr static char ptPythonMin[] = "Mínimo";
constexpr static char itPythonMin[] = "Minimo";
constexpr static char dePythonMin[] = "Minimum";
constexpr static char esPythonMin[] = "Minimum";
constexpr static char huPythonMin[] = "Minimum";
constexpr static char enPythonMktime[] = "Convert tuple into time";
constexpr static char frPythonMktime[] = "Convertir le tuple en temps";
constexpr static char nlPythonMktime[] = "Tuple omzetten in tijd";
constexpr static char ptPythonMktime[] = "Convert tuple em tempo";
constexpr static char itPythonMktime[] = "Converti tuple in tempo";
constexpr static char dePythonMktime[] = "Tupel in Zeit umwandeln";
constexpr static char esPythonMktime[] = "Convertir tupla en tiempo";
constexpr static char huPythonMktime[] = "A tuple konvertálása az időben";
constexpr static char enPythonModf[] = "Fractional and integer parts of x";
constexpr static char frPythonModf[] = "Parties fractionnaire et entière";
constexpr static char nlPythonModf[] = "Fractionele en gehele delen van x";
constexpr static char ptPythonModf[] = "Partes inteira e frácionária de x";
constexpr static char itPythonModf[] = "Parti frazionarie e intere";
constexpr static char dePythonModf[] = "Bruch- und Ganzzahl-Anteile von x";
constexpr static char esPythonModf[] = "Fractional and integer parts of x";
constexpr static char huPythonModf[] = "x-nek tört és egész részei";
constexpr static char enPythonMonotonic[] = "Return monotonic time";
constexpr static char frPythonMonotonic[] = "Retourne le temps monotone";
constexpr static char nlPythonMonotonic[] = "Return monotonic time";
constexpr static char ptPythonMonotonic[] = "Return monotonic time";
constexpr static char itPythonMonotonic[] = "Return monotonic time";
constexpr static char dePythonMonotonic[] = "Monotone Zeit zurückgeben";
constexpr static char esPythonMonotonic[] = "Tiempo monótono de retorno";
constexpr static char huPythonMonotonic[] = "Meg fordítani a monoton idö";
constexpr static char enPythonNumpyFftFunction[] = "numpy.fft module prefix";
constexpr static char frPythonNumpyFftFunction[] = "Préfixe fonction du module numpy.fft";
constexpr static char nlPythonNumpyFftFunction[] = "numpy.fft module prefix";
constexpr static char ptPythonNumpyFftFunction[] = "Prefixo do módulo numpy.fft";
constexpr static char itPythonNumpyFftFunction[] = "Prefisso modulo numpy.fft";
constexpr static char dePythonNumpyFftFunction[] = "numpy.fft Modul-Präfix";
constexpr static char esPythonNumpyFftFunction[] = "numpy.fft module prefix";
constexpr static char huPythonNumpyFftFunction[] = "numpy.fft elötag";
constexpr static char enPythonNumpyFunction[] = "numpy module prefix";
constexpr static char frPythonNumpyFunction[] = "Préfixe fonction du module numpy";
constexpr static char nlPythonNumpyFunction[] = "numpy module prefix";
constexpr static char ptPythonNumpyFunction[] = "Prefixo do módulo numpy";
constexpr static char itPythonNumpyFunction[] = "Prefisso modulo numpy";
constexpr static char dePythonNumpyFunction[] = "numpy Modul-Präfix";
constexpr static char esPythonNumpyFunction[] = "numpy module prefix";
constexpr static char huPythonNumpyFunction[] = "numpy elötag";
constexpr static char enPythonNumpyLinalgFunction[] = "numpy.linalg module prefix";
constexpr static char frPythonNumpyLinalgFunction[] = "Préfixe fonction du module numpy.linalg";
constexpr static char nlPythonNumpyLinalgFunction[] = "numpy.linalg module prefix";
constexpr static char ptPythonNumpyLinalgFunction[] = "Prefixo do módulo numpy.linalg";
constexpr static char itPythonNumpyLinalgFunction[] = "Prefisso modulo numpy.linalg";
constexpr static char dePythonNumpyLinalgFunction[] = "numpy.linalg Modul-Präfix";
constexpr static char esPythonNumpyLinalgFunction[] = "numpy.linalg module prefix";
constexpr static char huPythonNumpyLinalgFunction[] = "numpy.linalg elötag";
constexpr static char enPythonOct[] = "Convert integer to octal";
constexpr static char frPythonOct[] = "Conversion en octal";
constexpr static char nlPythonOct[] = "Integer omzetten naar octaal";
constexpr static char ptPythonOct[] = "Converter número inteiro em octal";
constexpr static char itPythonOct[] = "Conversione in ottale";
constexpr static char dePythonOct[] = "Ganzzahl in Oktal umwandeln";
constexpr static char esPythonOct[] = "Convert integer to octal";
constexpr static char huPythonOct[] = "Decimális szám konvertálása octális számra";
constexpr static char enPythonOsGetlogin[] = "Get username";
constexpr static char frPythonOsGetlogin[] = "Donne le nom d'utilisateur";
constexpr static char nlPythonOsGetlogin[] = "Get username";
constexpr static char ptPythonOsGetlogin[] = "Get username";
constexpr static char itPythonOsGetlogin[] = "Get username";
constexpr static char dePythonOsGetlogin[] = "Benutzernamen holen";
constexpr static char esPythonOsGetlogin[] = "Get username";
constexpr static char huPythonOsGetlogin[] = "Get username";
constexpr static char enPythonOsListdir[] = "List files in memory";
constexpr static char frPythonOsListdir[] = "Liste les fichiers";
constexpr static char nlPythonOsListdir[] = "Lijstbestanden";
constexpr static char ptPythonOsListdir[] = "Listar ficheiros";
constexpr static char itPythonOsListdir[] = "Elenca file";
constexpr static char dePythonOsListdir[] = "Dateien im Speicher auflisten";
constexpr static char esPythonOsListdir[] = "Archivos de la lista";
constexpr static char huPythonOsListdir[] = "Fájlok listája";
constexpr static char enPythonOsRemove[] = "Remove file named filename";
constexpr static char frPythonOsRemove[] = "Supprime le fichier nommé filename";
constexpr static char nlPythonOsRemove[] = "Een bestand verwijderen";
constexpr static char ptPythonOsRemove[] = "Remover um ficheiro";
constexpr static char itPythonOsRemove[] = "Rimuovere un file";
constexpr static char dePythonOsRemove[] = "Datei namens Dateiname entfernen";
constexpr static char esPythonOsRemove[] = "Eliminar un archivo";
constexpr static char huPythonOsRemove[] = "Fájl törlése";
constexpr static char enPythonOsRename[] = "Rename file oldname to newname";
constexpr static char frPythonOsRename[] = "Renomme oldname en newname";
constexpr static char nlPythonOsRename[] = "Hernoem bestand";
constexpr static char ptPythonOsRename[] = "Renomear ficheiro";
constexpr static char itPythonOsRename[] = "Rinomina file";
constexpr static char dePythonOsRename[] = "Datei umbenennen von Alt nach Neu";
constexpr static char esPythonOsRename[] = "Renombrar archivo";
constexpr static char huPythonOsRename[] = "Fájl átnevezése";
constexpr static char enPythonOsUname[] = "Get infos about the system";
constexpr static char frPythonOsUname[] = "Donne des infos sur le système";
constexpr static char nlPythonOsUname[] = " Krijg systeeminfo";
constexpr static char ptPythonOsUname[] = " Obter informações do sistema";
constexpr static char itPythonOsUname[] = "Ottieni informazioni sul sistema";
constexpr static char dePythonOsUname[] = "Informationen über das System holen";
constexpr static char esPythonOsUname[] = " Información del sistema ";
constexpr static char huPythonOsUname[] = "Rendszer informaciók";
constexpr static char enPythonPercent[] = "Modulo";
constexpr static char frPythonPercent[] = "Modulo";
constexpr static char nlPythonPercent[] = "Modulo";
constexpr static char ptPythonPercent[] = "Módulo";
constexpr static char itPythonPercent[] = "Modulo";
constexpr static char dePythonPercent[] = "Modulo";
constexpr static char esPythonPercent[] = "Modulo";
constexpr static char huPythonPercent[] = "Modulo";
constexpr static char enPythonPhase[] = "Phase of z";
constexpr static char frPythonPhase[] = "Argument de z";
constexpr static char nlPythonPhase[] = "Fase van z in radialen";
constexpr static char ptPythonPhase[] = "Argumento de z";
constexpr static char itPythonPhase[] = "Argomento di z";
constexpr static char dePythonPhase[] = "Phase von z";
constexpr static char esPythonPhase[] = "Phase of z";
constexpr static char huPythonPhase[] = "z fázisa";
constexpr static char enPythonPlot[] = "Plot y versus x as lines";
constexpr static char frPythonPlot[] = "Trace y en fonction de x";
constexpr static char nlPythonPlot[] = "Plot y versus x als lijnen";
constexpr static char ptPythonPlot[] = "Desenhar y em função de x";
constexpr static char itPythonPlot[] = "Disegna y in f. di x come linee";
constexpr static char dePythonPlot[] = "Plotten von y gegen x als Linien";
constexpr static char esPythonPlot[] = "Plot y versus x as lines";
constexpr static char huPythonPlot[] = "y-t jelöli x függvényében";
constexpr static char enPythonPolar[] = "z in polar coordinates";
constexpr static char frPythonPolar[] = "Conversion en polaire";
constexpr static char nlPythonPolar[] = "z in poolcoördinaten";
constexpr static char ptPythonPolar[] = "z em coordenadas polares";
constexpr static char itPythonPolar[] = "Conversione in polare";
constexpr static char dePythonPolar[] = "z in Polarkoordinaten";
constexpr static char esPythonPolar[] = "z in polar coordinates";
constexpr static char huPythonPolar[] = "Verctorizálni";
constexpr static char enPythonPop[] = "Remove and return the last item";
constexpr static char frPythonPop[] = "Supprime le dernier élément";
constexpr static char nlPythonPop[] = "Verwijder en breng het laatste item terug";
constexpr static char ptPythonPop[] = "Remover o último item";
constexpr static char itPythonPop[] = "Cancella l'ultimo elemento";
constexpr static char dePythonPop[] = "Letztes Element abnehmen";
constexpr static char esPythonPop[] = "Remove and return the last item";
constexpr static char huPythonPop[] = "Az utolsó elemet el törölni";
constexpr static char enPythonPound[] = "Comment";
constexpr static char frPythonPound[] = "Commentaire";
constexpr static char nlPythonPound[] = "Opmerkingen";
constexpr static char ptPythonPound[] = "Comentário";
constexpr static char itPythonPound[] = "Commento";
constexpr static char dePythonPound[] = "Kommentar";
constexpr static char esPythonPound[] = "Comment";
constexpr static char huPythonPound[] = "Megjegyzés";
constexpr static char enPythonPower[] = "x raised to the power y";
constexpr static char frPythonPower[] = "x à la puissance y";
constexpr static char nlPythonPower[] = "x tot de macht y";
constexpr static char ptPythonPower[] = "x levantado a y";
constexpr static char itPythonPower[] = "x alla potenza y";
constexpr static char dePythonPower[] = "x erhöht mit der Potenz y";
constexpr static char esPythonPower[] = "x raised to the power y";
constexpr static char huPythonPower[] = "x y. kitevö";
constexpr static char enPythonPrint[] = "Print object";
constexpr static char frPythonPrint[] = "Affiche l'objet";
constexpr static char nlPythonPrint[] = "Print object";
constexpr static char ptPythonPrint[] = "Mostrar o objeto";
constexpr static char itPythonPrint[] = "Visualizza l'oggetto";
constexpr static char dePythonPrint[] = "Objekt drucken";
constexpr static char esPythonPrint[] = "Print object";
constexpr static char huPythonPrint[] = "Ki irni a elemeket";
constexpr static char enPythonRTCmode[] = "Get current RTC mode";
constexpr static char frPythonRTCmode[] = "Obtenir le mode RTC actuel";
constexpr static char nlPythonRTCmode[] = "Huidige RTC-modus kregen";
constexpr static char ptPythonRTCmode[] = "Obter o modo RTC atual";
constexpr static char itPythonRTCmode[] = "Ottieni la modalità RTC corrente";
constexpr static char dePythonRTCmode[] = "Aktuellen RTC-Modus abrufen";
constexpr static char esPythonRTCmode[] = "Obtener el modo RTC actual";
constexpr static char huPythonRTCmode[] = "Aktuális RTC mód";
constexpr static char enPythonRadians[] = "Convert x from degrees to radians";
constexpr static char frPythonRadians[] = "Conversion de degrés en radians";
constexpr static char nlPythonRadians[] = "Zet x om van graden naar radialen";
constexpr static char ptPythonRadians[] = "Converter x de graus para radianos";
constexpr static char itPythonRadians[] = "Conversione da gradi a radianti";
constexpr static char dePythonRadians[] = "x von Grad in Bogenmaß umrechnen";
constexpr static char esPythonRadians[] = "Convert x from degrees to radians";
constexpr static char huPythonRadians[] = "Fokról radiánra konvertálni";
constexpr static char enPythonRandint[] = "Random integer in [a,b]";
constexpr static char frPythonRandint[] = "Entier aléatoire dans [a,b]";
constexpr static char nlPythonRandint[] = "Geeft willek. integer in [a,b]";
constexpr static char ptPythonRandint[] = "Número inteiro aleatório em [a,b]";
constexpr static char itPythonRandint[] = "Intero aleatorio in [a,b]";
constexpr static char dePythonRandint[] = "Zufällige Ganzzahl in [a,b]";
constexpr static char esPythonRandint[] = "Random integer in [a,b]";
constexpr static char huPythonRandint[] = "Véletlen egész szám [a;b] -ban";
constexpr static char enPythonRandom[] = "Floating point number in [0,1]";
constexpr static char frPythonRandom[] = "Nombre décimal dans [0,1[";
constexpr static char nlPythonRandom[] = "Een willekeurig getal in [0,1)";
constexpr static char ptPythonRandom[] = "Número decimal em [0,1[";
constexpr static char itPythonRandom[] = "Numero aleatorio in [0,1[";
constexpr static char dePythonRandom[] = "Fließkommazahl in [0,1]";
constexpr static char esPythonRandom[] = "Floating point number in [0,1[";
constexpr static char huPythonRandom[] = "Decimális szám [0;1] -ban";
constexpr static char enPythonRandomFunction[] = "random module function prefix";
constexpr static char frPythonRandomFunction[] = "Préfixe fonction du module random";
constexpr static char nlPythonRandomFunction[] = "random module voorvoegsel";
constexpr static char ptPythonRandomFunction[] = "Prefixo da função do módulo random";
constexpr static char itPythonRandomFunction[] = "Prefisso funzione modulo casuale";
constexpr static char dePythonRandomFunction[] = "Random-Modul Funktionspräfix";
constexpr static char esPythonRandomFunction[] = "random module function prefix";
constexpr static char huPythonRandomFunction[] = "random modul funkció elötag";
constexpr static char enPythonRandrange[] = "Random number in range(start,stop)";
constexpr static char frPythonRandrange[] = "Nombre dans range(start,stop)";
constexpr static char nlPythonRandrange[] = "Willek. getal in range(start, stop)";
constexpr static char ptPythonRandrange[] = "Número aleatório em [start,stop-1]";
constexpr static char itPythonRandrange[] = "Numero dentro il range(start, stop)";
constexpr static char dePythonRandrange[] = "Zufallszahl im Bereich(start,stop)";
constexpr static char esPythonRandrange[] = "Random number in range(start,stop)";
constexpr static char huPythonRandrange[] = "Véletlen szám range(start,stop)-ban";
constexpr static char enPythonRangeStartStop[] = "List from start to stop-1";
constexpr static char frPythonRangeStartStop[] = "Liste de start à stop-1";
constexpr static char nlPythonRangeStartStop[] = "Lijst van start tot stop-1";
constexpr static char ptPythonRangeStartStop[] = "Lista de start a stop-1";
constexpr static char itPythonRangeStartStop[] = "Lista da start a stop-1";
constexpr static char dePythonRangeStartStop[] = "Liste von Start bis Stop-1";
constexpr static char esPythonRangeStartStop[] = "List from start to stop-1";
constexpr static char huPythonRangeStartStop[] = "start-tol stop-ig listája";
constexpr static char enPythonRangeStop[] = "List from 0 to stop-1";
constexpr static char frPythonRangeStop[] = "Liste de 0 à stop-1";
constexpr static char nlPythonRangeStop[] = "Lijst van 0 tot stop-1";
constexpr static char ptPythonRangeStop[] = "Lista de 0 a stop-1";
constexpr static char itPythonRangeStop[] = "Lista da 0 a stop-1";
constexpr static char dePythonRangeStop[] = "Liste von 0 bis Stop-1";
constexpr static char esPythonRangeStop[] = "List from 0 to stop-1";
constexpr static char huPythonRangeStop[] = "0 tol stop-ig lista";
constexpr static char enPythonReal[] = "Real part of z";
constexpr static char frPythonReal[] = "Partie réelle de z";
constexpr static char nlPythonReal[] = "Reëel deel van z";
constexpr static char ptPythonReal[] = "Parte real de z";
constexpr static char itPythonReal[] = "Parte reale di z";
constexpr static char dePythonReal[] = "Realteil von z";
constexpr static char esPythonReal[] = "Real part of z";
constexpr static char huPythonReal[] = "z valódi része";
constexpr static char enPythonRect[] = "Convert to cartesian coordinates";
constexpr static char frPythonRect[] = "Conversion en algébrique";
constexpr static char nlPythonRect[] = "z in cartesiaanse coördinaten";
constexpr static char ptPythonRect[] = "Converter para coordenadas cartesianas";
constexpr static char itPythonRect[] = "Converte in coordinate algebriche";
constexpr static char dePythonRect[] = "In kartesische Koordinaten";
constexpr static char esPythonRect[] = "Convert to cartesian coordinates";
constexpr static char huPythonRect[] = "Algebrai számra konvertálni";
constexpr static char enPythonRemove[] = "Remove the first occurrence of x";
constexpr static char frPythonRemove[] = "Supprime le premier x de la liste";
constexpr static char nlPythonRemove[] = "Verwijder het eerste voorkomen van x";
constexpr static char ptPythonRemove[] = "Remover a primeira ocorrência de x";
constexpr static char itPythonRemove[] = "Cancella la prima x dalla lista";
constexpr static char dePythonRemove[] = "Entferne das erste Vorkommen von x";
constexpr static char esPythonRemove[] = "Remove the first occurrence of x";
constexpr static char huPythonRemove[] = "Elsö x elöfordulását törolni";
constexpr static char enPythonReverse[] = "Reverse the elements of the list";
constexpr static char frPythonReverse[] = "Inverse les éléments de la liste";
constexpr static char nlPythonReverse[] = "Keer de elementen van de lijst om";
constexpr static char ptPythonReverse[] = "Inverter os elementos da lista";
constexpr static char itPythonReverse[] = "Inverte gli elementi della lista";
constexpr static char dePythonReverse[] = "Kehrt die Elemente der Liste um";
constexpr static char esPythonReverse[] = "Reverse the elements of the list";
constexpr static char huPythonReverse[] = "A lista elemeit megfordítani (másik irány)";
constexpr static char enPythonRound[] = "Round to n digits";
constexpr static char frPythonRound[] = "Arrondi à n décimales";
constexpr static char nlPythonRound[] = "Rond af op n cijfers";
constexpr static char ptPythonRound[] = "Arredondar para n dígitos";
constexpr static char itPythonRound[] = "Arrotondato a n cifre decimali";
constexpr static char dePythonRound[] = "Runden auf n Stellen";
constexpr static char esPythonRound[] = "Round to n digits";
constexpr static char huPythonRound[] = "N számjegyre kerekítni";
constexpr static char enPythonScatter[] = "Draw a scatter plot of y versus x";
constexpr static char frPythonScatter[] = "Nuage des points (x,y)";
constexpr static char nlPythonScatter[] = "Teken scatterplot van y versus x";
constexpr static char ptPythonScatter[] = "Gráfico de dispersão (x,y)";
constexpr static char itPythonScatter[] = "Diagramma dispersione y in f. di x";
constexpr static char dePythonScatter[] = "Streudiagramm von y gg. x zeichnen";
constexpr static char esPythonScatter[] = "Draw a scatter plot of y versus x";
constexpr static char huPythonScatter[] = "(x,y) halmaza";
constexpr static char enPythonScipyFunction[] = "scipy module prefix";
constexpr static char frPythonScipyFunction[] = "Préfixe fonction du module scipy";
constexpr static char nlPythonScipyFunction[] = "scipy module prefix";
constexpr static char ptPythonScipyFunction[] = "Prefixo do módulo scipy";
constexpr static char itPythonScipyFunction[] = "Prefisso modulo scipy";
constexpr static char dePythonScipyFunction[] = "scipy Modul-Präfix";
constexpr static char esPythonScipyFunction[] = "scipy module prefix";
constexpr static char huPythonScipyFunction[] = "scipy elötag";
constexpr static char enPythonScipyLinalgFunction[] = "scipy.linalg module prefix";
constexpr static char frPythonScipyLinalgFunction[] = "Préfixe fonction du module scipy.linalg";
constexpr static char nlPythonScipyLinalgFunction[] = "scipy.linalg module prefix";
constexpr static char ptPythonScipyLinalgFunction[] = "Prefixo do módulo scipy.linalg";
constexpr static char itPythonScipyLinalgFunction[] = "Prefisso modulo scipy.linalg";
constexpr static char dePythonScipyLinalgFunction[] = "scipy.linalg Modul-Präfix";
constexpr static char esPythonScipyLinalgFunction[] = "scipy.linalg module prefix";
constexpr static char huPythonScipyLinalgFunction[] = "scipy.linalg elötag";
constexpr static char enPythonScipyOptimizeFunction[] = "scipy.optimize module prefix";
constexpr static char frPythonScipyOptimizeFunction[] = "Préfixe fonction du module scipy.optimize";
constexpr static char nlPythonScipyOptimizeFunction[] = "scipy.optimize module prefix";
constexpr static char ptPythonScipyOptimizeFunction[] = "Prefixo do módulo scipy.optimize";
constexpr static char itPythonScipyOptimizeFunction[] = "Prefisso modulo scipy.optimize";
constexpr static char dePythonScipyOptimizeFunction[] = "scipy.optimize Modul-Präfix";
constexpr static char esPythonScipyOptimizeFunction[] = "scipy.optimize module prefix";
constexpr static char huPythonScipyOptimizeFunction[] = "scipy.optimize elötag";
constexpr static char enPythonScipySignalFunction[] = "scipy.signal module prefix";
constexpr static char frPythonScipySignalFunction[] = "Préfixe fonction du module scipy.signal";
constexpr static char nlPythonScipySignalFunction[] = "scipy.signal module prefix";
constexpr static char ptPythonScipySignalFunction[] = "Prefixo do módulo scipy.signal";
constexpr static char itPythonScipySignalFunction[] = "Prefisso modulo scipy.signal";
constexpr static char dePythonScipySignalFunction[] = "scipy.signal Modul-Präfix";
constexpr static char esPythonScipySignalFunction[] = "scipy.signal module prefix";
constexpr static char huPythonScipySignalFunction[] = "scipy.signal elötag";
constexpr static char enPythonScipySpecialFunction[] = "scipy.special module prefix";
constexpr static char frPythonScipySpecialFunction[] = "Préfixe fonction du module scipy.special";
constexpr static char nlPythonScipySpecialFunction[] = "scipy.special module prefix";
constexpr static char ptPythonScipySpecialFunction[] = "Prefixo do módulo scipy.special";
constexpr static char itPythonScipySpecialFunction[] = "Prefisso modulo scipy.special";
constexpr static char dePythonScipySpecialFunction[] = "scipy.special Modul-Präfix";
constexpr static char esPythonScipySpecialFunction[] = "scipy.special module prefix";
constexpr static char huPythonScipySpecialFunction[] = "scipy.special elötag";
constexpr static char enPythonSeed[] = "Initialize random number generator";
constexpr static char frPythonSeed[] = "Initialiser générateur aléatoire";
constexpr static char nlPythonSeed[] = "Start willek. getallengenerator";
constexpr static char ptPythonSeed[] = "Iniciar gerador aleatório";
constexpr static char itPythonSeed[] = "Inizializza il generatore random";
constexpr static char dePythonSeed[] = "Zufallszahlengenerator initiieren";
constexpr static char esPythonSeed[] = "Initialize random number generator";
constexpr static char huPythonSeed[] = "Inicializálni a véletlenszám-választót";
constexpr static char enPythonSetBrightness[] = "Set brightness level";
constexpr static char frPythonSetBrightness[] = "Définir le niveau de luminosité";
constexpr static char nlPythonSetBrightness[] = "Set brightness level";
constexpr static char ptPythonSetBrightness[] = "Definir nível de brilho";
constexpr static char itPythonSetBrightness[] = "Imposta livello di luminosità";
constexpr static char dePythonSetBrightness[] = "Helligkeitsstufe festlegen";
constexpr static char esPythonSetBrightness[] = "Establecer nivel de brillo";
constexpr static char huPythonSetBrightness[] = "Fényerőszint beállítása";
constexpr static char enPythonSetLocaltime[] = "Set time from a tuple";
constexpr static char frPythonSetLocaltime[] = "Définir l'heure à partir d'un tuple";
constexpr static char nlPythonSetLocaltime[] = "Stel de tijd in vanaf een tuple";
constexpr static char ptPythonSetLocaltime[] = "Definir tempo a partir de uma tupla";
constexpr static char itPythonSetLocaltime[] = "Imposta il tempo da una tupla";
constexpr static char dePythonSetLocaltime[] = "Zeit aus einem Tupel einstellen";
constexpr static char esPythonSetLocaltime[] = "Establecer tiempo desde una tupla";
constexpr static char huPythonSetLocaltime[] = "Idő beállítása egy csomóból";
constexpr static char enPythonSetPixel[] = "Color pixel (x,y)";
constexpr static char frPythonSetPixel[] = "Colore le pixel (x,y)";
constexpr static char nlPythonSetPixel[] = "Kleur pixel (x,y)";
constexpr static char ptPythonSetPixel[] = "Cor do pixel (x,y)";
constexpr static char itPythonSetPixel[] = "Colora il pixel (x,y)";
constexpr static char dePythonSetPixel[] = "Pixel (x,y) einfärben";
constexpr static char esPythonSetPixel[] = "Color pixel (x,y)";
constexpr static char huPythonSetPixel[] = "Az (x,y) pixel-t ki szinezni";
constexpr static char enPythonSetRTCmode[] = "Set RTC mode";
constexpr static char frPythonSetRTCmode[] = "Définir le mode RTC";
constexpr static char nlPythonSetRTCmode[] = "RTC-modus instellen";
constexpr static char ptPythonSetRTCmode[] = "Definir o modo RTC";
constexpr static char itPythonSetRTCmode[] = "Imposta modalità RTC";
constexpr static char dePythonSetRTCmode[] = "RTC-Modus festlegen";
constexpr static char esPythonSetRTCmode[] = "Establecer modo RTC";
constexpr static char huPythonSetRTCmode[] = "RTC mód beállítása";
constexpr static char enPythonShow[] = "Display the figure";
constexpr static char frPythonShow[] = "Affiche la figure";
constexpr static char nlPythonShow[] = "Figuur weergeven";
constexpr static char ptPythonShow[] = "Mostrar a figura";
constexpr static char itPythonShow[] = "Mostra la figura";
constexpr static char dePythonShow[] = "Figur anzeigen";
constexpr static char esPythonShow[] = "Display the figure";
constexpr static char huPythonShow[] = "Mutassa az ábrát";
constexpr static char enPythonSin[] = "Sine";
constexpr static char frPythonSin[] = "Sinus";
constexpr static char nlPythonSin[] = "Sinus";
constexpr static char ptPythonSin[] = "Seno";
constexpr static char itPythonSin[] = "Seno";
constexpr static char dePythonSin[] = "Sinus";
constexpr static char esPythonSin[] = "Sine";
constexpr static char huPythonSin[] = "Szinusz";
constexpr static char enPythonSingleQuote[] = "Single quote";
constexpr static char frPythonSingleQuote[] = "Apostrophe";
constexpr static char nlPythonSingleQuote[] = "Enkele aanhalingstekens";
constexpr static char ptPythonSingleQuote[] = "Apóstrofo";
constexpr static char itPythonSingleQuote[] = "Apostrofo";
constexpr static char dePythonSingleQuote[] = "Einfaches Anführungszeichen";
constexpr static char esPythonSingleQuote[] = "Single quote";
constexpr static char huPythonSingleQuote[] = "apostróf";
constexpr static char enPythonSinh[] = "Hyperbolic sine";
constexpr static char frPythonSinh[] = "Sinus hyperbolique";
constexpr static char nlPythonSinh[] = "Sinus hyperbolicus";
constexpr static char ptPythonSinh[] = "Seno hiperbólico";
constexpr static char itPythonSinh[] = "Seno iperbolico";
constexpr static char dePythonSinh[] = "Hyperbolischer Sinus";
constexpr static char esPythonSinh[] = "Hyperbolic sine";
constexpr static char huPythonSinh[] = "Hiperbolikus szinusz";
constexpr static char enPythonSleep[] = "Suspend the execution for t seconds";
constexpr static char frPythonSleep[] = "Suspend l'exécution t secondes";
constexpr static char nlPythonSleep[] = "Stel executie voor t seconden uit";
constexpr static char ptPythonSleep[] = "Suspender a execução por t segundos";
constexpr static char itPythonSleep[] = "Sospende l'esecuzione t secondi";
constexpr static char dePythonSleep[] = "Ausführung aussetzen für t Sekunden";
constexpr static char esPythonSleep[] = "Suspend the execution for t seconds";
constexpr static char huPythonSleep[] = "t másodpercre meg állitani a programmot";
constexpr static char enPythonSort[] = "Sort the list";
constexpr static char frPythonSort[] = "Trie la liste";
constexpr static char nlPythonSort[] = "Sorteer de lijst";
constexpr static char ptPythonSort[] = "Ordenar a lista";
constexpr static char itPythonSort[] = "Ordina l'elenco";
constexpr static char dePythonSort[] = "Die Liste sortieren";
constexpr static char esPythonSort[] = "Sort the list";
constexpr static char huPythonSort[] = "A listát rendezni";
constexpr static char enPythonSqrt[] = "Square root";
constexpr static char frPythonSqrt[] = "Racine carrée";
constexpr static char nlPythonSqrt[] = "Vierkantswortel";
constexpr static char ptPythonSqrt[] = "Raiz quadrada";
constexpr static char itPythonSqrt[] = "Radice quadrata";
constexpr static char dePythonSqrt[] = "Quadratwurzel";
constexpr static char esPythonSqrt[] = "Square root";
constexpr static char huPythonSqrt[] = "Négyzetgyök";
constexpr static char enPythonSum[] = "Sum the items of a list";
constexpr static char frPythonSum[] = "Somme des éléments de la liste";
constexpr static char nlPythonSum[] = "Sommeer de items van een lijst";
constexpr static char ptPythonSum[] = "Soma dos itens da lista";
constexpr static char itPythonSum[] = "Somma degli elementi della lista";
constexpr static char dePythonSum[] = "Summe der Elemente einer Liste";
constexpr static char esPythonSum[] = "Sum the items of a list";
constexpr static char huPythonSum[] = "Osszeadni a lista elemeit";
constexpr static char enPythonSymbolExp[] = "Bitwise exclusive or";
constexpr static char frPythonSymbolExp[] = "Ou exclusif logique";
constexpr static char nlPythonSymbolExp[] = "Bitsgewijze exclusieve of";
constexpr static char ptPythonSymbolExp[] = "Operador binário exclusivo or";
constexpr static char itPythonSymbolExp[] = "Disgiunzione esclusiva";
constexpr static char dePythonSymbolExp[] = "Bitweises exklusives oder";
constexpr static char esPythonSymbolExp[] = "Bitwise exclusive or";
constexpr static char huPythonSymbolExp[] = "logikus exkluzív vagy pedig";
constexpr static char enPythonSysByteorder[] = "The byte order of the system";
constexpr static char frPythonSysByteorder[] = "L'ordre des octets du système";
constexpr static char nlPythonSysByteorder[] = "The byte order of the system";
constexpr static char ptPythonSysByteorder[] = "The byte order of the system";
constexpr static char itPythonSysByteorder[] = "The byte order of the system";
constexpr static char dePythonSysByteorder[] = "The byte order of the system";
constexpr static char esPythonSysByteorder[] = "The byte order of the system";
constexpr static char huPythonSysByteorder[] = "The byte order of the system";
constexpr static char enPythonSysExit[] = "Terminate current program";
constexpr static char frPythonSysExit[] = "Termine le programme";
constexpr static char nlPythonSysExit[] = "Terminate current program";
constexpr static char ptPythonSysExit[] = "Terminate current program";
constexpr static char itPythonSysExit[] = "Terminate current program";
constexpr static char dePythonSysExit[] = "Terminate current program";
constexpr static char esPythonSysExit[] = "Terminate current program";
constexpr static char huPythonSysExit[] = "Terminate current program";
constexpr static char enPythonSysImplementation[] = "Information about Python";
constexpr static char frPythonSysImplementation[] = "Information sur Python";
constexpr static char nlPythonSysImplementation[] = "Information about Python";
constexpr static char ptPythonSysImplementation[] = "Information about Python";
constexpr static char itPythonSysImplementation[] = "Information about Python";
constexpr static char dePythonSysImplementation[] = "Information about Python";
constexpr static char esPythonSysImplementation[] = "Information about Python";
constexpr static char huPythonSysImplementation[] = "Information about Python";
constexpr static char enPythonSysModules[] = "Dictionary of loaded modules";
constexpr static char frPythonSysModules[] = "Dictionnaire des modules chargés";
constexpr static char nlPythonSysModules[] = "Dictionary of loaded modules";
constexpr static char ptPythonSysModules[] = "Dictionary of loaded modules";
constexpr static char itPythonSysModules[] = "Dictionary of loaded modules";
constexpr static char dePythonSysModules[] = "Dictionary of loaded modules";
constexpr static char esPythonSysModules[] = "Dictionary of loaded modules";
constexpr static char huPythonSysModules[] = "Dictionary of loaded modules";
constexpr static char enPythonSysPrintexception[] = "Print exception";
constexpr static char frPythonSysPrintexception[] = "Imprime une exception";
constexpr static char nlPythonSysPrintexception[] = "Print exception";
constexpr static char ptPythonSysPrintexception[] = "Print exception";
constexpr static char itPythonSysPrintexception[] = "Print exception";
constexpr static char dePythonSysPrintexception[] = "Print exception";
constexpr static char esPythonSysPrintexception[] = "Print exception";
constexpr static char huPythonSysPrintexception[] = "Print exception";
constexpr static char enPythonSysVersion[] = "Python language version (string)";
constexpr static char frPythonSysVersion[] = "Version du langage Python (string)";
constexpr static char nlPythonSysVersion[] = "Python language version (string)";
constexpr static char ptPythonSysVersion[] = "Python language version (string)";
constexpr static char itPythonSysVersion[] = "Python language version (string)";
constexpr static char dePythonSysVersion[] = "Python language version (string)";
constexpr static char esPythonSysVersion[] = "Python language version (string)";
constexpr static char huPythonSysVersion[] = "Python language version (string)";
constexpr static char enPythonSysVersioninfo[] = "Python language version (tuple)";
constexpr static char frPythonSysVersioninfo[] = "Version du langage Python (tuple)";
constexpr static char nlPythonSysVersioninfo[] = "Python language version (tuple)";
constexpr static char ptPythonSysVersioninfo[] = "Python language version (tuple)";
constexpr static char itPythonSysVersioninfo[] = "Python language version (tuple)";
constexpr static char dePythonSysVersioninfo[] = "Python language version (tuple)";
constexpr static char esPythonSysVersioninfo[] = "Python language version (tuple)";
constexpr static char huPythonSysVersioninfo[] = "Python language version (tuple)";
constexpr static char enPythonTab[] = "Tabulation";
constexpr static char frPythonTab[] = "Tabulation";
constexpr static char nlPythonTab[] = "Tabulatie";
constexpr static char ptPythonTab[] = "Tabulação";
constexpr static char itPythonTab[] = "Tabulazione";
constexpr static char dePythonTab[] = "Tabulator";
constexpr static char esPythonTab[] = "Tabulation";
constexpr static char huPythonTab[] = "Táblázat";
constexpr static char enPythonTan[] = "Tangent";
constexpr static char frPythonTan[] = "Tangente";
constexpr static char nlPythonTan[] = "Tangens";
constexpr static char ptPythonTan[] = "Tangente";
constexpr static char itPythonTan[] = "Tangente";
constexpr static char dePythonTan[] = "Tangens";
constexpr static char esPythonTan[] = "Tangent";
constexpr static char huPythonTan[] = "Erintö (tan)";
constexpr static char enPythonTanh[] = "Hyperbolic tangent";
constexpr static char frPythonTanh[] = "Tangente hyperbolique";
constexpr static char nlPythonTanh[] = "Tangens hyperbolicus";
constexpr static char ptPythonTanh[] = "Tangente hiperbólica";
constexpr static char itPythonTanh[] = "Tangente iperbolica";
constexpr static char dePythonTanh[] = "Hyperbolischer Tangens";
constexpr static char esPythonTanh[] = "Hyperbolic tangent";
constexpr static char huPythonTanh[] = "Hiperbolikus érintö (tan)";
constexpr static char enPythonText[] = "Display a text at (x,y) coordinates";
constexpr static char frPythonText[] = "Affiche un texte en (x,y)";
constexpr static char nlPythonText[] = "Geef tekst weer op coördinaten (x,y)";
constexpr static char ptPythonText[] = "Mostrar um texto em (x,y)";
constexpr static char itPythonText[] = "Mostra un testo in (x,y)";
constexpr static char dePythonText[] = "Text an (x,y) Koordinaten anzeigen";
constexpr static char esPythonText[] = "Display a text at (x,y) coordinates";
constexpr static char huPythonText[] = "(x,y) nél egy szöveget irni";
constexpr static char enPythonTime[] = "Get the current timestamp";
constexpr static char frPythonTime[] = "Obtenir l'horodatage actuel";
constexpr static char nlPythonTime[] = "Haal de huidige tijdstempel";
constexpr static char ptPythonTime[] = "Obter o estamp de tempo atual";
constexpr static char itPythonTime[] = "Ottieni il timestamp corrente";
constexpr static char dePythonTime[] = "Abrufen des aktuellen Zeitstempels";
constexpr static char esPythonTime[] = "Obtener la marca de tiempo actual";
constexpr static char huPythonTime[] = "Az aktuális időbélyeg letöltése";
constexpr static char enPythonTimeFunction[] = "time module function prefix";
constexpr static char frPythonTimeFunction[] = "Préfixe fonction module time";
constexpr static char nlPythonTimeFunction[] = "time module voorvoegsel";
constexpr static char ptPythonTimeFunction[] = "Prefixo da função do módulo time";
constexpr static char itPythonTimeFunction[] = "Prefisso funzione modulo time";
constexpr static char dePythonTimeFunction[] = "Time-Modul-Funktionspräfix";
constexpr static char esPythonTimeFunction[] = "time module function prefix";
constexpr static char huPythonTimeFunction[] = "time funkció elötag";
constexpr static char enPythonTrunc[] = "x truncated to an integer";
constexpr static char frPythonTrunc[] = "Troncature entière";
constexpr static char nlPythonTrunc[] = "x afgeknot tot een integer";
constexpr static char ptPythonTrunc[] = "x truncado a um número inteiro";
constexpr static char itPythonTrunc[] = "Troncamento intero";
constexpr static char dePythonTrunc[] = "x abgeschnitten auf eine ganze Zahl";
constexpr static char esPythonTrunc[] = "x truncated to an integer";
constexpr static char huPythonTrunc[] = "Egész csonka (?)";
constexpr static char enPythonTurtleBackward[] = "Move backward by x pixels";
constexpr static char frPythonTurtleBackward[] = "Recule de x pixels";
constexpr static char nlPythonTurtleBackward[] = "Ga achterwaarts met x pixels";
constexpr static char ptPythonTurtleBackward[] = "Recuar x pixels";
constexpr static char itPythonTurtleBackward[] = "Indietreggia di x pixels";
constexpr static char dePythonTurtleBackward[] = "Um x Pixel rückwärts bewegen";
constexpr static char esPythonTurtleBackward[] = "Move backward by x pixels";
constexpr static char huPythonTurtleBackward[] = "x pixelt hátra";
constexpr static char enPythonTurtleCircle[] = "Circle of radius r pixels";
constexpr static char frPythonTurtleCircle[] = "Cercle de rayon r pixels";
constexpr static char nlPythonTurtleCircle[] = "Cirkel van straal r pixels";
constexpr static char ptPythonTurtleCircle[] = "Circunferência de raio r pixels";
constexpr static char itPythonTurtleCircle[] = "Cerchio di raggio r pixel";
constexpr static char dePythonTurtleCircle[] = "Kreis mit Radius r Pixel";
constexpr static char esPythonTurtleCircle[] = "Circle of radius r pixels";
constexpr static char huPythonTurtleCircle[] = "r pixel sugarú kört rajzolni";
constexpr static char enPythonTurtleColor[] = "Set the pen color";
constexpr static char frPythonTurtleColor[] = "Modifie la couleur du tracé";
constexpr static char nlPythonTurtleColor[] = "Stel de kleur van de pen in";
constexpr static char ptPythonTurtleColor[] = "Definir a cor da caneta";
constexpr static char itPythonTurtleColor[] = "Modifica il colore del tratto";
constexpr static char dePythonTurtleColor[] = "Setzt die Stiftfarbe";
constexpr static char esPythonTurtleColor[] = "Set the pen color";
constexpr static char huPythonTurtleColor[] = "Toll szinét beállitani";
constexpr static char enPythonTurtleColorMode[] = "Set the color mode to 1.0 or 255";
constexpr static char frPythonTurtleColorMode[] = "Met le mode de couleur à 1.0 ou 255";
constexpr static char nlPythonTurtleColorMode[] = "Stel de kleurmodus in op 1.0 of 255";
constexpr static char ptPythonTurtleColorMode[] = "Define modo de cor para 1.0 ou 255";
constexpr static char itPythonTurtleColorMode[] = "Imposta modalità colore a 1.0 o 255";
constexpr static char dePythonTurtleColorMode[] = "Setzt Farbmodus auf 1.0 oder 255";
constexpr static char esPythonTurtleColorMode[] = "Set the color mode to 1.0 or 255";
constexpr static char huPythonTurtleColorMode[] = "Szin módot 1.0-ra vagy 255-ra állitani";
constexpr static char enPythonTurtleForward[] = "Move forward by x pixels";
constexpr static char frPythonTurtleForward[] = "Avance de x pixels";
constexpr static char nlPythonTurtleForward[] = "Ga voorwaarts met x pixels";
constexpr static char ptPythonTurtleForward[] = "Avançar x pixels";
constexpr static char itPythonTurtleForward[] = "Avanza di x pixel";
constexpr static char dePythonTurtleForward[] = "Um x Pixel vorwärts bewegen";
constexpr static char esPythonTurtleForward[] = "Move forward by x pixels";
constexpr static char huPythonTurtleForward[] = "x pixelt elölre";
constexpr static char enPythonTurtleFunction[] = "turtle module function prefix";
constexpr static char frPythonTurtleFunction[] = "Préfixe fonction du module turtle";
constexpr static char nlPythonTurtleFunction[] = "turtle module voorvoegsel";
constexpr static char ptPythonTurtleFunction[] = "Prefixo da função do módulo turtle";
constexpr static char itPythonTurtleFunction[] = "Prefisso funzione modello turtle";
constexpr static char dePythonTurtleFunction[] = "Turtle-Modul-Funktionspräfix";
constexpr static char esPythonTurtleFunction[] = "turtle module function prefix";
constexpr static char huPythonTurtleFunction[] = "turtle modul funkció elötag";
constexpr static char enPythonTurtleGoto[] = "Move to (x,y) coordinates";
constexpr static char frPythonTurtleGoto[] = "Va au point de coordonnées (x,y)";
constexpr static char nlPythonTurtleGoto[] = "Verplaats naar (x,y) coordinaten";
constexpr static char ptPythonTurtleGoto[] = "Ir paras as coordenadas (x,y)";
constexpr static char itPythonTurtleGoto[] = "Spostati alle coordinate (x,y)";
constexpr static char dePythonTurtleGoto[] = "Bewegen zu (x,y) Koordinaten";
constexpr static char esPythonTurtleGoto[] = "Move to (x,y) coordinates";
constexpr static char huPythonTurtleGoto[] = "Menjen a (x,y) koordinátákra";
constexpr static char enPythonTurtleHeading[] = "Return the current heading";
constexpr static char frPythonTurtleHeading[] = "Renvoie l'orientation actuelle";
constexpr static char nlPythonTurtleHeading[] = "Ga terug naar de huidige koers";
constexpr static char ptPythonTurtleHeading[] = "Voltar para a orientação atual";
constexpr static char itPythonTurtleHeading[] = "Restituisce l'orientamento attuale";
constexpr static char dePythonTurtleHeading[] = "Liefert den aktuellen Kurs";
constexpr static char esPythonTurtleHeading[] = "Return the current heading";
constexpr static char huPythonTurtleHeading[] = "Visszaadja az aktuális irányt";
constexpr static char enPythonTurtleHideturtle[] = "Hide the turtle";
constexpr static char frPythonTurtleHideturtle[] = "Masque la tortue";
constexpr static char nlPythonTurtleHideturtle[] = "Verberg de schildpad";
constexpr static char ptPythonTurtleHideturtle[] = "Esconder o turtle";
constexpr static char itPythonTurtleHideturtle[] = "Nascondi la tartaruga";
constexpr static char dePythonTurtleHideturtle[] = "Versteckt den Igel";
constexpr static char esPythonTurtleHideturtle[] = "Hide the turtle";
constexpr static char huPythonTurtleHideturtle[] = "A teknös elrejtése";
constexpr static char enPythonTurtleIsdown[] = "Return True if the pen is down";
constexpr static char frPythonTurtleIsdown[] = "True si le crayon est abaissé";
constexpr static char nlPythonTurtleIsdown[] = "Geeft True als pen naar beneden is";
constexpr static char ptPythonTurtleIsdown[] = "True se a caneta está pressionada";
constexpr static char itPythonTurtleIsdown[] = "True se la penna è abbassata";
constexpr static char dePythonTurtleIsdown[] = "Wahr, wenn der Stift unten ist";
constexpr static char esPythonTurtleIsdown[] = "Return True if the pen is down";
constexpr static char huPythonTurtleIsdown[] = "True-t válaszol ha a toll irás pozícióban van";
constexpr static char enPythonTurtleLeft[] = "Turn left by a degrees";
constexpr static char frPythonTurtleLeft[] = "Pivote de a degrés vers la gauche";
constexpr static char nlPythonTurtleLeft[] = "Ga linksaf met a graden";
constexpr static char ptPythonTurtleLeft[] = "Vira à esquerda por a graus";
constexpr static char itPythonTurtleLeft[] = "Ruota di a gradi a sinistra";
constexpr static char dePythonTurtleLeft[] = "Nach links um ein Grad drehen";
constexpr static char esPythonTurtleLeft[] = "Turn left by a degrees";
constexpr static char huPythonTurtleLeft[] = "a fokkot forduljon balra";
constexpr static char enPythonTurtlePendown[] = "Pull the pen down";
constexpr static char frPythonTurtlePendown[] = "Abaisse le crayon";
constexpr static char nlPythonTurtlePendown[] = "Zet de pen naar beneden";
constexpr static char ptPythonTurtlePendown[] = "Puxar a caneta para baixo";
constexpr static char itPythonTurtlePendown[] = "Abbassa la penna";
constexpr static char dePythonTurtlePendown[] = "Den Stift nach unten ziehen";
constexpr static char esPythonTurtlePendown[] = "Pull the pen down";
constexpr static char huPythonTurtlePendown[] = "Húzza le a tollat";
constexpr static char enPythonTurtlePensize[] = "Set the line thickness to x pixels";
constexpr static char frPythonTurtlePensize[] = "Taille du tracé en pixels";
constexpr static char nlPythonTurtlePensize[] = "Stel de lijndikte in op x pixels";
constexpr static char ptPythonTurtlePensize[] = "Definir a espessura para x pixels";
constexpr static char itPythonTurtlePensize[] = "Dimensione del tratto in pixel";
constexpr static char dePythonTurtlePensize[] = "Linienstärke auf x Pixel setzen";
constexpr static char esPythonTurtlePensize[] = "Set the line thickness to x pixels";
constexpr static char huPythonTurtlePensize[] = "Allítsa a vonalvastagságot x pixelre";
constexpr static char enPythonTurtlePenup[] = "Pull the pen up";
constexpr static char frPythonTurtlePenup[] = "Relève le crayon";
constexpr static char nlPythonTurtlePenup[] = "Zet de pen omhoog";
constexpr static char ptPythonTurtlePenup[] = "Puxar a caneta para cima";
constexpr static char itPythonTurtlePenup[] = "Solleva la penna";
constexpr static char dePythonTurtlePenup[] = "Den Stift nach oben ziehen";
constexpr static char esPythonTurtlePenup[] = "Pull the pen up";
constexpr static char huPythonTurtlePenup[] = "Húzza fel a tollat";
constexpr static char enPythonTurtlePosition[] = "Return the current (x,y) location";
constexpr static char frPythonTurtlePosition[] = "Renvoie la position (x,y)";
constexpr static char nlPythonTurtlePosition[] = "Zet huidige (x,y) locatie terug";
constexpr static char ptPythonTurtlePosition[] = "Devolve a posição atual (x,y)";
constexpr static char itPythonTurtlePosition[] = "Fornisce posizione corrente (x,y)";
constexpr static char dePythonTurtlePosition[] = "Aktuelle (x,y) Position zurückgeben";
constexpr static char esPythonTurtlePosition[] = "Return the current (x,y) location";
constexpr static char huPythonTurtlePosition[] = "Az aktuális (x,y) pozíciót visszaadása";
constexpr static char enPythonTurtleReset[] = "Reset the drawing";
constexpr static char frPythonTurtleReset[] = "Réinitialise le dessin";
constexpr static char nlPythonTurtleReset[] = "Reset de tekening";
constexpr static char ptPythonTurtleReset[] = "Reiniciar o desenho";
constexpr static char itPythonTurtleReset[] = "Azzera il disegno";
constexpr static char dePythonTurtleReset[] = "Die Zeichnung zurücksetzen";
constexpr static char esPythonTurtleReset[] = "Reset the drawing";
constexpr static char huPythonTurtleReset[] = "Visszaállitani a rajzot (torléssel)";
constexpr static char enPythonTurtleRight[] = "Turn right by a degrees";
constexpr static char frPythonTurtleRight[] = "Pivote de a degrés vers la droite";
constexpr static char nlPythonTurtleRight[] = "Ga rechtsaf met a graden";
constexpr static char ptPythonTurtleRight[] = "Virar à esquerda por a graus";
constexpr static char itPythonTurtleRight[] = "Ruota di a gradi a destra";
constexpr static char dePythonTurtleRight[] = "Um ein Grad nach rechts drehen";
constexpr static char esPythonTurtleRight[] = "Turn right by a degrees";
constexpr static char huPythonTurtleRight[] = "a fokkot forduljon jobbra";
constexpr static char enPythonTurtleSetheading[] = "Set the orientation to a degrees";
constexpr static char frPythonTurtleSetheading[] = "Met un cap de a degrés";
constexpr static char nlPythonTurtleSetheading[] = "Zet de oriëntatie op a graden";
constexpr static char ptPythonTurtleSetheading[] = "Definir a orientação por a graus";
constexpr static char itPythonTurtleSetheading[] = "Imposta l'orientamento per a gradi";
constexpr static char dePythonTurtleSetheading[] = "Ausrichtung auf einen Grad setzen";
constexpr static char esPythonTurtleSetheading[] = "Set the orientation to a degrees";
constexpr static char huPythonTurtleSetheading[] = "a fokokra állítja be az irányt";
constexpr static char enPythonTurtleShowturtle[] = "Show the turtle";
constexpr static char frPythonTurtleShowturtle[] = "Affiche la tortue";
constexpr static char nlPythonTurtleShowturtle[] = "Laat de schildpad zien";
constexpr static char ptPythonTurtleShowturtle[] = "Mostrar o turtle";
constexpr static char itPythonTurtleShowturtle[] = "Mostra la tartaruga";
constexpr static char dePythonTurtleShowturtle[] = "Den Igel anzeigen";
constexpr static char esPythonTurtleShowturtle[] = "Show the turtle";
constexpr static char huPythonTurtleShowturtle[] = "A teknöst meg mutatni";
constexpr static char enPythonTurtleSpeed[] = "Drawing speed between 0 and 10";
constexpr static char frPythonTurtleSpeed[] = "Vitesse du tracé entre 0 et 10";
constexpr static char nlPythonTurtleSpeed[] = "Tekensnelheid tussen 0 and 10";
constexpr static char ptPythonTurtleSpeed[] = "Velocidade do desenho entre 0 e 10";
constexpr static char itPythonTurtleSpeed[] = "Velocità di disegno (x tra 0 e 10)";
constexpr static char dePythonTurtleSpeed[] = "Zeichengeschwindigkeit von 0 bis 10";
constexpr static char esPythonTurtleSpeed[] = "Drawing speed between 0 and 10";
constexpr static char huPythonTurtleSpeed[] = "Rajzolási sebesség 0 és 10 között";
constexpr static char enPythonTurtleWrite[] = "Display a text";
constexpr static char frPythonTurtleWrite[] = "Affiche un texte";
constexpr static char nlPythonTurtleWrite[] = "Display a text";
constexpr static char ptPythonTurtleWrite[] = "Mostrar um texto";
constexpr static char itPythonTurtleWrite[] = "Mostra un testo";
constexpr static char dePythonTurtleWrite[] = "Einen Text anzeigen";
constexpr static char esPythonTurtleWrite[] = "Display a text";
constexpr static char huPythonTurtleWrite[] = "Szöveg irás";
constexpr static char enPythonUniform[] = "Floating point number in [a,b]";
constexpr static char frPythonUniform[] = "Nombre décimal dans [a,b]";
constexpr static char nlPythonUniform[] = "Decimaal getal in [a,b]";
constexpr static char ptPythonUniform[] = "Número decimal em [a,b]";
constexpr static char itPythonUniform[] = "Numero decimale tra [a,b]";
constexpr static char dePythonUniform[] = "Fließkommazahl in [a,b]";
constexpr static char esPythonUniform[] = "Floating point number in [a,b]";
constexpr static char huPythonUniform[] = "Lebegöpontos szám [a,b] -ban";
constexpr static char enPythonUtilsFunction[] = "utils module function prefix";
constexpr static char frPythonUtilsFunction[] = "Préfixe fonction du module utils";
constexpr static char nlPythonUtilsFunction[] = "utils module functie prefix";
constexpr static char ptPythonUtilsFunction[] = "prefixo de função do módulo utils";
constexpr static char itPythonUtilsFunction[] = "prefisso della funzione del modulo utils";
constexpr static char dePythonUtilsFunction[] = "Funktionspräfix des utils-Moduls";
constexpr static char esPythonUtilsFunction[] = "prefijo de función del módulo utils";
constexpr static char huPythonUtilsFunction[] = "utils modul függvény előtagja";
constexpr static char enPythonVerticalBar[] = "Bitwise or";
constexpr static char frPythonVerticalBar[] = "Ou logique";
constexpr static char nlPythonVerticalBar[] = "Bitsgewijze of";
constexpr static char ptPythonVerticalBar[] = "Operador binário or";
constexpr static char itPythonVerticalBar[] = "Disgiunzione";
constexpr static char dePythonVerticalBar[] = "Bitweises oder";
constexpr static char esPythonVerticalBar[] = "Bitwise or";
constexpr static char huPythonVerticalBar[] = "logikus vagy pedig";
constexpr static char enQuadratic[] = "Quadratic";
constexpr static char frQuadratic[] = "Quadratique";
constexpr static char nlQuadratic[] = "Tweedegraads";
constexpr static char ptQuadratic[] = "Quadrática";
constexpr static char itQuadratic[] = "Quadratica";
constexpr static char deQuadratic[] = "Quadratische";
constexpr static char esQuadratic[] = "Cuadrática";
constexpr static char huQuadratic[] = "Másodfokú";
constexpr static char enQuartic[] = "Quartic";
constexpr static char frQuartic[] = "Quartique";
constexpr static char nlQuartic[] = "Vierdegraads";
constexpr static char ptQuartic[] = "Quarto grau";
constexpr static char itQuartic[] = "Quartica";
constexpr static char deQuartic[] = "Biquadratische";
constexpr static char esQuartic[] = "Cuártica";
constexpr static char huQuartic[] = "Kvartikus";
constexpr static char enQuotient[] = "Quotient division p by q";
constexpr static char frQuotient[] = "Quotient de la division de p par q";
constexpr static char nlQuotient[] = "Quotiënt deling p door q";
constexpr static char ptQuotient[] = "Quociente";
constexpr static char itQuotient[] = "Quoziente divisione p/q";
constexpr static char deQuotient[] = "Ganzzahlquotient";
constexpr static char esQuotient[] = "Cociente división p por q";
constexpr static char huQuotient[] = "P hányados osztás q-val";
constexpr static char enRTCWarning1[] = "Enabling the clock drains the battery faster";
constexpr static char frRTCWarning1[] = "Activer l'horloge décharge la batterie plus";
constexpr static char nlRTCWarning1[] = "Enabling the clock drains the battery faster";
constexpr static char ptRTCWarning1[] = "Enabling the clock drains the battery faster";
constexpr static char itRTCWarning1[] = "Enabling the clock drains the battery faster";
constexpr static char deRTCWarning1[] = "Das Aktivieren der Uhr verkürzt die";
constexpr static char esRTCWarning1[] = "Activar el reloj gasta la batería más rápido";
constexpr static char huRTCWarning1[] = "Amikor a számológép alvómódban van, az óra";
constexpr static char enRTCWarning2[] = "when the calculator is powered off.";
constexpr static char frRTCWarning2[] = "vite quand la calculatrice est éteinte.";
constexpr static char nlRTCWarning2[] = "when the calculator is powered off.";
constexpr static char ptRTCWarning2[] = "when the calculator is powered off.";
constexpr static char itRTCWarning2[] = "when the calculator is powered off.";
constexpr static char deRTCWarning2[] = "Akkulaufzeit im Bereitschaftsmodus.";
constexpr static char esRTCWarning2[] = "cuando la calculadora está apagada.";
constexpr static char huRTCWarning2[] = "használása az elemet gyorsabban meríti ki.";
constexpr static char enRadian[] = "Radians ";
constexpr static char frRadian[] = "Radians ";
constexpr static char nlRadian[] = "Radialen ";
constexpr static char ptRadian[] = "Radianos ";
constexpr static char itRadian[] = "Radianti ";
constexpr static char deRadian[] = "Bogenmaß ";
constexpr static char esRadian[] = "Radianes ";
constexpr static char huRadian[] = "Radián ";
constexpr static char enRadiuses[] = "Radiuses";
constexpr static char frRadiuses[] = "Rayons";
constexpr static char nlRadiuses[] = "Radiuses";
constexpr static char ptRadiuses[] = "Raio";
constexpr static char itRadiuses[] = "Raggi";
constexpr static char deRadiuses[] = "Radien";
constexpr static char esRadiuses[] = "Radios";
constexpr static char huRadiuses[] = "Sugarak";
constexpr static char enRandomAndApproximation[] = "Random and approximation";
constexpr static char frRandomAndApproximation[] = "Aléatoire et approximation";
constexpr static char nlRandomAndApproximation[] = "Random en afronding";
constexpr static char ptRandomAndApproximation[] = "Aleatório e aproximação";
constexpr static char itRandomAndApproximation[] = "Aleatorietà e approssimazione";
constexpr static char deRandomAndApproximation[] = "Zufall und Näherung";
constexpr static char esRandomAndApproximation[] = "Aleatorio y aproximación";
constexpr static char huRandomAndApproximation[] = "Véletlen és közelítés";
constexpr static char enRandomFloat[] = "Floating point number in [0,1[";
constexpr static char frRandomFloat[] = "Nombre décimal dans [0;1[";
constexpr static char nlRandomFloat[] = "Decimaal getal in [0,1)";
constexpr static char ptRandomFloat[] = "Número decimal em [0,1[";
constexpr static char itRandomFloat[] = "Decimale aleatorio tra [0,1[";
constexpr static char deRandomFloat[] = "Fließkommazahl in [0,1]";
constexpr static char esRandomFloat[] = "Número decimal en [0,1[";
constexpr static char huRandomFloat[] = "Lebegöpontos szám [0,1-ben [";
constexpr static char enRandomInteger[] = "Random integer in [a,b]";
constexpr static char frRandomInteger[] = "Entier aléatoire dans [a;b]";
constexpr static char nlRandomInteger[] = "Random geheel getal in [a,b]";
constexpr static char ptRandomInteger[] = "Inteiro aleatório em [a,b]";
constexpr static char itRandomInteger[] = "Intero aleatorio tra [a,b]";
constexpr static char deRandomInteger[] = "Zufällige ganze Zahl in [a,b]";
constexpr static char esRandomInteger[] = "Entero aleatorio en [a,b]";
constexpr static char huRandomInteger[] = "Véletlen egész szám [a, b] -ben";
constexpr static char enRange[] = "Range";
constexpr static char frRange[] = "Etendue";
constexpr static char nlRange[] = "Spreidingsbreedte";
constexpr static char ptRange[] = "Amplitude";
constexpr static char itRange[] = "Ampiezza";
constexpr static char deRange[] = "Spannweite";
constexpr static char esRange[] = "Rango";
constexpr static char huRange[] = "Intervallum";
constexpr static char enReaderApp[] = "Reader";
constexpr static char frReaderApp[] = "Liseuse";
constexpr static char nlReaderApp[] = "Lezer";
constexpr static char ptReaderApp[] = "Leitor";
constexpr static char itReaderApp[] = "Lettore";
constexpr static char deReaderApp[] = "Leser";
constexpr static char esReaderApp[] = "Lector";
constexpr static char huReaderApp[] = "Olvasó";
constexpr static char enReaderAppCapital[] = "READER";
constexpr static char frReaderAppCapital[] = "LISEUSE";
constexpr static char nlReaderAppCapital[] = "LEZER";
constexpr static char ptReaderAppCapital[] = "LEITOR";
constexpr static char itReaderAppCapital[] = "LETTORE";
constexpr static char deReaderAppCapital[] = "LESER";
constexpr static char esReaderAppCapital[] = "LECTOR";
constexpr static char huReaderAppCapital[] = "OLVASO";
constexpr static char enReal[] = "Real ";
constexpr static char frReal[] = "Réel ";
constexpr static char nlReal[] = "Reëel ";
constexpr static char ptReal[] = "Real ";
constexpr static char itReal[] = "Reale ";
constexpr static char deReal[] = "Reell ";
constexpr static char esReal[] = "Real ";
constexpr static char huReal[] = "Valódi ";
constexpr static char enRealPart[] = "Real part";
constexpr static char frRealPart[] = "Partie réelle";
constexpr static char nlRealPart[] = "Reëel deel";
constexpr static char ptRealPart[] = "Parte real";
constexpr static char itRealPart[] = "Parte reale";
constexpr static char deRealPart[] = "Realteil";
constexpr static char esRealPart[] = "Parte real";
constexpr static char huRealPart[] = "Igazi rész";
constexpr static char enRectangleWidth[] = "Bin width";
constexpr static char frRectangleWidth[] = "Largeur des rectangles";
constexpr static char nlRectangleWidth[] = "Kolombreedte";
constexpr static char ptRectangleWidth[] = "Largura dos retângulos";
constexpr static char itRectangleWidth[] = "Larghezza dei rettangoli";
constexpr static char deRectangleWidth[] = "Breite der Rechtecke";
constexpr static char esRectangleWidth[] = "Ancho del rectangulo";
constexpr static char huRectangleWidth[] = "Tálca szélessége";
constexpr static char enReducedRowEchelonForm[] = "Reduced row echelon form";
constexpr static char frReducedRowEchelonForm[] = "Forme échelonnée réduite de M";
constexpr static char nlReducedRowEchelonForm[] = "Gereduceerde echelonvorm";
constexpr static char ptReducedRowEchelonForm[] = "Matriz escalonada reduzida";
constexpr static char itReducedRowEchelonForm[] = "Matrice ridotta a scalini";
constexpr static char deReducedRowEchelonForm[] = "Reduzierte Stufenform";
constexpr static char esReducedRowEchelonForm[] = "Matriz escalonada reducida";
constexpr static char huReducedRowEchelonForm[] = "Csökkentett sorú echelon forma";
constexpr static char enRegression[] = "Regression";
constexpr static char frRegression[] = "Régression";
constexpr static char nlRegression[] = "Regressie";
constexpr static char ptRegression[] = "Regressão";
constexpr static char itRegression[] = "Regressione";
constexpr static char deRegression[] = "Regression";
constexpr static char esRegression[] = "Regresión";
constexpr static char huRegression[] = "Regresszió";
constexpr static char enRegressionApp[] = "Regression";
constexpr static char frRegressionApp[] = "Régressions";
constexpr static char nlRegressionApp[] = "Regressie";
constexpr static char ptRegressionApp[] = "Regressão";
constexpr static char itRegressionApp[] = "Regressione";
constexpr static char deRegressionApp[] = "Regression";
constexpr static char esRegressionApp[] = "Regresión";
constexpr static char huRegressionApp[] = "Regresszió";
constexpr static char enRegressionAppCapital[] = "REGRESSION";
constexpr static char frRegressionAppCapital[] = "REGRESSIONS";
constexpr static char nlRegressionAppCapital[] = "REGRESSIE";
constexpr static char ptRegressionAppCapital[] = "REGRESSAO";
constexpr static char itRegressionAppCapital[] = "REGRESSIONE";
constexpr static char deRegressionAppCapital[] = "REGRESSION";
constexpr static char esRegressionAppCapital[] = "REGRESION";
constexpr static char huRegressionAppCapital[] = "REGRESSZIO";
constexpr static char enRegressionCurve[] = "Regression curve";
constexpr static char frRegressionCurve[] = "Courbe de régression";
constexpr static char nlRegressionCurve[] = "Regressielijn";
constexpr static char ptRegressionCurve[] = "Curva de regressão";
constexpr static char itRegressionCurve[] = "Curva di regressione";
constexpr static char deRegressionCurve[] = "Regressionskurve";
constexpr static char esRegressionCurve[] = "Curva de regresión";
constexpr static char huRegressionCurve[] = "Regressziós görbe";
constexpr static char enRelativeFrequency[] = "Relative:";
constexpr static char frRelativeFrequency[] = "Fréquence:";
constexpr static char nlRelativeFrequency[] = "Relatieve:";
constexpr static char ptRelativeFrequency[] = "Relativa:";
constexpr static char itRelativeFrequency[] = "Relativa:";
constexpr static char deRelativeFrequency[] = "Relative:";
constexpr static char esRelativeFrequency[] = "Relativa:";
constexpr static char huRelativeFrequency[] = "Relatív:";
constexpr static char enRemainder[] = "Remainder division p by q";
constexpr static char frRemainder[] = "Reste de la division de p par q";
constexpr static char nlRemainder[] = "Rest deling p door q";
constexpr static char ptRemainder[] = "Resto da divisão inteira";
constexpr static char itRemainder[] = "Resto divisione p/q";
constexpr static char deRemainder[] = "Rest";
constexpr static char esRemainder[] = "Resto división p por q";
constexpr static char huRemainder[] = "P maradékos osztás q-val";
constexpr static char enRename[] = "Rename";
constexpr static char frRename[] = "Renommer";
constexpr static char nlRename[] = "Hernoem";
constexpr static char ptRename[] = "Renomear";
constexpr static char itRename[] = "Rinominare";
constexpr static char deRename[] = "Umbenennen";
constexpr static char esRename[] = "Renombrar";
constexpr static char huRename[] = "Atnevezés";
constexpr static char enRepetitionNumber[] = "n: Number of trials";
constexpr static char frRepetitionNumber[] = "n : Nombre de répétitions";
constexpr static char nlRepetitionNumber[] = "n: Aantal proeven";
constexpr static char ptRepetitionNumber[] = "n : Número de ensaios";
constexpr static char itRepetitionNumber[] = "n : Numero di prove";
constexpr static char deRepetitionNumber[] = "n: Anzahl der Versuche";
constexpr static char esRepetitionNumber[] = "n : Número de ensayos ";
constexpr static char huRepetitionNumber[] = "n: ismétlések száma";
constexpr static char enRequireEquation[] = "The input must be an equation";
constexpr static char frRequireEquation[] = "L'entrée doit être une équation";
constexpr static char nlRequireEquation[] = "De invoer moet een vergelijking zijn";
constexpr static char ptRequireEquation[] = "A entrada deve ser uma equação";
constexpr static char itRequireEquation[] = "L'input deve essere un'equazione";
constexpr static char deRequireEquation[] = "Eingabe muss eine Gleichung sein";
constexpr static char esRequireEquation[] = "La entrada debe ser una ecuación";
constexpr static char huRequireEquation[] = "A bemenetnek csak egyenlet lehet";
constexpr static char enReservedName[] = "Reserved name";
constexpr static char frReservedName[] = "Nom réservé";
constexpr static char nlReservedName[] = "Gereserveerde naam";
constexpr static char ptReservedName[] = "Nome reservado";
constexpr static char itReservedName[] = "Nome riservato";
constexpr static char deReservedName[] = "Reserviertes Wort";
constexpr static char esReservedName[] = "Nombre reservado";
constexpr static char huReservedName[] = "Fenntartott név";
constexpr static char enResistivityConstants[] = "Resistivity Constants";
constexpr static char frResistivityConstants[] = "Constantes de Resistivité";
constexpr static char nlResistivityConstants[] = "Weerstandsconstanten";
constexpr static char ptResistivityConstants[] = "Constantes de resistividade";
constexpr static char itResistivityConstants[] = "Costanti di resistività";
constexpr static char deResistivityConstants[] = "Konstanten der Widerstandsfähigkeit";
constexpr static char esResistivityConstants[] = "Constantes de resistividad";
constexpr static char huResistivityConstants[] = "Ellenállósági konstansok";
constexpr static char enResolveEquation[] = "Solve the equation";
constexpr static char frResolveEquation[] = "Résoudre l'équation";
constexpr static char nlResolveEquation[] = "Vergelijking oplossen";
constexpr static char ptResolveEquation[] = "Resolver a equação";
constexpr static char itResolveEquation[] = "Risolvi l'equazione";
constexpr static char deResolveEquation[] = "Lösen der Gleichung";
constexpr static char esResolveEquation[] = "Resolver la ecuación";
constexpr static char huResolveEquation[] = "Egyenletet megoldása";
constexpr static char enResolveSystem[] = "Solve the system";
constexpr static char frResolveSystem[] = "Résoudre le système";
constexpr static char nlResolveSystem[] = "Stelsel oplossen";
constexpr static char ptResolveSystem[] = "Resolver o sistema";
constexpr static char itResolveSystem[] = "Risolvi il sistema";
constexpr static char deResolveSystem[] = "Lösen des Gleichungssystems";
constexpr static char esResolveSystem[] = "Resolver el sistema";
constexpr static char huResolveSystem[] = "Rendszer megoldása";
constexpr static char enRounding[] = "Rounding to n digits";
constexpr static char frRounding[] = "Arrondi à n décimales";
constexpr static char nlRounding[] = "Afronding op n cijfers";
constexpr static char ptRounding[] = "Arredondar";
constexpr static char itRounding[] = "Arrotonda a n decimali";
constexpr static char deRounding[] = "Runden";
constexpr static char esRounding[] = "Redondeo n digitos";
constexpr static char huRounding[] = "N számjegyre kerekítés";
constexpr static char enRowEchelonForm[] = "Row echelon form";
constexpr static char frRowEchelonForm[] = "Forme échelonnée de M";
constexpr static char nlRowEchelonForm[] = "Echelonvorm";
constexpr static char ptRowEchelonForm[] = "Matriz escalonada";
constexpr static char itRowEchelonForm[] = "Matrice a scalini";
constexpr static char deRowEchelonForm[] = "Stufenform";
constexpr static char esRowEchelonForm[] = "Matriz escalonada";
constexpr static char huRowEchelonForm[] = "Sor echelon forma";
constexpr static char enRpnApp[] = "RPN";
constexpr static char frRpnApp[] = "RPN";
constexpr static char nlRpnApp[] = "RPN";
constexpr static char ptRpnApp[] = "RPN";
constexpr static char itRpnApp[] = "RPN";
constexpr static char deRpnApp[] = "RPN";
constexpr static char esRpnApp[] = "RPN";
constexpr static char huRpnApp[] = "RPN";
constexpr static char enRpnAppCapital[] = "RPN";
constexpr static char frRpnAppCapital[] = "RPN";
constexpr static char nlRpnAppCapital[] = "RPN";
constexpr static char ptRpnAppCapital[] = "RPN";
constexpr static char itRpnAppCapital[] = "RPN";
constexpr static char deRpnAppCapital[] = "RPN";
constexpr static char esRpnAppCapital[] = "RPN";
constexpr static char huRpnAppCapital[] = "RPN";
constexpr static char enRydbergConstantTag[] = "Rydberg Constant";
constexpr static char frRydbergConstantTag[] = "Constante de Rydberg";
constexpr static char nlRydbergConstantTag[] = "Rydbergconstante";
constexpr static char ptRydbergConstantTag[] = "Constante de Rydberg";
constexpr static char itRydbergConstantTag[] = "Costante di Rydberg";
constexpr static char deRydbergConstantTag[] = "Rydberg-Konstante";
constexpr static char esRydbergConstantTag[] = "Constante de Rydberg";
constexpr static char huRydbergConstantTag[] = "Rydberg Allandó";
constexpr static char enSampleStandardDeviationS[] = "Sample std deviation s";
constexpr static char frSampleStandardDeviationS[] = "Ecart type échantillon";
constexpr static char nlSampleStandardDeviationS[] = "Standaardafwijking s";
constexpr static char ptSampleStandardDeviationS[] = "Desvio padrão amostral s";
constexpr static char itSampleStandardDeviationS[] = "Dev. std campionaria s";
constexpr static char deSampleStandardDeviationS[] = "Standardabweichung s";
constexpr static char esSampleStandardDeviationS[] = "Desviación típica s";
constexpr static char huSampleStandardDeviationS[] = "Minta std eltérés σ";
constexpr static char enSci[] = "sci";
constexpr static char frSci[] = "sci";
constexpr static char nlSci[] = "sci";
constexpr static char ptSci[] = "cie";
constexpr static char itSci[] = "sci";
constexpr static char deSci[] = "wiss";
constexpr static char esSci[] = "cie";
constexpr static char huSci[] = "sci";
constexpr static char enScientific[] = "Scientific ";
constexpr static char frScientific[] = "Scientifique ";
constexpr static char nlScientific[] = "Wetenschappelijk ";
constexpr static char ptScientific[] = "Científico ";
constexpr static char itScientific[] = "Scientifico ";
constexpr static char deScientific[] = "Wissenschaftlich ";
constexpr static char esScientific[] = "Científico ";
constexpr static char huScientific[] = "Tudományos ";
constexpr static char enScriptInProgress[] = "Script in progress";
constexpr static char frScriptInProgress[] = "Script en cours";
constexpr static char nlScriptInProgress[] = "Script in progress";
constexpr static char ptScriptInProgress[] = "Script em curso";
constexpr static char itScriptInProgress[] = "Script in corso";
constexpr static char deScriptInProgress[] = "Aktuelles Skript";
constexpr static char esScriptInProgress[] = "Archivo en curso";
constexpr static char huScriptInProgress[] = "Script müködésben";
constexpr static char enScriptOptions[] = "Script options";
constexpr static char frScriptOptions[] = "Options de script";
constexpr static char nlScriptOptions[] = "Script opties";
constexpr static char ptScriptOptions[] = "Opções de script";
constexpr static char itScriptOptions[] = "Opzioni dello script";
constexpr static char deScriptOptions[] = "Skriptoptionen";
constexpr static char esScriptOptions[] = "Opciones del archivo";
constexpr static char huScriptOptions[] = "Script beállítások";
constexpr static char enScriptSize[] = "Script size";
constexpr static char frScriptSize[] = "Taille du script";
constexpr static char nlScriptSize[] = "Script Size";
constexpr static char ptScriptSize[] = "Script Size";
constexpr static char itScriptSize[] = "Script Size";
constexpr static char deScriptSize[] = "Skriptgröße";
constexpr static char esScriptSize[] = "Tamaño del script";
constexpr static char huScriptSize[] = "Script mérete";
constexpr static char enSea_water[] = "Sea Water";
constexpr static char frSea_water[] = "Eau de mer";
constexpr static char nlSea_water[] = "Zeewater";
constexpr static char ptSea_water[] = "Agua do mar";
constexpr static char itSea_water[] = "Acqua di mare";
constexpr static char deSea_water[] = "Meerwasser";
constexpr static char esSea_water[] = "Agua de mar";
constexpr static char huSea_water[] = "Tengeri víz";
constexpr static char enSearchInterval[] = "Search interval";
constexpr static char frSearchInterval[] = "Intervalle de recherche";
constexpr static char nlSearchInterval[] = "Intervalbepaling";
constexpr static char ptSearchInterval[] = "Intervalo de pesquisa";
constexpr static char itSearchInterval[] = "Intervallo di ricerca";
constexpr static char deSearchInterval[] = "Lösungssuche Intervall";
constexpr static char esSearchInterval[] = "Intervalo de búsqueda";
constexpr static char huSearchInterval[] = "Keresési intervallum";
constexpr static char enSecondRoot[] = "Second root";
constexpr static char frSecondRoot[] = "Seconde racine";
constexpr static char nlSecondRoot[] = "Tweede wortel";
constexpr static char ptSecondRoot[] = "Segunda raiz";
constexpr static char itSecondRoot[] = "Seconda radice";
constexpr static char deSecondRoot[] = "Zweite Wurzel";
constexpr static char esSecondRoot[] = "Segunda raíz";
constexpr static char huSecondRoot[] = "Második gyökér";
constexpr static char enSelectFirstTerm[] = "Select First Term ";
constexpr static char frSelectFirstTerm[] = "Sélectionner le premier terme ";
constexpr static char nlSelectFirstTerm[] = "Selecteer eerste term ";
constexpr static char ptSelectFirstTerm[] = "Selecionar primeiro termo ";
constexpr static char itSelectFirstTerm[] = "Selezionare il primo termine ";
constexpr static char deSelectFirstTerm[] = "Erster Term ";
constexpr static char esSelectFirstTerm[] = "Seleccionar el primer término ";
constexpr static char huSelectFirstTerm[] = "Elsö kifejezés kiválasztása ";
constexpr static char enSelectLastTerm[] = "Select last term ";
constexpr static char frSelectLastTerm[] = "Sélectionner le dernier terme ";
constexpr static char nlSelectLastTerm[] = "Selecteer laatste term ";
constexpr static char ptSelectLastTerm[] = "Selecionar último termo ";
constexpr static char itSelectLastTerm[] = "Selezionare l'ultimo termine ";
constexpr static char deSelectLastTerm[] = "Letzter Term ";
constexpr static char esSelectLastTerm[] = "Seleccionar el último término ";
constexpr static char huSelectLastTerm[] = "Utolsó kifejezés kiválasztása ";
constexpr static char enSelectLowerBound[] = "Select lower bound ";
constexpr static char frSelectLowerBound[] = "Sélectionner la borne inférieure ";
constexpr static char nlSelectLowerBound[] = "Selecteer ondergrens ";
constexpr static char ptSelectLowerBound[] = "Selecionar limite inferior";
constexpr static char itSelectLowerBound[] = "Scegliere il limite inferiore";
constexpr static char deSelectLowerBound[] = "Untere Integrationsgrenze ";
constexpr static char esSelectLowerBound[] = "Seleccionar el límite inferior ";
constexpr static char huSelectLowerBound[] = "Alsó határ kiválasztása";
constexpr static char enSelectUpperBound[] = "Select upper bound ";
constexpr static char frSelectUpperBound[] = "Sélectionner la borne supérieure ";
constexpr static char nlSelectUpperBound[] = "Selecteer bovengrens ";
constexpr static char ptSelectUpperBound[] = "Selecionar limite superior";
constexpr static char itSelectUpperBound[] = "Scegliere il limite superiore";
constexpr static char deSelectUpperBound[] = "Obere Integrationsgrenze ";
constexpr static char esSelectUpperBound[] = "Seleccionar el límite superior ";
constexpr static char huSelectUpperBound[] = "Felsö határ kiválasztása";
constexpr static char enSequenceApp[] = "Sequences";
constexpr static char frSequenceApp[] = "Suites";
constexpr static char nlSequenceApp[] = "Rijen";
constexpr static char ptSequenceApp[] = "Sequências";
constexpr static char itSequenceApp[] = "Successioni";
constexpr static char deSequenceApp[] = "Folge";
constexpr static char esSequenceApp[] = "Sucesión";
constexpr static char huSequenceApp[] = "Szekvenciák";
constexpr static char enSequenceAppCapital[] = "SEQUENCES";
constexpr static char frSequenceAppCapital[] = "SUITES";
constexpr static char nlSequenceAppCapital[] = "RIJEN";
constexpr static char ptSequenceAppCapital[] = "SEQUENCIAS";
constexpr static char itSequenceAppCapital[] = "SUCCESSIONI";
constexpr static char deSequenceAppCapital[] = "FOLGE";
constexpr static char esSequenceAppCapital[] = "SUCESION";
constexpr static char huSequenceAppCapital[] = "SZEKVENCIAK";
constexpr static char enSequenceColor[] = "Sequence color";
constexpr static char frSequenceColor[] = "Couleur de la suite";
constexpr static char nlSequenceColor[] = "Rij-kleur";
constexpr static char ptSequenceColor[] = "Cor da sequência";
constexpr static char itSequenceColor[] = "Colore della successione";
constexpr static char deSequenceColor[] = "Farbe der Folge";
constexpr static char esSequenceColor[] = "Color de la sucesión";
constexpr static char huSequenceColor[] = "Szekvencia színe";
constexpr static char enSequenceOptions[] = "Sequence options";
constexpr static char frSequenceOptions[] = "Options de la suite";
constexpr static char nlSequenceOptions[] = "Rij-opties";
constexpr static char ptSequenceOptions[] = "Opções de sequência";
constexpr static char itSequenceOptions[] = "Opzioni della successione";
constexpr static char deSequenceOptions[] = "Optionen der Folge";
constexpr static char esSequenceOptions[] = "Opciones de la sucesión";
constexpr static char huSequenceOptions[] = "Szekvencia opciók";
constexpr static char enSequenceTab[] = "Sequences";
constexpr static char frSequenceTab[] = "Suites";
constexpr static char nlSequenceTab[] = "Rijen";
constexpr static char ptSequenceTab[] = "Sequências";
constexpr static char itSequenceTab[] = "Successioni";
constexpr static char deSequenceTab[] = "Folgen";
constexpr static char esSequenceTab[] = "Sucesiones";
constexpr static char huSequenceTab[] = "Szekvenciák";
constexpr static char enSequenceType[] = "Sequence type";
constexpr static char frSequenceType[] = "Type de suite";
constexpr static char nlSequenceType[] = "Rij-type";
constexpr static char ptSequenceType[] = "Tipo de sequência";
constexpr static char itSequenceType[] = "Tipo di successione";
constexpr static char deSequenceType[] = "Bildungsgesetz der Folge";
constexpr static char esSequenceType[] = "Tipo de sucesión";
constexpr static char huSequenceType[] = "Szekvencia típusa";
constexpr static char enSequences[] = "Sequences";
constexpr static char frSequences[] = "Suites";
constexpr static char nlSequences[] = "Rijen";
constexpr static char ptSequences[] = "Sequências";
constexpr static char itSequences[] = "Successioni";
constexpr static char deSequences[] = "Folgen";
constexpr static char esSequences[] = "Sucesiones";
constexpr static char huSequences[] = "Szekvenciák";
constexpr static char enSerialNumber[] = "Serial number";
constexpr static char frSerialNumber[] = "Numéro de série";
constexpr static char nlSerialNumber[] = "Serienummer";
constexpr static char ptSerialNumber[] = "Número serie";
constexpr static char itSerialNumber[] = "Numero di serie";
constexpr static char deSerialNumber[] = "Seriennummer";
constexpr static char esSerialNumber[] = "Número serie";
constexpr static char huSerialNumber[] = "Sorozatszám";
constexpr static char enSettingsApp[] = "Settings";
constexpr static char frSettingsApp[] = "Paramètres";
constexpr static char nlSettingsApp[] = "Instellingen";
constexpr static char ptSettingsApp[] = "Definições";
constexpr static char itSettingsApp[] = "Impostazioni";
constexpr static char deSettingsApp[] = "Einstellungen";
constexpr static char esSettingsApp[] = "Configuración";
constexpr static char huSettingsApp[] = "Beállítások";
constexpr static char enSettingsAppCapital[] = "SETTINGS";
constexpr static char frSettingsAppCapital[] = "PARAMETRES";
constexpr static char nlSettingsAppCapital[] = "INSTELLINGEN";
constexpr static char ptSettingsAppCapital[] = "DEFINICOES";
constexpr static char itSettingsAppCapital[] = "IMPOSTAZIONI";
constexpr static char deSettingsAppCapital[] = "EINSTELLUNGEN";
constexpr static char esSettingsAppCapital[] = "CONFIGURACION";
constexpr static char huSettingsAppCapital[] = "BEALLITASOK";
constexpr static char enSigmaOSVersion[] = "Sigma OS version";
constexpr static char frSigmaOSVersion[] = "Version de Sigma";
constexpr static char nlSigmaOSVersion[] = "Sigma OS version";
constexpr static char ptSigmaOSVersion[] = "Versão do Sigma OS";
constexpr static char itSigmaOSVersion[] = "Sigma OS version";
constexpr static char deSigmaOSVersion[] = "Sigma OS version";
constexpr static char esSigmaOSVersion[] = "Versión de Sigma OS";
constexpr static char huSigmaOSVersion[] = "Sigma OS verzió";
constexpr static char enSignificantFigures[] = "Significant figures ";
constexpr static char frSignificantFigures[] = "Chiffres significatifs ";
constexpr static char nlSignificantFigures[] = "Significante cijfers ";
constexpr static char ptSignificantFigures[] = "Alg. significativos ";
constexpr static char itSignificantFigures[] = "Cifre significative ";
constexpr static char deSignificantFigures[] = "Signifikante Stellen ";
constexpr static char esSignificantFigures[] = "Cifras significativas ";
constexpr static char huSignificantFigures[] = "Tizedes számok ";
constexpr static char enSilver[] = "Silver";
constexpr static char frSilver[] = "Argent";
constexpr static char nlSilver[] = "Zilver";
constexpr static char ptSilver[] = "Prata";
constexpr static char itSilver[] = "Argento";
constexpr static char deSilver[] = "Silber";
constexpr static char esSilver[] = "Plata";
constexpr static char huSilver[] = "Ezüst";
constexpr static char enSingleRecurrence[] = "Recursive first order";
constexpr static char frSingleRecurrence[] = "Récurrente d'ordre 1";
constexpr static char nlSingleRecurrence[] = "Recursief eerste orde";
constexpr static char ptSingleRecurrence[] = "Recorrência de Primeira Ordem";
constexpr static char itSingleRecurrence[] = "Ricorrente d'ordine 1";
constexpr static char deSingleRecurrence[] = "Rekursion 1. Ordnung";
constexpr static char esSingleRecurrence[] = "Recurrencia de orden uno";
constexpr static char huSingleRecurrence[] = "Rekurzív elsö sorrend";
constexpr static char enSkip[] = "Skip";
constexpr static char frSkip[] = "Passer";
constexpr static char nlSkip[] = "Verdergaan";
constexpr static char ptSkip[] = "Saltar";
constexpr static char itSkip[] = "Saltare";
constexpr static char deSkip[] = "Uberspringen";
constexpr static char esSkip[] = "Saltar";
constexpr static char huSkip[] = "Tovább";
constexpr static char enSmallFont[] = "Small ";
constexpr static char frSmallFont[] = "Petite ";
constexpr static char nlSmallFont[] = "Klein ";
constexpr static char ptSmallFont[] = "Pequeno ";
constexpr static char itSmallFont[] = "Piccolo ";
constexpr static char deSmallFont[] = "Kleine ";
constexpr static char esSmallFont[] = "Pequeño ";
constexpr static char huSmallFont[] = "Kicsi ";
constexpr static char enSoftwareVersion[] = "Epsilon version";
constexpr static char frSoftwareVersion[] = "Version d'Epsilon";
constexpr static char nlSoftwareVersion[] = "Epsilon version";
constexpr static char ptSoftwareVersion[] = "Versão do Epsilon";
constexpr static char itSoftwareVersion[] = "Epsilon version";
constexpr static char deSoftwareVersion[] = "Epsilon version";
constexpr static char esSoftwareVersion[] = "Versión de Epsilon";
constexpr static char huSoftwareVersion[] = "Epsilon verzió";
constexpr static char enSolution[] = "Solution";
constexpr static char frSolution[] = "Solution";
constexpr static char nlSolution[] = "Oplossing";
constexpr static char ptSolution[] = "Solução";
constexpr static char itSolution[] = "Soluzione";
constexpr static char deSolution[] = "Lösung";
constexpr static char esSolution[] = "Solución";
constexpr static char huSolution[] = "Megoldás";
constexpr static char enSolverApp[] = "Equations";
constexpr static char frSolverApp[] = "Equations";
constexpr static char nlSolverApp[] = "Vergelijking";
constexpr static char ptSolverApp[] = "Equações";
constexpr static char itSolverApp[] = "Equazioni";
constexpr static char deSolverApp[] = "Gleichungen";
constexpr static char esSolverApp[] = "Ecuaciones";
constexpr static char huSolverApp[] = "Egyenletek";
constexpr static char enSolverAppCapital[] = "EQUATIONS";
constexpr static char frSolverAppCapital[] = "EQUATIONS";
constexpr static char nlSolverAppCapital[] = "VERGELIJKING";
constexpr static char ptSolverAppCapital[] = "EQUACOES";
constexpr static char itSolverAppCapital[] = "EQUAZIONI";
constexpr static char deSolverAppCapital[] = "GLEICHUNGEN";
constexpr static char esSolverAppCapital[] = "ECUACIONES";
constexpr static char huSolverAppCapital[] = "EGYENLETEK";
constexpr static char enSort[] = "Sort ascending ";
constexpr static char frSort[] = "Tri croissant";
constexpr static char nlSort[] = "Sorteer oplopend ";
constexpr static char ptSort[] = "Ordem crescente";
constexpr static char itSort[] = "Ordine crescente";
constexpr static char deSort[] = "Aufsteigend sortieren";
constexpr static char esSort[] = "Clasificación ascendente";
constexpr static char huSort[] = "Növekvö sorrend";
constexpr static char enSortSizes[] = "Sort by increasing frequencies";
constexpr static char frSortSizes[] = "Trier par effectifs croissants";
constexpr static char nlSortSizes[] = "Sorteer frequenties oplopend";
constexpr static char ptSortSizes[] = "Ordenar por ordem crescente";
constexpr static char itSortSizes[] = "Ordinare per frequenze crescenti";
constexpr static char deSortSizes[] = "Nach Frequenzen sortieren";
constexpr static char esSortSizes[] = "Ordenar por frecuencias crecientes";
constexpr static char huSortSizes[] = "Rendezés növekvő frekvenciák szerint";
constexpr static char enSortValues[] = "Sort by increasing values";
constexpr static char frSortValues[] = "Trier par valeurs croissantes";
constexpr static char nlSortValues[] = "Sorteer waarden oplopend";
constexpr static char ptSortValues[] = "Ordenar por ordem crescente";
constexpr static char itSortValues[] = "Ordinare per valori crescenti";
constexpr static char deSortValues[] = "Nach Werten sortieren";
constexpr static char esSortValues[] = "Ordenar por valores crecientes";
constexpr static char huSortValues[] = "Rendezés értékek növelésével";
constexpr static char enSpeed[] = "Speed";
constexpr static char frSpeed[] = "Vitesse";
constexpr static char nlSpeed[] = "Snelheid";
constexpr static char ptSpeed[] = "Velocidade";
constexpr static char itSpeed[] = "Velocità";
constexpr static char deSpeed[] = "Geschwindigkeit";
constexpr static char esSpeed[] = "Velocidad";
constexpr static char huSpeed[] = "Sebesség";
constexpr static char enSpeedDimension[] = "Speed";
constexpr static char frSpeedDimension[] = "Vitesse";
constexpr static char nlSpeedDimension[] = "Snelheid";
constexpr static char ptSpeedDimension[] = "Velocidade";
constexpr static char itSpeedDimension[] = "Velocità";
constexpr static char deSpeedDimension[] = "Geschwindigkeit";
constexpr static char esSpeedDimension[] = "Velocidad";
constexpr static char huSpeedDimension[] = "Sebesség";
constexpr static char enSpeedOfLightTag[] = "Speed of light";
constexpr static char frSpeedOfLightTag[] = "Vitesse de la lumière";
constexpr static char nlSpeedOfLightTag[] = "Lichtsnelheid";
constexpr static char ptSpeedOfLightTag[] = "Velocidade da luz";
constexpr static char itSpeedOfLightTag[] = "Velocità della luce";
constexpr static char deSpeedOfLightTag[] = "Lichtgeschwindigkeit";
constexpr static char esSpeedOfLightTag[] = "Velocidad de la luz";
constexpr static char huSpeedOfLightTag[] = "A fény sebessége";
constexpr static char enSpeedOfSound[] = "Speed of sound";
constexpr static char frSpeedOfSound[] = "Vitesse du son";
constexpr static char nlSpeedOfSound[] = "Geluidssnelheid";
constexpr static char ptSpeedOfSound[] = "Velocidade do som";
constexpr static char itSpeedOfSound[] = "Velocità del suono";
constexpr static char deSpeedOfSound[] = "Schallgeschwindigkeit";
constexpr static char esSpeedOfSound[] = "La velocidad del sonido";
constexpr static char huSpeedOfSound[] = "Hangsebesség";
constexpr static char enSpeedOfSound0Tag[] = "Sea level, 20°C";
constexpr static char frSpeedOfSound0Tag[] = "Niveau de la mer, 20°C";
constexpr static char nlSpeedOfSound0Tag[] = "Zeespiegel, 20°C";
constexpr static char ptSpeedOfSound0Tag[] = "Nível do mar, 20 ° C";
constexpr static char itSpeedOfSound0Tag[] = "Livello del mare, 20°C";
constexpr static char deSpeedOfSound0Tag[] = "Meeresspiegel, 20 ° C";
constexpr static char esSpeedOfSound0Tag[] = "Nivel del mar, 20 ° C";
constexpr static char huSpeedOfSound0Tag[] = "Tengerszint, 20 ° C";
constexpr static char enSpeedOfSoundGlassTag[] = "In glass";
constexpr static char frSpeedOfSoundGlassTag[] = "Dans le verre";
constexpr static char nlSpeedOfSoundGlassTag[] = "In glas";
constexpr static char ptSpeedOfSoundGlassTag[] = "Em vidro";
constexpr static char itSpeedOfSoundGlassTag[] = "Nel bicchiere";
constexpr static char deSpeedOfSoundGlassTag[] = "In Glas";
constexpr static char esSpeedOfSoundGlassTag[] = "En vidrio";
constexpr static char huSpeedOfSoundGlassTag[] = "Uvegben";
constexpr static char enSpeedOfSoundSteelTag[] = "In steel";
constexpr static char frSpeedOfSoundSteelTag[] = "Dans l'acier";
constexpr static char nlSpeedOfSoundSteelTag[] = "In staal";
constexpr static char ptSpeedOfSoundSteelTag[] = "Em aço";
constexpr static char itSpeedOfSoundSteelTag[] = "In acciaio";
constexpr static char deSpeedOfSoundSteelTag[] = "In Stahl";
constexpr static char esSpeedOfSoundSteelTag[] = "En acero";
constexpr static char huSpeedOfSoundSteelTag[] = "Acélban";
constexpr static char enSpeedOfSoundWaterTag[] = "In water";
constexpr static char frSpeedOfSoundWaterTag[] = "Dans l'eau";
constexpr static char nlSpeedOfSoundWaterTag[] = "In het water";
constexpr static char ptSpeedOfSoundWaterTag[] = "Na água";
constexpr static char itSpeedOfSoundWaterTag[] = "In acqua";
constexpr static char deSpeedOfSoundWaterTag[] = "In Wasser";
constexpr static char esSpeedOfSoundWaterTag[] = "En el agua";
constexpr static char huSpeedOfSoundWaterTag[] = "Vízben";
constexpr static char enSquareSum[] = "Sum of squares";
constexpr static char frSquareSum[] = "Somme des carrés";
constexpr static char nlSquareSum[] = "Som van kwadraten";
constexpr static char ptSquareSum[] = "Soma dos quadrados";
constexpr static char itSquareSum[] = "Somma dei quadrati";
constexpr static char deSquareSum[] = "Quadratsumme";
constexpr static char esSquareSum[] = "Suma cuadrados";
constexpr static char huSquareSum[] = "Négyzetek összege";
constexpr static char enStandardDeviation[] = "Standard deviation";
constexpr static char frStandardDeviation[] = "Ecart type";
constexpr static char nlStandardDeviation[] = "Standaardafwijking";
constexpr static char ptStandardDeviation[] = "Desvio padrão";
constexpr static char itStandardDeviation[] = "Deviazione standard";
constexpr static char deStandardDeviation[] = "Standardabweichung";
constexpr static char esStandardDeviation[] = "Desviación típica";
constexpr static char huStandardDeviation[] = "Alap eltérés";
constexpr static char enStandardDeviationSigma[] = "Standard deviation σ";
constexpr static char frStandardDeviationSigma[] = "Ecart type";
constexpr static char nlStandardDeviationSigma[] = "Standaardafwijking σ";
constexpr static char ptStandardDeviationSigma[] = "Desvio padrão σ";
constexpr static char itStandardDeviationSigma[] = "Deviazione standard σ";
constexpr static char deStandardDeviationSigma[] = "Standardabweichung σ";
constexpr static char esStandardDeviationSigma[] = "Desviación típica σ";
constexpr static char huStandardDeviationSigma[] = "σ szórás";
constexpr static char enStatTab[] = "Stats";
constexpr static char frStatTab[] = "Stats";
constexpr static char nlStatTab[] = "Stats";
constexpr static char ptStatTab[] = "Estat";
constexpr static char itStatTab[] = "Stats";
constexpr static char deStatTab[] = "Stats";
constexpr static char esStatTab[] = "Medidas";
constexpr static char huStatTab[] = "Statisztikák";
constexpr static char enStatisticsMode[] = "Mode";
constexpr static char frStatisticsMode[] = "Mode";
constexpr static char nlStatisticsMode[] = "Modus";
constexpr static char ptStatisticsMode[] = "Modo";
constexpr static char itStatisticsMode[] = "Modalità";
constexpr static char deStatisticsMode[] = "Modus ";
constexpr static char esStatisticsMode[] = "Modo";
constexpr static char huStatisticsMode[] = "Mód";
constexpr static char enStatsApp[] = "Statistics";
constexpr static char frStatsApp[] = "Statistiques";
constexpr static char nlStatsApp[] = "Statistiek";
constexpr static char ptStatsApp[] = "Estatística";
constexpr static char itStatsApp[] = "Statistica";
constexpr static char deStatsApp[] = "Statistik";
constexpr static char esStatsApp[] = "Estadística";
constexpr static char huStatsApp[] = "Statisztika";
constexpr static char enStatsAppCapital[] = "STATISTICS";
constexpr static char frStatsAppCapital[] = "STATISTIQUES";
constexpr static char nlStatsAppCapital[] = "STATISTIEK";
constexpr static char ptStatsAppCapital[] = "ESTATISTICA";
constexpr static char itStatsAppCapital[] = "STATISTICA";
constexpr static char deStatsAppCapital[] = "STATISTIK";
constexpr static char esStatsAppCapital[] = "ESTADISTICA";
constexpr static char huStatsAppCapital[] = "STATISZTIKA";
constexpr static char enStefanBoltzmannTag[] = "Stefan-Boltzmann Constant";
constexpr static char frStefanBoltzmannTag[] = "Constante de Stefan-Boltzmann";
constexpr static char nlStefanBoltzmannTag[] = "Constante van Stefan-Boltzmann";
constexpr static char ptStefanBoltzmannTag[] = "Constante de Stefan-Boltzmann";
constexpr static char itStefanBoltzmannTag[] = "Costante di stefan-boltzmann";
constexpr static char deStefanBoltzmannTag[] = "Stefan-Boltzmann-Konstante";
constexpr static char esStefanBoltzmannTag[] = "Constante de Stefan-Boltzmann";
constexpr static char huStefanBoltzmannTag[] = "Stefan-Boltzmann Allandó";
constexpr static char enStep[] = "Step";
constexpr static char frStep[] = "Pas";
constexpr static char nlStep[] = "Stap";
constexpr static char ptStep[] = "Passo";
constexpr static char itStep[] = "Passo";
constexpr static char deStep[] = "Schrittwert";
constexpr static char esStep[] = "Incremento";
constexpr static char huStep[] = "Lépés";
constexpr static char enStorageMemoryFull1[] = "The memory is full.";
constexpr static char frStorageMemoryFull1[] = "La mémoire est pleine.";
constexpr static char nlStorageMemoryFull1[] = "Het geheugen is vol.";
constexpr static char ptStorageMemoryFull1[] = "A memória esta cheia.";
constexpr static char itStorageMemoryFull1[] = "La memoria è piena.";
constexpr static char deStorageMemoryFull1[] = "Der Speicher ist voll. Löschen Sie";
constexpr static char esStorageMemoryFull1[] = "La memoria está llena.";
constexpr static char huStorageMemoryFull1[] = "A memória megtelt.";
constexpr static char enStorageMemoryFull2[] = "Erase data and try again.";
constexpr static char frStorageMemoryFull2[] = "Effacez des données et réessayez.";
constexpr static char nlStorageMemoryFull2[] = "Wis de gegevens en probeer opnieuw.";
constexpr static char ptStorageMemoryFull2[] = "Apage dados e tente novamente.";
constexpr static char itStorageMemoryFull2[] = "Cancellate i dati e riprovate.";
constexpr static char deStorageMemoryFull2[] = "einige Daten, dann erneut versuchen.";
constexpr static char esStorageMemoryFull2[] = "Borre datos e intente de nuevo.";
constexpr static char huStorageMemoryFull2[] = "Törlöljön adatokat és próbálkozzon újra.";
constexpr static char enStudentDistribution[] = "Student's distribution";
constexpr static char frStudentDistribution[] = "Loi de Student";
constexpr static char nlStudentDistribution[] = "Studentverdeling";
constexpr static char ptStudentDistribution[] = "Distribuição de Student";
constexpr static char itStudentDistribution[] = "Distribuzione Student";
constexpr static char deStudentDistribution[] = "Student-Verteilung";
constexpr static char esStudentDistribution[] = "Distribución de Student";
constexpr static char huStudentDistribution[] = "Student eloszlása";
constexpr static char enSuccessProbability[] = "p: Success probability";
constexpr static char frSuccessProbability[] = "p : Probabilité de succès";
constexpr static char nlSuccessProbability[] = "p: Kans op succes";
constexpr static char ptSuccessProbability[] = "p : Probabilidade de sucesso";
constexpr static char itSuccessProbability[] = "p : Probabilità di successo";
constexpr static char deSuccessProbability[] = "p: Erfolgswahrscheinlichkeit";
constexpr static char esSuccessProbability[] = "p : Probabilidad de éxito ";
constexpr static char huSuccessProbability[] = "p: a siker valószínüsége";
constexpr static char enSum[] = "Sum";
constexpr static char frSum[] = "Somme";
constexpr static char nlSum[] = "Som";
constexpr static char ptSum[] = "Somatório";
constexpr static char itSum[] = "Somma";
constexpr static char deSum[] = "Summe";
constexpr static char esSum[] = "Suma";
constexpr static char huSum[] = "Osszeg";
constexpr static char enSumSquareValues[] = "Sum of squared values";
constexpr static char frSumSquareValues[] = "Somme des carrés";
constexpr static char nlSumSquareValues[] = "Som van kwadraten";
constexpr static char ptSumSquareValues[] = "Soma dos quadrados";
constexpr static char itSumSquareValues[] = "Somma dei quadrati";
constexpr static char deSumSquareValues[] = "Quadratsumme";
constexpr static char esSumSquareValues[] = "Suma cuadrados";
constexpr static char huSumSquareValues[] = "Négyzetértékek összege";
constexpr static char enSumValues[] = "Sum of values";
constexpr static char frSumValues[] = "Somme";
constexpr static char nlSumValues[] = "Som";
constexpr static char ptSumValues[] = "Somatório";
constexpr static char itSumValues[] = "Somma";
constexpr static char deSumValues[] = "Summe";
constexpr static char esSumValues[] = "Suma";
constexpr static char huSumValues[] = "Ertékek összege";
constexpr static char enSunMassTag[] = "Sun";
constexpr static char frSunMassTag[] = "Soleil";
constexpr static char nlSunMassTag[] = "Zon";
constexpr static char ptSunMassTag[] = "Sol";
constexpr static char itSunMassTag[] = "Sole";
constexpr static char deSunMassTag[] = "Sonne";
constexpr static char esSunMassTag[] = "Sol";
constexpr static char huSunMassTag[] = "Nap";
constexpr static char enSurfaceDimension[] = "Surface";
constexpr static char frSurfaceDimension[] = "Surface";
constexpr static char nlSurfaceDimension[] = "Oppervlak";
constexpr static char ptSurfaceDimension[] = "Superfície";
constexpr static char itSurfaceDimension[] = "Superficie";
constexpr static char deSurfaceDimension[] = "Auftauchen";
constexpr static char esSurfaceDimension[] = "Superficie";
constexpr static char huSurfaceDimension[] = "Felület";
constexpr static char enSym[] = "sym";
constexpr static char frSym[] = "sym";
constexpr static char nlSym[] = "sym";
constexpr static char ptSym[] = "sim";
constexpr static char itSym[] = "sym";
constexpr static char deSym[] = "sym";
constexpr static char esSym[] = "sim";
constexpr static char huSym[] = "sym";
constexpr static char enSymbolArgDefaultFunction[] = "Argument ";
constexpr static char frSymbolArgDefaultFunction[] = "Arguments ";
constexpr static char nlSymbolArgDefaultFunction[] = "Argument ";
constexpr static char ptSymbolArgDefaultFunction[] = "Argumento ";
constexpr static char itSymbolArgDefaultFunction[] = "Argument ";
constexpr static char deSymbolArgDefaultFunction[] = "Argument ";
constexpr static char esSymbolArgDefaultFunction[] = "Argumento ";
constexpr static char huSymbolArgDefaultFunction[] = "Argumentummal ";
constexpr static char enSymbolArgFunction[] = "Empty ";
constexpr static char frSymbolArgFunction[] = "Vide ";
constexpr static char nlSymbolArgFunction[] = "Empty ";
constexpr static char ptSymbolArgFunction[] = "Vazio ";
constexpr static char itSymbolArgFunction[] = "Empty ";
constexpr static char deSymbolArgFunction[] = "Leer ";
constexpr static char esSymbolArgFunction[] = "Vacío ";
constexpr static char huSymbolArgFunction[] = "Ures ";
constexpr static char enSymbolDefaultFunction[] = "Default ";
constexpr static char frSymbolDefaultFunction[] = "Défaut ";
constexpr static char nlSymbolDefaultFunction[] = "Default ";
constexpr static char ptSymbolDefaultFunction[] = "Padrão ";
constexpr static char itSymbolDefaultFunction[] = "Default ";
constexpr static char deSymbolDefaultFunction[] = "Standardl ";
constexpr static char esSymbolDefaultFunction[] = "Defecto ";
constexpr static char huSymbolDefaultFunction[] = "Alap ";
constexpr static char enSymbolFunction[] = "Expression format ";
constexpr static char frSymbolFunction[] = "Format expression ";
constexpr static char nlSymbolFunction[] = "Expression format ";
constexpr static char ptSymbolFunction[] = "Formato expressão ";
constexpr static char itSymbolFunction[] = "Expression format ";
constexpr static char deSymbolFunction[] = "Ausdrucksformat ";
constexpr static char esSymbolFunction[] = "Formato expresión ";
constexpr static char huSymbolFunction[] = "Kifejezés ";
constexpr static char enSymbolMultiplication[] = "Multiply";
constexpr static char frSymbolMultiplication[] = "Multiplication";
constexpr static char nlSymbolMultiplication[] = "Multiply";
constexpr static char ptSymbolMultiplication[] = "Multiplicação";
constexpr static char itSymbolMultiplication[] = "Multiply";
constexpr static char deSymbolMultiplication[] = "Multiplikation";
constexpr static char esSymbolMultiplication[] = "Multiplicación";
constexpr static char huSymbolMultiplication[] = "Szorzás";
constexpr static char enSymbolMultiplicationAutoSymbol[] = "Auto ";
constexpr static char frSymbolMultiplicationAutoSymbol[] = "Automatique ";
constexpr static char nlSymbolMultiplicationAutoSymbol[] = "Auto ";
constexpr static char ptSymbolMultiplicationAutoSymbol[] = "automático ";
constexpr static char itSymbolMultiplicationAutoSymbol[] = "Auto ";
constexpr static char deSymbolMultiplicationAutoSymbol[] = "automatisch ";
constexpr static char esSymbolMultiplicationAutoSymbol[] = "Auto ";
constexpr static char huSymbolMultiplicationAutoSymbol[] = "Automatitus ";
constexpr static char enSymbolMultiplicationCross[] = "Cross ";
constexpr static char frSymbolMultiplicationCross[] = "Croix ";
constexpr static char nlSymbolMultiplicationCross[] = "Cross ";
constexpr static char ptSymbolMultiplicationCross[] = "crómio ";
constexpr static char itSymbolMultiplicationCross[] = "Cross ";
constexpr static char deSymbolMultiplicationCross[] = "Kreuz ";
constexpr static char esSymbolMultiplicationCross[] = "Contrariar ";
constexpr static char huSymbolMultiplicationCross[] = "Kereszt ";
constexpr static char enSymbolMultiplicationMiddleDot[] = "Dot ";
constexpr static char frSymbolMultiplicationMiddleDot[] = "Point ";
constexpr static char nlSymbolMultiplicationMiddleDot[] = "Dot ";
constexpr static char ptSymbolMultiplicationMiddleDot[] = "ponto médio ";
constexpr static char itSymbolMultiplicationMiddleDot[] = "Dot ";
constexpr static char deSymbolMultiplicationMiddleDot[] = "Mittelpunkt ";
constexpr static char esSymbolMultiplicationMiddleDot[] = "Punto ";
constexpr static char huSymbolMultiplicationMiddleDot[] = "Pont ";
constexpr static char enSymbolMultiplicationStar[] = "Star ";
constexpr static char frSymbolMultiplicationStar[] = "Etoile ";
constexpr static char nlSymbolMultiplicationStar[] = "Star ";
constexpr static char ptSymbolMultiplicationStar[] = "estrela ";
constexpr static char itSymbolMultiplicationStar[] = "Star ";
constexpr static char deSymbolMultiplicationStar[] = "Stern ";
constexpr static char esSymbolMultiplicationStar[] = "Estrella ";
constexpr static char huSymbolMultiplicationStar[] = "Csillag ";
constexpr static char enSyntaxError[] = "Syntax error";
constexpr static char frSyntaxError[] = "Attention à la syntaxe";
constexpr static char nlSyntaxError[] = "Syntaxisfout";
constexpr static char ptSyntaxError[] = "Erro de sintaxe";
constexpr static char itSyntaxError[] = "Sintassi errata";
constexpr static char deSyntaxError[] = "Syntaxfehler";
constexpr static char esSyntaxError[] = "Error sintáctico";
constexpr static char huSyntaxError[] = "Szintaxis hiba";
constexpr static char enSyntaxHighlighting[] = "Syntax Highlighting";
constexpr static char frSyntaxHighlighting[] = "Coloration syntaxique";
constexpr static char nlSyntaxHighlighting[] = "Syntax Highlighting";
constexpr static char ptSyntaxHighlighting[] = "Destaque da sintaxe";
constexpr static char itSyntaxHighlighting[] = "Evidenziazione della sintassi";
constexpr static char deSyntaxHighlighting[] = "Syntaxhervorhebung";
constexpr static char esSyntaxHighlighting[] = "Resaltado de sintaxis";
constexpr static char huSyntaxHighlighting[] = "Szintaxis kiemelés";
constexpr static char enTEnd[] = "T end";
constexpr static char frTEnd[] = "T fin";
constexpr static char nlTEnd[] = "T einde";
constexpr static char ptTEnd[] = "T fim";
constexpr static char itTEnd[] = "T finale";
constexpr static char deTEnd[] = "T Endwert";
constexpr static char esTEnd[] = "T fin";
constexpr static char huTEnd[] = "T vég";
constexpr static char enTStart[] = "T start";
constexpr static char frTStart[] = "T début";
constexpr static char nlTStart[] = "T begin";
constexpr static char ptTStart[] = "T início";
constexpr static char itTStart[] = "T iniziale";
constexpr static char deTStart[] = "T Startwert";
constexpr static char esTStart[] = "T inicio";
constexpr static char huTStart[] = "T kezdete";
constexpr static char enTangent[] = "Tangent";
constexpr static char frTangent[] = "Tangente";
constexpr static char nlTangent[] = "Raaklijn";
constexpr static char ptTangent[] = "Tangente";
constexpr static char itTangent[] = "Tangente";
constexpr static char deTangent[] = "Tangente";
constexpr static char esTangent[] = "Tangente";
constexpr static char huTangent[] = "Tangens";
constexpr static char enTauonMassTag[] = "Tauon";
constexpr static char frTauonMassTag[] = "Tauon";
constexpr static char nlTauonMassTag[] = "Tauon";
constexpr static char ptTauonMassTag[] = "Tauon";
constexpr static char itTauonMassTag[] = "Tauone";
constexpr static char deTauonMassTag[] = "Tauon";
constexpr static char esTauonMassTag[] = "Tauon";
constexpr static char huTauonMassTag[] = "Tauon";
constexpr static char enTemperatureDimension[] = "Temperature";
constexpr static char frTemperatureDimension[] = "Température";
constexpr static char nlTemperatureDimension[] = "Temperatuur";
constexpr static char ptTemperatureDimension[] = "Temperatura";
constexpr static char itTemperatureDimension[] = "Temperatura";
constexpr static char deTemperatureDimension[] = "Temperatur";
constexpr static char esTemperatureDimension[] = "La temperatura";
constexpr static char huTemperatureDimension[] = "Hőfok";
constexpr static char enTermSum[] = "Sum of terms";
constexpr static char frTermSum[] = "Somme des termes";
constexpr static char nlTermSum[] = "Som van termen";
constexpr static char ptTermSum[] = "Soma dos termos";
constexpr static char itTermSum[] = "Somma dei termini";
constexpr static char deTermSum[] = "Summe der Terme";
constexpr static char esTermSum[] = "Suma de términos";
constexpr static char huTermSum[] = "A kifejezés összege";
constexpr static char enThermodynamics[] = "Thermodynamics";
constexpr static char frThermodynamics[] = "Thermodynamique";
constexpr static char nlThermodynamics[] = "Thermodynamica";
constexpr static char ptThermodynamics[] = "Termodinâmica";
constexpr static char itThermodynamics[] = "Termodinamica";
constexpr static char deThermodynamics[] = "Thermodynamik";
constexpr static char esThermodynamics[] = "Termodinámica";
constexpr static char huThermodynamics[] = "Termodinamika";
constexpr static char enThetaEnd[] = "θ end";
constexpr static char frThetaEnd[] = "θ fin";
constexpr static char nlThetaEnd[] = "θ einde";
constexpr static char ptThetaEnd[] = "θ fim";
constexpr static char itThetaEnd[] = "θ finale";
constexpr static char deThetaEnd[] = "θ Endwert";
constexpr static char esThetaEnd[] = "θ fin";
constexpr static char huThetaEnd[] = "θ vége";
constexpr static char enThetaStart[] = "θ start";
constexpr static char frThetaStart[] = "θ début";
constexpr static char nlThetaStart[] = "θ begin";
constexpr static char ptThetaStart[] = "θ início";
constexpr static char itThetaStart[] = "θ iniziale";
constexpr static char deThetaStart[] = "θ Startwert";
constexpr static char esThetaStart[] = "θ inicio";
constexpr static char huThetaStart[] = "θ kezdete";
constexpr static char enThirdQuartile[] = "Third quartile";
constexpr static char frThirdQuartile[] = "Troisième quartile";
constexpr static char nlThirdQuartile[] = "Derde kwartiel";
constexpr static char ptThirdQuartile[] = "Terceiro quartil";
constexpr static char itThirdQuartile[] = "Terzo quartile";
constexpr static char deThirdQuartile[] = "Oberes Quartil";
constexpr static char esThirdQuartile[] = "Tercer cuartil";
constexpr static char huThirdQuartile[] = "Harmadik kvartilis";
constexpr static char enTime[] = "Time";
constexpr static char frTime[] = "Heure";
constexpr static char nlTime[] = "Time";
constexpr static char ptTime[] = "Time";
constexpr static char itTime[] = "Time";
constexpr static char deTime[] = "Uhrzeit";
constexpr static char esTime[] = "Hora";
constexpr static char huTime[] = "Ora";
constexpr static char enTimeDimension[] = "Time";
constexpr static char frTimeDimension[] = "Temps";
constexpr static char nlTimeDimension[] = "Tijd";
constexpr static char ptTimeDimension[] = "Tempo";
constexpr static char itTimeDimension[] = "Volta";
constexpr static char deTimeDimension[] = "Zeit";
constexpr static char esTimeDimension[] = "Tiempo";
constexpr static char huTimeDimension[] = "Idő";
constexpr static char enTin[] = "Tin";
constexpr static char frTin[] = "Etain";
constexpr static char nlTin[] = "Tin";
constexpr static char ptTin[] = "Lata";
constexpr static char itTin[] = "Stagno";
constexpr static char deTin[] = "Zinn";
constexpr static char esTin[] = "Tin";
constexpr static char huTin[] = "Bádog";
constexpr static char enToDeactivateExamMode1[] = "To deactivate the exam mode,";
constexpr static char frToDeactivateExamMode1[] = "Pour désactiver le mode examen,";
constexpr static char nlToDeactivateExamMode1[] = "Om de examenstand te verlaten,";
constexpr static char ptToDeactivateExamMode1[] = "Para desativar o modo de exame,";
constexpr static char itToDeactivateExamMode1[] = "Per disattivare la modalità esame,";
constexpr static char deToDeactivateExamMode1[] = "Um den Prüfungsmodus auszuschalten,";
constexpr static char esToDeactivateExamMode1[] = "Para desactivar el modo examen,";
constexpr static char huToDeactivateExamMode1[] = "a vizsga mód kikapcsoláshoz";
constexpr static char enToDeactivateExamMode2[] = "plug the calculator to a computer";
constexpr static char frToDeactivateExamMode2[] = "brancher la calculatrice à un";
constexpr static char nlToDeactivateExamMode2[] = "sluit de rekenmachine aan op";
constexpr static char ptToDeactivateExamMode2[] = "ligue a calculadora a um computador";
constexpr static char itToDeactivateExamMode2[] = "collegare la calcolatrice a un";
constexpr static char deToDeactivateExamMode2[] = "schließen Sie den Taschenrechner an";
constexpr static char esToDeactivateExamMode2[] = "conecte la calculadora a un ordenador";
constexpr static char huToDeactivateExamMode2[] = "csatlakoztassa a számológépet a számítógéphez";
constexpr static char enToDeactivateExamMode3[] = "or to a power socket.";
constexpr static char frToDeactivateExamMode3[] = "ordinateur ou à une prise de courant.";
constexpr static char nlToDeactivateExamMode3[] = "een computer of stopcontact.";
constexpr static char ptToDeactivateExamMode3[] = "ou a uma tomada elétrica.";
constexpr static char itToDeactivateExamMode3[] = "computer o a una presa di corrente.";
constexpr static char deToDeactivateExamMode3[] = "einen Computer an.";
constexpr static char esToDeactivateExamMode3[] = "o a un enchufe eléctrico.";
constexpr static char huToDeactivateExamMode3[] = "vagy egy konnektorhoz.";
constexpr static char enToZoom[] = "Zoom: ";
constexpr static char frToZoom[] = "Zoomer : ";
constexpr static char nlToZoom[] = "Zoom: ";
constexpr static char ptToZoom[] = "Zoom : ";
constexpr static char itToZoom[] = "Ingrandire : ";
constexpr static char deToZoom[] = "Zoom: ";
constexpr static char esToZoom[] = "Zoom : ";
constexpr static char huToZoom[] = "Nagyítani : ";
constexpr static char enTooManyVariables[] = "There are too many unknowns";
constexpr static char frTooManyVariables[] = "Le nombre d'inconnues est trop grand";
constexpr static char nlTooManyVariables[] = "Er zijn te veel onbekenden";
constexpr static char ptTooManyVariables[] = "Existem muitas incógnitas";
constexpr static char itTooManyVariables[] = "Il numero di incognite è troppo elevato";
constexpr static char deTooManyVariables[] = "Es gibt zu viele Unbekannte";
constexpr static char esTooManyVariables[] = "Hay demasiadas incógnitas";
constexpr static char huTooManyVariables[] = "Túl sok ismeretlen van";
constexpr static char enToolbox[] = "Toolbox";
constexpr static char frToolbox[] = "Boîte à outils";
constexpr static char nlToolbox[] = "Toolbox";
constexpr static char ptToolbox[] = "Caixa de ferramentas";
constexpr static char itToolbox[] = "Toolbox";
constexpr static char deToolbox[] = "Werkzeugkasten";
constexpr static char esToolbox[] = "Caja de herramientas";
constexpr static char huToolbox[] = "Eszköztár";
constexpr static char enTotalFrequency[] = "Number of data points";
constexpr static char frTotalFrequency[] = "Effectif total";
constexpr static char nlTotalFrequency[] = "Totale frequentie";
constexpr static char ptTotalFrequency[] = "Dimensão";
constexpr static char itTotalFrequency[] = "Dimensione totale";
constexpr static char deTotalFrequency[] = "Anzahl der Elemente";
constexpr static char esTotalFrequency[] = "Población";
constexpr static char huTotalFrequency[] = "Adatpontok száma ";
constexpr static char enTrace[] = "Trace";
constexpr static char frTrace[] = "Trace de M";
constexpr static char nlTrace[] = "Spoor";
constexpr static char ptTrace[] = "Traço";
constexpr static char itTrace[] = "Traccia";
constexpr static char deTrace[] = "Spur";
constexpr static char esTrace[] = "Traza";
constexpr static char huTrace[] = "Trace";
constexpr static char enTranspose[] = "Transpose";
constexpr static char frTranspose[] = "Transposée de M";
constexpr static char nlTranspose[] = "Getransponeerde";
constexpr static char ptTranspose[] = "Matriz transposta";
constexpr static char itTranspose[] = "Trasposta";
constexpr static char deTranspose[] = "Transponierte";
constexpr static char esTranspose[] = "Transpuesta";
constexpr static char huTranspose[] = "Atültetés";
constexpr static char enTrigonometrical[] = "Trigonometric";
constexpr static char frTrigonometrical[] = "Trigonométrique";
constexpr static char nlTrigonometrical[] = "Trigonometrisch";
constexpr static char ptTrigonometrical[] = "Trigonométrica";
constexpr static char itTrigonometrical[] = "Trigonometrica";
constexpr static char deTrigonometrical[] = "Trigonometrische";
constexpr static char esTrigonometrical[] = "Trigonométrica";
constexpr static char huTrigonometrical[] = "Trigonometrikus";
constexpr static char enTungsten[] = "Tungsten";
constexpr static char frTungsten[] = "Tungstène";
constexpr static char nlTungsten[] = "Tungsten";
constexpr static char ptTungsten[] = "Tungsténio";
constexpr static char itTungsten[] = "Tungsteno";
constexpr static char deTungsten[] = "Wolfram";
constexpr static char esTungsten[] = "Tungsteno";
constexpr static char huTungsten[] = "Wolfram";
constexpr static char enUSBConnected[] = "THE CALCULATOR IS CONNECTED";
constexpr static char frUSBConnected[] = "LA CALCULATRICE EST CONNECTEE";
constexpr static char nlUSBConnected[] = "DE REKENMACHINE IS AANGESLOTEN";
constexpr static char ptUSBConnected[] = "A CALCULADORA ESTA CONECTADA";
constexpr static char itUSBConnected[] = "CALCOLATRICE CONNESSA";
constexpr static char deUSBConnected[] = "TASCHENRECHNER IST ANGESCHLOSSEN";
constexpr static char esUSBConnected[] = "CALCULADORA CONECTADA";
constexpr static char huUSBConnected[] = "A SZAMOLOGEP CSATLAKOZTATVA VAN";
constexpr static char enUlabDocumentation[] = "Documentation";
constexpr static char frUlabDocumentation[] = "Documentation";
constexpr static char nlUlabDocumentation[] = "Documentatie";
constexpr static char ptUlabDocumentation[] = "Documentação";
constexpr static char itUlabDocumentation[] = "Documentazione";
constexpr static char deUlabDocumentation[] = "Dokumentation";
constexpr static char esUlabDocumentation[] = "Documentación";
constexpr static char huUlabDocumentation[] = "Dokumentáció";
constexpr static char enUndefinedEquation[] = "Undefined equation";
constexpr static char frUndefinedEquation[] = "Une équation est indéfinie";
constexpr static char nlUndefinedEquation[] = "Ongedefinieerde vergelijking";
constexpr static char ptUndefinedEquation[] = "Uma equação é indefinida";
constexpr static char itUndefinedEquation[] = "Un'equazione è indefinita'";
constexpr static char deUndefinedEquation[] = "Nicht definierte Gleichung";
constexpr static char esUndefinedEquation[] = "Una ecuación es indefinida";
constexpr static char huUndefinedEquation[] = "Egy egyenlet meghatározatlan ";
constexpr static char enUndefinedValue[] = "Undefined value";
constexpr static char frUndefinedValue[] = "Valeur non définie";
constexpr static char nlUndefinedValue[] = "Ongedefinieerde waarde";
constexpr static char ptUndefinedValue[] = "Valor indefinido";
constexpr static char itUndefinedValue[] = "Valore non definito";
constexpr static char deUndefinedValue[] = "Nicht definierter Wert";
constexpr static char esUndefinedValue[] = "Valor indefinido";
constexpr static char huUndefinedValue[] = "Meghatározatlan adat";
constexpr static char enUniformDistribution[] = "Uniform distribution";
constexpr static char frUniformDistribution[] = "Loi uniforme";
constexpr static char nlUniformDistribution[] = "Uniforme verdeling";
constexpr static char ptUniformDistribution[] = "Distribuição uniforme";
constexpr static char itUniformDistribution[] = "Distribuzione uniforme";
constexpr static char deUniformDistribution[] = "Uniformverteilung";
constexpr static char esUniformDistribution[] = "Distribución uniforme";
constexpr static char huUniformDistribution[] = "Egységes eloszlás";
constexpr static char enUniforme[] = "Uniform";
constexpr static char frUniforme[] = "Uniforme";
constexpr static char nlUniforme[] = "Uniform";
constexpr static char ptUniforme[] = "Uniforme";
constexpr static char itUniforme[] = "Uniforme";
constexpr static char deUniforme[] = "Gleichverteilung";
constexpr static char esUniforme[] = "Uniforme";
constexpr static char huUniforme[] = "Allandó";
constexpr static char enUnit[] = "Units";
constexpr static char frUnit[] = "Unités";
constexpr static char nlUnit[] = "Eenheden";
constexpr static char ptUnit[] = "Unidade";
constexpr static char itUnit[] = "Unità";
constexpr static char deUnit[] = "Einheiten";
constexpr static char esUnit[] = "Units";
constexpr static char huUnit[] = "Mértékegység";
constexpr static char enUnitAmountMenu[] = "Amount of substance";
constexpr static char frUnitAmountMenu[] = "Quantité de matière";
constexpr static char nlUnitAmountMenu[] = "Hoeveelheid stof";
constexpr static char ptUnitAmountMenu[] = "Quantidade da substância";
constexpr static char itUnitAmountMenu[] = "Quantità de materia";
constexpr static char deUnitAmountMenu[] = "Stoffmenge";
constexpr static char esUnitAmountMenu[] = "Amount of substance";
constexpr static char huUnitAmountMenu[] = "Az anyag mennyisége";
constexpr static char enUnitAmountMole[] = "Mole";
constexpr static char frUnitAmountMole[] = "Mole";
constexpr static char nlUnitAmountMole[] = "Mol";
constexpr static char ptUnitAmountMole[] = "Mole";
constexpr static char itUnitAmountMole[] = "Mole";
constexpr static char deUnitAmountMole[] = "Mol";
constexpr static char esUnitAmountMole[] = "Mole";
constexpr static char huUnitAmountMole[] = "Mól";
constexpr static char enUnitAmountMoleMicro[] = "Micromole";
constexpr static char frUnitAmountMoleMicro[] = "Micromole";
constexpr static char nlUnitAmountMoleMicro[] = "Micromol";
constexpr static char ptUnitAmountMoleMicro[] = "Micromole";
constexpr static char itUnitAmountMoleMicro[] = "Micromole";
constexpr static char deUnitAmountMoleMicro[] = "Mikromol";
constexpr static char esUnitAmountMoleMicro[] = "Micromole";
constexpr static char huUnitAmountMoleMicro[] = "Mikromól";
constexpr static char enUnitAmountMoleMilli[] = "Millimole";
constexpr static char frUnitAmountMoleMilli[] = "Millimole";
constexpr static char nlUnitAmountMoleMilli[] = "Millimol";
constexpr static char ptUnitAmountMoleMilli[] = "Milimole";
constexpr static char itUnitAmountMoleMilli[] = "Millimole";
constexpr static char deUnitAmountMoleMilli[] = "Millimol";
constexpr static char esUnitAmountMoleMilli[] = "Millimole";
constexpr static char huUnitAmountMoleMilli[] = "Millimól";
constexpr static char enUnitCapacitanceFaradMicro[] = "Microfarad";
constexpr static char frUnitCapacitanceFaradMicro[] = "Microfarad";
constexpr static char nlUnitCapacitanceFaradMicro[] = "Microfarad";
constexpr static char ptUnitCapacitanceFaradMicro[] = "Microfarad";
constexpr static char itUnitCapacitanceFaradMicro[] = "Microfarad";
constexpr static char deUnitCapacitanceFaradMicro[] = "Mikrofarad";
constexpr static char esUnitCapacitanceFaradMicro[] = "Microfarad";
constexpr static char huUnitCapacitanceFaradMicro[] = "Microfarad";
constexpr static char enUnitCapacitanceFaradMilli[] = "Millifarad";
constexpr static char frUnitCapacitanceFaradMilli[] = "Millifarad";
constexpr static char nlUnitCapacitanceFaradMilli[] = "Millifarad";
constexpr static char ptUnitCapacitanceFaradMilli[] = "Milifarad";
constexpr static char itUnitCapacitanceFaradMilli[] = "Millifarad";
constexpr static char deUnitCapacitanceFaradMilli[] = "Millifarad";
constexpr static char esUnitCapacitanceFaradMilli[] = "Millifarad";
constexpr static char huUnitCapacitanceFaradMilli[] = "Millifarad";
constexpr static char enUnitCapacitanceMenu[] = "Electrical capacitance";
constexpr static char frUnitCapacitanceMenu[] = "Capacité électrique";
constexpr static char nlUnitCapacitanceMenu[] = "Elektrische capaciteit";
constexpr static char ptUnitCapacitanceMenu[] = "Capacidade elétrica";
constexpr static char itUnitCapacitanceMenu[] = "Capacità elettrica";
constexpr static char deUnitCapacitanceMenu[] = "Elektrische Kapazität";
constexpr static char esUnitCapacitanceMenu[] = "Electrical capacitance";
constexpr static char huUnitCapacitanceMenu[] = "Elektromos kapacitás";
constexpr static char enUnitConductanceMenu[] = "Electrical conductance";
constexpr static char frUnitConductanceMenu[] = "Conductance électrique";
constexpr static char nlUnitConductanceMenu[] = "Elektrische geleidbaarheid";
constexpr static char ptUnitConductanceMenu[] = "Condutância elétrica";
constexpr static char itUnitConductanceMenu[] = "Conduttanza elettrica";
constexpr static char deUnitConductanceMenu[] = "Elektrische Leitfähigkeit";
constexpr static char esUnitConductanceMenu[] = "Electrical conductance";
constexpr static char huUnitConductanceMenu[] = "Elektromos vezetöképesség";
constexpr static char enUnitConductanceSiemensMilli[] = "Millisiemens";
constexpr static char frUnitConductanceSiemensMilli[] = "Millisiemens";
constexpr static char nlUnitConductanceSiemensMilli[] = "Millisiemens";
constexpr static char ptUnitConductanceSiemensMilli[] = "Milisiemens";
constexpr static char itUnitConductanceSiemensMilli[] = "Millisiemens";
constexpr static char deUnitConductanceSiemensMilli[] = "Millisiemens";
constexpr static char esUnitConductanceSiemensMilli[] = "Millisiemens";
constexpr static char huUnitConductanceSiemensMilli[] = "Millisiemens";
constexpr static char enUnitCurrentAmpere[] = "Ampere";
constexpr static char frUnitCurrentAmpere[] = "Ampère";
constexpr static char nlUnitCurrentAmpere[] = "Ampère";
constexpr static char ptUnitCurrentAmpere[] = "Ampere";
constexpr static char itUnitCurrentAmpere[] = "Ampere";
constexpr static char deUnitCurrentAmpere[] = "Ampere";
constexpr static char esUnitCurrentAmpere[] = "Ampere";
constexpr static char huUnitCurrentAmpere[] = "Amper";
constexpr static char enUnitCurrentAmpereMicro[] = "Microampere";
constexpr static char frUnitCurrentAmpereMicro[] = "Microampère";
constexpr static char nlUnitCurrentAmpereMicro[] = "Microampère";
constexpr static char ptUnitCurrentAmpereMicro[] = "Microampere";
constexpr static char itUnitCurrentAmpereMicro[] = "Microampere";
constexpr static char deUnitCurrentAmpereMicro[] = "Mikroampere";
constexpr static char esUnitCurrentAmpereMicro[] = "Microampere";
constexpr static char huUnitCurrentAmpereMicro[] = "Mikroamper";
constexpr static char enUnitCurrentAmpereMilli[] = "Milliampere";
constexpr static char frUnitCurrentAmpereMilli[] = "Milliampère";
constexpr static char nlUnitCurrentAmpereMilli[] = "Milliampère";
constexpr static char ptUnitCurrentAmpereMilli[] = "Miliampere";
constexpr static char itUnitCurrentAmpereMilli[] = "Milliampere";
constexpr static char deUnitCurrentAmpereMilli[] = "Milliampere";
constexpr static char esUnitCurrentAmpereMilli[] = "Milliampere";
constexpr static char huUnitCurrentAmpereMilli[] = "Milliamper";
constexpr static char enUnitCurrentMenu[] = "Electric current";
constexpr static char frUnitCurrentMenu[] = "Intensité du courant électrique";
constexpr static char nlUnitCurrentMenu[] = "Elektrische stroom";
constexpr static char ptUnitCurrentMenu[] = "Intensidade da corrente elétrica";
constexpr static char itUnitCurrentMenu[] = "Intensità di corrente elettrica";
constexpr static char deUnitCurrentMenu[] = "Elektrischer Strom";
constexpr static char esUnitCurrentMenu[] = "Electric current";
constexpr static char huUnitCurrentMenu[] = "Aram";
constexpr static char enUnitDistanceAstronomicalUnit[] = "Astronomical unit";
constexpr static char frUnitDistanceAstronomicalUnit[] = "Unité astronomique";
constexpr static char nlUnitDistanceAstronomicalUnit[] = "Astronomische eenheid";
constexpr static char ptUnitDistanceAstronomicalUnit[] = "Unidade astronómica";
constexpr static char itUnitDistanceAstronomicalUnit[] = "Unità astronomica";
constexpr static char deUnitDistanceAstronomicalUnit[] = "Astronomische Einheit";
constexpr static char esUnitDistanceAstronomicalUnit[] = "Astronomical unit";
constexpr static char huUnitDistanceAstronomicalUnit[] = "Csillagászati egység";
constexpr static char enUnitDistanceFoot[] = "Foot";
constexpr static char frUnitDistanceFoot[] = "Pied";
constexpr static char nlUnitDistanceFoot[] = "Voet";
constexpr static char ptUnitDistanceFoot[] = "Pé";
constexpr static char itUnitDistanceFoot[] = "Piede";
constexpr static char deUnitDistanceFoot[] = "Fuß";
constexpr static char esUnitDistanceFoot[] = "Pie";
constexpr static char huUnitDistanceFoot[] = "Láb";
constexpr static char enUnitDistanceInch[] = "Inch";
constexpr static char frUnitDistanceInch[] = "Pouce";
constexpr static char nlUnitDistanceInch[] = "Duim";
constexpr static char ptUnitDistanceInch[] = "Polegada";
constexpr static char itUnitDistanceInch[] = "Pollice";
constexpr static char deUnitDistanceInch[] = "Zoll";
constexpr static char esUnitDistanceInch[] = "Pulgada";
constexpr static char huUnitDistanceInch[] = "Hüvelyk";
constexpr static char enUnitDistanceLightYear[] = "Light year";
constexpr static char frUnitDistanceLightYear[] = "Année-lumière";
constexpr static char nlUnitDistanceLightYear[] = "Lichtjaar";
constexpr static char ptUnitDistanceLightYear[] = "Ano-luz";
constexpr static char itUnitDistanceLightYear[] = "Anno luce";
constexpr static char deUnitDistanceLightYear[] = "Lichtjahr";
constexpr static char esUnitDistanceLightYear[] = "Light year";
constexpr static char huUnitDistanceLightYear[] = "Fény év";
constexpr static char enUnitDistanceMenu[] = "Distance";
constexpr static char frUnitDistanceMenu[] = "Distance";
constexpr static char nlUnitDistanceMenu[] = "Afstand";
constexpr static char ptUnitDistanceMenu[] = "Distância";
constexpr static char itUnitDistanceMenu[] = "Distanza";
constexpr static char deUnitDistanceMenu[] = "Entfernung";
constexpr static char esUnitDistanceMenu[] = "Distance";
constexpr static char huUnitDistanceMenu[] = "Távolság";
constexpr static char enUnitDistanceMeter[] = "Meter";
constexpr static char frUnitDistanceMeter[] = "Mètre";
constexpr static char nlUnitDistanceMeter[] = "Meter";
constexpr static char ptUnitDistanceMeter[] = "Metro";
constexpr static char itUnitDistanceMeter[] = "Metro";
constexpr static char deUnitDistanceMeter[] = "Meter";
constexpr static char esUnitDistanceMeter[] = "Meter";
constexpr static char huUnitDistanceMeter[] = "Méter";
constexpr static char enUnitDistanceMeterKilo[] = "Kilometer";
constexpr static char frUnitDistanceMeterKilo[] = "Kilomètre";
constexpr static char nlUnitDistanceMeterKilo[] = "Kilometer";
constexpr static char ptUnitDistanceMeterKilo[] = "Quilómetro";
constexpr static char itUnitDistanceMeterKilo[] = "Chilometro";
constexpr static char deUnitDistanceMeterKilo[] = "Kilometer";
constexpr static char esUnitDistanceMeterKilo[] = "Kilometer";
constexpr static char huUnitDistanceMeterKilo[] = "Kilométer";
constexpr static char enUnitDistanceMeterMicro[] = "Micrometer";
constexpr static char frUnitDistanceMeterMicro[] = "Micromètre";
constexpr static char nlUnitDistanceMeterMicro[] = "Micrometer";
constexpr static char ptUnitDistanceMeterMicro[] = "Micrómetro";
constexpr static char itUnitDistanceMeterMicro[] = "Micrometro";
constexpr static char deUnitDistanceMeterMicro[] = "Micrometer";
constexpr static char esUnitDistanceMeterMicro[] = "Micrometer";
constexpr static char huUnitDistanceMeterMicro[] = "Mikrométer";
constexpr static char enUnitDistanceMeterMilli[] = "Millimeter";
constexpr static char frUnitDistanceMeterMilli[] = "Millimètre";
constexpr static char nlUnitDistanceMeterMilli[] = "Millimeter";
constexpr static char ptUnitDistanceMeterMilli[] = "Milímetro";
constexpr static char itUnitDistanceMeterMilli[] = "Millimetro";
constexpr static char deUnitDistanceMeterMilli[] = "Millimeter";
constexpr static char esUnitDistanceMeterMilli[] = "Millimeter";
constexpr static char huUnitDistanceMeterMilli[] = "Milliméter";
constexpr static char enUnitDistanceMeterNano[] = "Nanometer";
constexpr static char frUnitDistanceMeterNano[] = "Nanomètre";
constexpr static char nlUnitDistanceMeterNano[] = "Nanometer";
constexpr static char ptUnitDistanceMeterNano[] = "Nanómetro";
constexpr static char itUnitDistanceMeterNano[] = "Nanometro";
constexpr static char deUnitDistanceMeterNano[] = "Nanometer";
constexpr static char esUnitDistanceMeterNano[] = "Nanometer";
constexpr static char huUnitDistanceMeterNano[] = "Nanométer";
constexpr static char enUnitDistanceMeterPico[] = "Picometer";
constexpr static char frUnitDistanceMeterPico[] = "Picomètre";
constexpr static char nlUnitDistanceMeterPico[] = "Picometer";
constexpr static char ptUnitDistanceMeterPico[] = "Picómetro";
constexpr static char itUnitDistanceMeterPico[] = "Picometro";
constexpr static char deUnitDistanceMeterPico[] = "Pikometer";
constexpr static char esUnitDistanceMeterPico[] = "Picometer";
constexpr static char huUnitDistanceMeterPico[] = "Pikométer";
constexpr static char enUnitDistanceMile[] = "Mile";
constexpr static char frUnitDistanceMile[] = "Mile";
constexpr static char nlUnitDistanceMile[] = "Mijl";
constexpr static char ptUnitDistanceMile[] = "Milha";
constexpr static char itUnitDistanceMile[] = "Miglio";
constexpr static char deUnitDistanceMile[] = "Meile";
constexpr static char esUnitDistanceMile[] = "Milla";
constexpr static char huUnitDistanceMile[] = "Mérföld";
constexpr static char enUnitDistanceParsec[] = "Parsec";
constexpr static char frUnitDistanceParsec[] = "Parsec";
constexpr static char nlUnitDistanceParsec[] = "Parsec";
constexpr static char ptUnitDistanceParsec[] = "Parsec";
constexpr static char itUnitDistanceParsec[] = "Parsec";
constexpr static char deUnitDistanceParsec[] = "Parsec";
constexpr static char esUnitDistanceParsec[] = "Parsec";
constexpr static char huUnitDistanceParsec[] = "Parsec";
constexpr static char enUnitDistanceYard[] = "Yard";
constexpr static char frUnitDistanceYard[] = "Yard";
constexpr static char nlUnitDistanceYard[] = "Yard";
constexpr static char ptUnitDistanceYard[] = "Jarda";
constexpr static char itUnitDistanceYard[] = "Yard";
constexpr static char deUnitDistanceYard[] = "Yard";
constexpr static char esUnitDistanceYard[] = "Yardas";
constexpr static char huUnitDistanceYard[] = "Yard";
constexpr static char enUnitElectricChargeMenu[] = "Electric charge";
constexpr static char frUnitElectricChargeMenu[] = "Charge électrique";
constexpr static char nlUnitElectricChargeMenu[] = "Elektrische lading";
constexpr static char ptUnitElectricChargeMenu[] = "Carga elétrica";
constexpr static char itUnitElectricChargeMenu[] = "Carica elettrica";
constexpr static char deUnitElectricChargeMenu[] = "Elektrische Ladung";
constexpr static char esUnitElectricChargeMenu[] = "Electric charge";
constexpr static char huUnitElectricChargeMenu[] = "Elektromos töltés";
constexpr static char enUnitEnergyElectronVolt[] = "Electronvolt";
constexpr static char frUnitEnergyElectronVolt[] = "Electronvolt";
constexpr static char nlUnitEnergyElectronVolt[] = "Elektronvolt";
constexpr static char ptUnitEnergyElectronVolt[] = "Eletrão-volt";
constexpr static char itUnitEnergyElectronVolt[] = "Electronvolt";
constexpr static char deUnitEnergyElectronVolt[] = "Electronvolt";
constexpr static char esUnitEnergyElectronVolt[] = "Electronvolt";
constexpr static char huUnitEnergyElectronVolt[] = "Electronvolt";
constexpr static char enUnitEnergyElectronVoltKilo[] = "Kiloelectronvolt";
constexpr static char frUnitEnergyElectronVoltKilo[] = "Kiloélectronvolt";
constexpr static char nlUnitEnergyElectronVoltKilo[] = "Kiloelektronvolt";
constexpr static char ptUnitEnergyElectronVoltKilo[] = "Kiloeletrão-volt";
constexpr static char itUnitEnergyElectronVoltKilo[] = "Kiloelectronvolt";
constexpr static char deUnitEnergyElectronVoltKilo[] = "Kiloelectronvolt";
constexpr static char esUnitEnergyElectronVoltKilo[] = "Kiloelectronvolt";
constexpr static char huUnitEnergyElectronVoltKilo[] = "Kiloelectronvolt";
constexpr static char enUnitEnergyElectronVoltMega[] = "Megaelectronvolt";
constexpr static char frUnitEnergyElectronVoltMega[] = "Mégaélectronvolt";
constexpr static char nlUnitEnergyElectronVoltMega[] = "Megaelektronvolt";
constexpr static char ptUnitEnergyElectronVoltMega[] = "Megaeletrão-volt";
constexpr static char itUnitEnergyElectronVoltMega[] = "Megaelectronvolt";
constexpr static char deUnitEnergyElectronVoltMega[] = "Megaelectronvolt";
constexpr static char esUnitEnergyElectronVoltMega[] = "Megaelectronvolt";
constexpr static char huUnitEnergyElectronVoltMega[] = "Megaelectronvolt";
constexpr static char enUnitEnergyElectronVoltMenu[] = "Electronvolt";
constexpr static char frUnitEnergyElectronVoltMenu[] = "Electronvolt";
constexpr static char nlUnitEnergyElectronVoltMenu[] = "Elektronvolt";
constexpr static char ptUnitEnergyElectronVoltMenu[] = "Eletrão-volt";
constexpr static char itUnitEnergyElectronVoltMenu[] = "Electronvolt";
constexpr static char deUnitEnergyElectronVoltMenu[] = "Electronvolt";
constexpr static char esUnitEnergyElectronVoltMenu[] = "Electronvolt";
constexpr static char huUnitEnergyElectronVoltMenu[] = "Electronvolt";
constexpr static char enUnitEnergyElectronVoltMilli[] = "Millielectronvolt";
constexpr static char frUnitEnergyElectronVoltMilli[] = "Milliélectronvolt";
constexpr static char nlUnitEnergyElectronVoltMilli[] = "Millielektronvolt";
constexpr static char ptUnitEnergyElectronVoltMilli[] = "Milieletrão-volt";
constexpr static char itUnitEnergyElectronVoltMilli[] = "Millielectronvolt";
constexpr static char deUnitEnergyElectronVoltMilli[] = "Millielectronvolt";
constexpr static char esUnitEnergyElectronVoltMilli[] = "Millielectronvolt";
constexpr static char huUnitEnergyElectronVoltMilli[] = "Millielectronvolt";
constexpr static char enUnitEnergyJouleMilli[] = "Millijoule";
constexpr static char frUnitEnergyJouleMilli[] = "Millijoule";
constexpr static char nlUnitEnergyJouleMilli[] = "Millijoule";
constexpr static char ptUnitEnergyJouleMilli[] = "Milijoule";
constexpr static char itUnitEnergyJouleMilli[] = "Millijoule";
constexpr static char deUnitEnergyJouleMilli[] = "Millijoule";
constexpr static char esUnitEnergyJouleMilli[] = "Millijoule";
constexpr static char huUnitEnergyJouleMilli[] = "Millijoule";
constexpr static char enUnitEnergyMenu[] = "Energy";
constexpr static char frUnitEnergyMenu[] = "Energie";
constexpr static char nlUnitEnergyMenu[] = "Energie";
constexpr static char ptUnitEnergyMenu[] = "Energia";
constexpr static char itUnitEnergyMenu[] = "Energia";
constexpr static char deUnitEnergyMenu[] = "Energie";
constexpr static char esUnitEnergyMenu[] = "Energy";
constexpr static char huUnitEnergyMenu[] = "Energia";
constexpr static char enUnitForceMenu[] = "Force";
constexpr static char frUnitForceMenu[] = "Force";
constexpr static char nlUnitForceMenu[] = "Kracht";
constexpr static char ptUnitForceMenu[] = "Força";
constexpr static char itUnitForceMenu[] = "Forza";
constexpr static char deUnitForceMenu[] = "Kraft";
constexpr static char esUnitForceMenu[] = "Force";
constexpr static char huUnitForceMenu[] = "Erö";
constexpr static char enUnitForceNewtonMilli[] = "Millinewton";
constexpr static char frUnitForceNewtonMilli[] = "Millinewton";
constexpr static char nlUnitForceNewtonMilli[] = "Millinewton";
constexpr static char ptUnitForceNewtonMilli[] = "Milinewton";
constexpr static char itUnitForceNewtonMilli[] = "Millinewton";
constexpr static char deUnitForceNewtonMilli[] = "Millinewton";
constexpr static char esUnitForceNewtonMilli[] = "Millinewton";
constexpr static char huUnitForceNewtonMilli[] = "Millinewton";
constexpr static char enUnitFrequencyHertzMega[] = "Megahertz";
constexpr static char frUnitFrequencyHertzMega[] = "Mégahertz";
constexpr static char nlUnitFrequencyHertzMega[] = "Megahertz";
constexpr static char ptUnitFrequencyHertzMega[] = "Megahertz";
constexpr static char itUnitFrequencyHertzMega[] = "Megahertz";
constexpr static char deUnitFrequencyHertzMega[] = "Megahertz";
constexpr static char esUnitFrequencyHertzMega[] = "Megahertz";
constexpr static char huUnitFrequencyHertzMega[] = "Megahertz";
constexpr static char enUnitFrequencyMenu[] = "Frequency";
constexpr static char frUnitFrequencyMenu[] = "Fréquence";
constexpr static char nlUnitFrequencyMenu[] = "Frequentie";
constexpr static char ptUnitFrequencyMenu[] = "Frequência";
constexpr static char itUnitFrequencyMenu[] = "Frequenza";
constexpr static char deUnitFrequencyMenu[] = "Frequenz";
constexpr static char esUnitFrequencyMenu[] = "Frequency";
constexpr static char huUnitFrequencyMenu[] = "Frekvencia";
constexpr static char enUnitIlluminanceLux[] = "Lux";
constexpr static char frUnitIlluminanceLux[] = "Lux";
constexpr static char nlUnitIlluminanceLux[] = "Lux";
constexpr static char ptUnitIlluminanceLux[] = "Lux";
constexpr static char itUnitIlluminanceLux[] = "Lusso";
constexpr static char deUnitIlluminanceLux[] = "Lux";
constexpr static char esUnitIlluminanceLux[] = "Lux";
constexpr static char huUnitIlluminanceLux[] = "Lux";
constexpr static char enUnitIlluminanceMenu[] = "Illuminance";
constexpr static char frUnitIlluminanceMenu[] = "Eclairement Lumineux";
constexpr static char nlUnitIlluminanceMenu[] = "Verlichtingssterkte";
constexpr static char ptUnitIlluminanceMenu[] = "Iluminamento";
constexpr static char itUnitIlluminanceMenu[] = "Illuminamento";
constexpr static char deUnitIlluminanceMenu[] = "Beleuchtungsstärke";
constexpr static char esUnitIlluminanceMenu[] = "Luz Iluminada";
constexpr static char huUnitIlluminanceMenu[] = "Megvilágítás";
constexpr static char enUnitImperialMenu[] = "Imperial";
constexpr static char frUnitImperialMenu[] = "Impérial";
constexpr static char nlUnitImperialMenu[] = "Imperiaal";
constexpr static char ptUnitImperialMenu[] = "Imperial";
constexpr static char itUnitImperialMenu[] = "Imperiale";
constexpr static char deUnitImperialMenu[] = "Angloamerikanisch";
constexpr static char esUnitImperialMenu[] = "Imperial";
constexpr static char huUnitImperialMenu[] = "Birodalmi";
constexpr static char enUnitLuminousFluxLumen[] = "Lumen";
constexpr static char frUnitLuminousFluxLumen[] = "Lumen";
constexpr static char nlUnitLuminousFluxLumen[] = "Lumen";
constexpr static char ptUnitLuminousFluxLumen[] = "Lúmen";
constexpr static char itUnitLuminousFluxLumen[] = "Lumen";
constexpr static char deUnitLuminousFluxLumen[] = "Lumen";
constexpr static char esUnitLuminousFluxLumen[] = "Lumen";
constexpr static char huUnitLuminousFluxLumen[] = "Lumen";
constexpr static char enUnitLuminousFluxMenu[] = "Luminous Flux";
constexpr static char frUnitLuminousFluxMenu[] = "Flux Lumineux";
constexpr static char nlUnitLuminousFluxMenu[] = "Lichtstroom";
constexpr static char ptUnitLuminousFluxMenu[] = "Fluxo luminoso";
constexpr static char itUnitLuminousFluxMenu[] = "Flusso luminoso";
constexpr static char deUnitLuminousFluxMenu[] = "Lichtstrom";
constexpr static char esUnitLuminousFluxMenu[] = "Flujo luminoso";
constexpr static char huUnitLuminousFluxMenu[] = "Fényáram";
constexpr static char enUnitLuminousIntensityMenu[] = "Luminous intensity";
constexpr static char frUnitLuminousIntensityMenu[] = "Intensité lumineuse";
constexpr static char nlUnitLuminousIntensityMenu[] = "Lichtsterkte";
constexpr static char ptUnitLuminousIntensityMenu[] = "Intensidade luminosa";
constexpr static char itUnitLuminousIntensityMenu[] = "Intensità luminosa";
constexpr static char deUnitLuminousIntensityMenu[] = "Lichtstärke";
constexpr static char esUnitLuminousIntensityMenu[] = "Luminous intensity";
constexpr static char huUnitLuminousIntensityMenu[] = "Fényerö";
constexpr static char enUnitMagneticFieldMenu[] = "Magnetic field";
constexpr static char frUnitMagneticFieldMenu[] = "Induction électromagnétique";
constexpr static char nlUnitMagneticFieldMenu[] = "Magnetisch veld";
constexpr static char ptUnitMagneticFieldMenu[] = "Campo magnético";
constexpr static char itUnitMagneticFieldMenu[] = "Induzione elettromagnetica";
constexpr static char deUnitMagneticFieldMenu[] = "Magnetfeld";
constexpr static char esUnitMagneticFieldMenu[] = "Magnetic field";
constexpr static char huUnitMagneticFieldMenu[] = "Mágneses mezö";
constexpr static char enUnitMassGram[] = "Gram";
constexpr static char frUnitMassGram[] = "Gramme";
constexpr static char nlUnitMassGram[] = "Gram";
constexpr static char ptUnitMassGram[] = "Grama";
constexpr static char itUnitMassGram[] = "Grammo";
constexpr static char deUnitMassGram[] = "Gramm";
constexpr static char esUnitMassGram[] = "Gram";
constexpr static char huUnitMassGram[] = "Gramm";
constexpr static char enUnitMassGramKilo[] = "Kilogram";
constexpr static char frUnitMassGramKilo[] = "Kilogramme";
constexpr static char nlUnitMassGramKilo[] = "Kilogram";
constexpr static char ptUnitMassGramKilo[] = "Quilograma";
constexpr static char itUnitMassGramKilo[] = "Kilogrammo";
constexpr static char deUnitMassGramKilo[] = "Kilogramm";
constexpr static char esUnitMassGramKilo[] = "Kilogram";
constexpr static char huUnitMassGramKilo[] = "Kilogramm";
constexpr static char enUnitMassGramMicro[] = "Microgram";
constexpr static char frUnitMassGramMicro[] = "Microgramme";
constexpr static char nlUnitMassGramMicro[] = "Microgram";
constexpr static char ptUnitMassGramMicro[] = "Micrograma";
constexpr static char itUnitMassGramMicro[] = "Microgrammo";
constexpr static char deUnitMassGramMicro[] = "Mikrogramm";
constexpr static char esUnitMassGramMicro[] = "Microgram";
constexpr static char huUnitMassGramMicro[] = "Mikrogramm";
constexpr static char enUnitMassGramMilli[] = "Milligram";
constexpr static char frUnitMassGramMilli[] = "Milligramme";
constexpr static char nlUnitMassGramMilli[] = "Milligram";
constexpr static char ptUnitMassGramMilli[] = "Miligrama";
constexpr static char itUnitMassGramMilli[] = "Milligrammo";
constexpr static char deUnitMassGramMilli[] = "Milligramm";
constexpr static char esUnitMassGramMilli[] = "Milligram";
constexpr static char huUnitMassGramMilli[] = "Milligramm";
constexpr static char enUnitMassLongTon[] = "Long Ton";
constexpr static char frUnitMassLongTon[] = "Tonne longue";
constexpr static char nlUnitMassLongTon[] = "Long Ton";
constexpr static char ptUnitMassLongTon[] = "Tonelada inglesa";
constexpr static char itUnitMassLongTon[] = "Tonnellata inglese";
constexpr static char deUnitMassLongTon[] = "Britische Tonne";
constexpr static char esUnitMassLongTon[] = "Tonelada larga";
constexpr static char huUnitMassLongTon[] = "Hosszú tonna";
constexpr static char enUnitMassMenu[] = "Mass";
constexpr static char frUnitMassMenu[] = "Masse";
constexpr static char nlUnitMassMenu[] = "Massa";
constexpr static char ptUnitMassMenu[] = "Massa";
constexpr static char itUnitMassMenu[] = "Massa";
constexpr static char deUnitMassMenu[] = "Masse";
constexpr static char esUnitMassMenu[] = "Mass";
constexpr static char huUnitMassMenu[] = "Tömeg";
constexpr static char enUnitMassOunce[] = "Ounce";
constexpr static char frUnitMassOunce[] = "Once";
constexpr static char nlUnitMassOunce[] = "Ons";
constexpr static char ptUnitMassOunce[] = "Onça";
constexpr static char itUnitMassOunce[] = "Oncia";
constexpr static char deUnitMassOunce[] = "Unze";
constexpr static char esUnitMassOunce[] = "Onza";
constexpr static char huUnitMassOunce[] = "Uncia";
constexpr static char enUnitMassPound[] = "Pound";
constexpr static char frUnitMassPound[] = "Livre";
constexpr static char nlUnitMassPound[] = "Pond";
constexpr static char ptUnitMassPound[] = "Libra";
constexpr static char itUnitMassPound[] = "Libbra";
constexpr static char deUnitMassPound[] = "Pfund";
constexpr static char esUnitMassPound[] = "Libra";
constexpr static char huUnitMassPound[] = "Font";
constexpr static char enUnitMassShortTon[] = "Short Ton";
constexpr static char frUnitMassShortTon[] = "Tonne courte";
constexpr static char nlUnitMassShortTon[] = "Short Ton";
constexpr static char ptUnitMassShortTon[] = "Tonelada americana";
constexpr static char itUnitMassShortTon[] = "Tonnellata americana";
constexpr static char deUnitMassShortTon[] = "Amerikanische Tonne";
constexpr static char esUnitMassShortTon[] = "Tonelada corta";
constexpr static char huUnitMassShortTon[] = "Rövid tonna";
constexpr static char enUnitMassTonne[] = "Metric Ton";
constexpr static char frUnitMassTonne[] = "Tonne";
constexpr static char nlUnitMassTonne[] = "Ton";
constexpr static char ptUnitMassTonne[] = "Tonelada";
constexpr static char itUnitMassTonne[] = "Tonnellata";
constexpr static char deUnitMassTonne[] = "Tonne";
constexpr static char esUnitMassTonne[] = "Tonne";
constexpr static char huUnitMassTonne[] = "Tonna";
constexpr static char enUnitMetricMenu[] = "Metric";
constexpr static char frUnitMetricMenu[] = "Métrique";
constexpr static char nlUnitMetricMenu[] = "Metriek";
constexpr static char ptUnitMetricMenu[] = "Métrico";
constexpr static char itUnitMetricMenu[] = "Metrico";
constexpr static char deUnitMetricMenu[] = "Metrisch";
constexpr static char esUnitMetricMenu[] = "Métrico";
constexpr static char huUnitMetricMenu[] = "Metrikus";
constexpr static char enUnitPotentialMenu[] = "Electric potential";
constexpr static char frUnitPotentialMenu[] = "Tension électrique";
constexpr static char nlUnitPotentialMenu[] = "Elektrisch potentiaal";
constexpr static char ptUnitPotentialMenu[] = "Potência elétrica";
constexpr static char itUnitPotentialMenu[] = "Tensione elettrica";
constexpr static char deUnitPotentialMenu[] = "Elektrische Spannung";
constexpr static char esUnitPotentialMenu[] = "Electric potential";
constexpr static char huUnitPotentialMenu[] = "Elektromos potenciál";
constexpr static char enUnitPotentialVoltMicro[] = "Microvolt";
constexpr static char frUnitPotentialVoltMicro[] = "Microvolt";
constexpr static char nlUnitPotentialVoltMicro[] = "Microvolt";
constexpr static char ptUnitPotentialVoltMicro[] = "Microvolt";
constexpr static char itUnitPotentialVoltMicro[] = "Microvolt";
constexpr static char deUnitPotentialVoltMicro[] = "Mikrovolt";
constexpr static char esUnitPotentialVoltMicro[] = "Microvolt";
constexpr static char huUnitPotentialVoltMicro[] = "Microvolt";
constexpr static char enUnitPotentialVoltMilli[] = "Millivolt";
constexpr static char frUnitPotentialVoltMilli[] = "Millivolt";
constexpr static char nlUnitPotentialVoltMilli[] = "Millivolt";
constexpr static char ptUnitPotentialVoltMilli[] = "Milivolt";
constexpr static char itUnitPotentialVoltMilli[] = "Millivolt";
constexpr static char deUnitPotentialVoltMilli[] = "Millivolt";
constexpr static char esUnitPotentialVoltMilli[] = "Millivolt";
constexpr static char huUnitPotentialVoltMilli[] = "Millivolt";
constexpr static char enUnitPowerMenu[] = "Power";
constexpr static char frUnitPowerMenu[] = "Puissance";
constexpr static char nlUnitPowerMenu[] = "Vermogen";
constexpr static char ptUnitPowerMenu[] = "Potência";
constexpr static char itUnitPowerMenu[] = "Potenza";
constexpr static char deUnitPowerMenu[] = "Leistung";
constexpr static char esUnitPowerMenu[] = "Power";
constexpr static char huUnitPowerMenu[] = "Teljesítmény";
constexpr static char enUnitPowerWattMega[] = "Megawatt";
constexpr static char frUnitPowerWattMega[] = "Mégawatt";
constexpr static char nlUnitPowerWattMega[] = "Megawatt";
constexpr static char ptUnitPowerWattMega[] = "Megawatt";
constexpr static char itUnitPowerWattMega[] = "Megawatt";
constexpr static char deUnitPowerWattMega[] = "Megawatt";
constexpr static char esUnitPowerWattMega[] = "Megawatt";
constexpr static char huUnitPowerWattMega[] = "Megawatt";
constexpr static char enUnitPowerWattMicro[] = "Microwatt";
constexpr static char frUnitPowerWattMicro[] = "Microwatt";
constexpr static char nlUnitPowerWattMicro[] = "Microwatt";
constexpr static char ptUnitPowerWattMicro[] = "Microwatt";
constexpr static char itUnitPowerWattMicro[] = "Microwatt";
constexpr static char deUnitPowerWattMicro[] = "Mikrowatt";
constexpr static char esUnitPowerWattMicro[] = "Microwatt";
constexpr static char huUnitPowerWattMicro[] = "Microwatt";
constexpr static char enUnitPowerWattMilli[] = "Milliwatt";
constexpr static char frUnitPowerWattMilli[] = "Milliwatt";
constexpr static char nlUnitPowerWattMilli[] = "Milliwatt";
constexpr static char ptUnitPowerWattMilli[] = "Miliwatt";
constexpr static char itUnitPowerWattMilli[] = "Milliwatt";
constexpr static char deUnitPowerWattMilli[] = "Milliwatt";
constexpr static char esUnitPowerWattMilli[] = "Milliwatt";
constexpr static char huUnitPowerWattMilli[] = "Milliwatt";
constexpr static char enUnitPressureAtm[] = "Atmosphere";
constexpr static char frUnitPressureAtm[] = "Atmosphère";
constexpr static char nlUnitPressureAtm[] = "Atmosfeer";
constexpr static char ptUnitPressureAtm[] = "Atmosfera";
constexpr static char itUnitPressureAtm[] = "Atmosfera";
constexpr static char deUnitPressureAtm[] = "Atmosphere";
constexpr static char esUnitPressureAtm[] = "Atmosphere";
constexpr static char huUnitPressureAtm[] = "Légkör";
constexpr static char enUnitPressureMenu[] = "Pressure";
constexpr static char frUnitPressureMenu[] = "Pression";
constexpr static char nlUnitPressureMenu[] = "Druk";
constexpr static char ptUnitPressureMenu[] = "Pressão";
constexpr static char itUnitPressureMenu[] = "Pressione";
constexpr static char deUnitPressureMenu[] = "Druck";
constexpr static char esUnitPressureMenu[] = "Pressure";
constexpr static char huUnitPressureMenu[] = "Nyomás";
constexpr static char enUnitPressurePascalHecto[] = "Hectopascal";
constexpr static char frUnitPressurePascalHecto[] = "Hectopascal";
constexpr static char nlUnitPressurePascalHecto[] = "Hectopascal";
constexpr static char ptUnitPressurePascalHecto[] = "Hectopascal";
constexpr static char itUnitPressurePascalHecto[] = "Hectopascal";
constexpr static char deUnitPressurePascalHecto[] = "Hektopascal";
constexpr static char esUnitPressurePascalHecto[] = "Hectopascal";
constexpr static char huUnitPressurePascalHecto[] = "Hectopascal";
constexpr static char enUnitResistanceMenu[] = "Electrical resistance";
constexpr static char frUnitResistanceMenu[] = "Résistance électrique";
constexpr static char nlUnitResistanceMenu[] = "Elektrische weerstand";
constexpr static char ptUnitResistanceMenu[] = "Resistência elétrica";
constexpr static char itUnitResistanceMenu[] = "Resistenza elettrica";
constexpr static char deUnitResistanceMenu[] = "Elektrischer Widerstand";
constexpr static char esUnitResistanceMenu[] = "Electrical resistance";
constexpr static char huUnitResistanceMenu[] = "Elektromos ellenállás";
constexpr static char enUnitSolidAngleMenu[] = "Solid Angle";
constexpr static char frUnitSolidAngleMenu[] = "Angle Solide";
constexpr static char nlUnitSolidAngleMenu[] = "Ruimtehoek";
constexpr static char ptUnitSolidAngleMenu[] = "Angulo sólido";
constexpr static char itUnitSolidAngleMenu[] = "Angolo solido";
constexpr static char deUnitSolidAngleMenu[] = "Raumwinkel";
constexpr static char esUnitSolidAngleMenu[] = "Angulo sólido";
constexpr static char huUnitSolidAngleMenu[] = "Folyamatos szög";
constexpr static char enUnitSolidAngleSteradian[] = "Steradian";
constexpr static char frUnitSolidAngleSteradian[] = "Stéradian";
constexpr static char nlUnitSolidAngleSteradian[] = "Steradiaal";
constexpr static char ptUnitSolidAngleSteradian[] = "Esferorradiano";
constexpr static char itUnitSolidAngleSteradian[] = "Steradian";
constexpr static char deUnitSolidAngleSteradian[] = "Steradiant";
constexpr static char esUnitSolidAngleSteradian[] = "Estereorradián";
constexpr static char huUnitSolidAngleSteradian[] = "Szteradiánt";
constexpr static char enUnitSurfaceAcre[] = "Acre";
constexpr static char frUnitSurfaceAcre[] = "Acre";
constexpr static char nlUnitSurfaceAcre[] = "Acre";
constexpr static char ptUnitSurfaceAcre[] = "Acre";
constexpr static char itUnitSurfaceAcre[] = "Acro";
constexpr static char deUnitSurfaceAcre[] = "Morgen";
constexpr static char esUnitSurfaceAcre[] = "Acre";
constexpr static char huUnitSurfaceAcre[] = "Acre";
constexpr static char enUnitSurfaceHectar[] = "Hectare";
constexpr static char frUnitSurfaceHectar[] = "Hectare";
constexpr static char nlUnitSurfaceHectar[] = "Hectare";
constexpr static char ptUnitSurfaceHectar[] = "Hectare";
constexpr static char itUnitSurfaceHectar[] = "Ettaro";
constexpr static char deUnitSurfaceHectar[] = "Hektar";
constexpr static char esUnitSurfaceHectar[] = "Hectare";
constexpr static char huUnitSurfaceHectar[] = "Hektár";
constexpr static char enUnitSurfaceMenu[] = "Area";
constexpr static char frUnitSurfaceMenu[] = "Superficie";
constexpr static char nlUnitSurfaceMenu[] = "Oppervlakte";
constexpr static char ptUnitSurfaceMenu[] = "Area";
constexpr static char itUnitSurfaceMenu[] = "Superficie";
constexpr static char deUnitSurfaceMenu[] = "Fläche";
constexpr static char esUnitSurfaceMenu[] = "Area";
constexpr static char huUnitSurfaceMenu[] = "Terület";
constexpr static char enUnitTemperatureMenu[] = "Temperature";
constexpr static char frUnitTemperatureMenu[] = "Température";
constexpr static char nlUnitTemperatureMenu[] = "Temperatuur";
constexpr static char ptUnitTemperatureMenu[] = "Temperatura";
constexpr static char itUnitTemperatureMenu[] = "Temperatura";
constexpr static char deUnitTemperatureMenu[] = "Temperatur";
constexpr static char esUnitTemperatureMenu[] = "Temperature";
constexpr static char huUnitTemperatureMenu[] = "Hömérséklet";
constexpr static char enUnitTimeDay[] = "Day";
constexpr static char frUnitTimeDay[] = "Jour";
constexpr static char nlUnitTimeDay[] = "Dag";
constexpr static char ptUnitTimeDay[] = "Dia";
constexpr static char itUnitTimeDay[] = "Giorno";
constexpr static char deUnitTimeDay[] = "Tag";
constexpr static char esUnitTimeDay[] = "Day";
constexpr static char huUnitTimeDay[] = "Nap";
constexpr static char enUnitTimeHour[] = "Hour";
constexpr static char frUnitTimeHour[] = "Heure";
constexpr static char nlUnitTimeHour[] = "Uur";
constexpr static char ptUnitTimeHour[] = "Hora";
constexpr static char itUnitTimeHour[] = "Ora";
constexpr static char deUnitTimeHour[] = "Stunde";
constexpr static char esUnitTimeHour[] = "Hour";
constexpr static char huUnitTimeHour[] = "Ora";
constexpr static char enUnitTimeMenu[] = "Time";
constexpr static char frUnitTimeMenu[] = "Temps";
constexpr static char nlUnitTimeMenu[] = "Tijd";
constexpr static char ptUnitTimeMenu[] = "Tempo";
constexpr static char itUnitTimeMenu[] = "Tempo";
constexpr static char deUnitTimeMenu[] = "Zeit";
constexpr static char esUnitTimeMenu[] = "Time";
constexpr static char huUnitTimeMenu[] = "Idö";
constexpr static char enUnitTimeMinute[] = "Minute";
constexpr static char frUnitTimeMinute[] = "Minute";
constexpr static char nlUnitTimeMinute[] = "Minuut";
constexpr static char ptUnitTimeMinute[] = "Minuto";
constexpr static char itUnitTimeMinute[] = "Minuto";
constexpr static char deUnitTimeMinute[] = "Minute";
constexpr static char esUnitTimeMinute[] = "Minute";
constexpr static char huUnitTimeMinute[] = "Perc";
constexpr static char enUnitTimeMonth[] = "Month";
constexpr static char frUnitTimeMonth[] = "Mois";
constexpr static char nlUnitTimeMonth[] = "Maand";
constexpr static char ptUnitTimeMonth[] = "Mês";
constexpr static char itUnitTimeMonth[] = "Mese";
constexpr static char deUnitTimeMonth[] = "Monat";
constexpr static char esUnitTimeMonth[] = "Month";
constexpr static char huUnitTimeMonth[] = "Hónap";
constexpr static char enUnitTimeSecond[] = "Second";
constexpr static char frUnitTimeSecond[] = "Seconde";
constexpr static char nlUnitTimeSecond[] = "Seconde";
constexpr static char ptUnitTimeSecond[] = "Segundo";
constexpr static char itUnitTimeSecond[] = "Secondo";
constexpr static char deUnitTimeSecond[] = "Sekunde";
constexpr static char esUnitTimeSecond[] = "Second";
constexpr static char huUnitTimeSecond[] = "Másodperc";
constexpr static char enUnitTimeSecondMicro[] = "Microsecond";
constexpr static char frUnitTimeSecondMicro[] = "Microseconde";
constexpr static char nlUnitTimeSecondMicro[] = "Microseconde";
constexpr static char ptUnitTimeSecondMicro[] = "Microsegundo";
constexpr static char itUnitTimeSecondMicro[] = "Microsecondo";
constexpr static char deUnitTimeSecondMicro[] = "Mikrosekunde";
constexpr static char esUnitTimeSecondMicro[] = "Microsecond";
constexpr static char huUnitTimeSecondMicro[] = "Mikroszekundum";
constexpr static char enUnitTimeSecondMilli[] = "Millisecond";
constexpr static char frUnitTimeSecondMilli[] = "Milliseconde";
constexpr static char nlUnitTimeSecondMilli[] = "MilliSeconde";
constexpr static char ptUnitTimeSecondMilli[] = "Milisegundo";
constexpr static char itUnitTimeSecondMilli[] = "Millisecondo";
constexpr static char deUnitTimeSecondMilli[] = "Millisekunde";
constexpr static char esUnitTimeSecondMilli[] = "Millisecond";
constexpr static char huUnitTimeSecondMilli[] = "Miliszekundum";
constexpr static char enUnitTimeSecondNano[] = "Nanosecond";
constexpr static char frUnitTimeSecondNano[] = "Nanoseconde";
constexpr static char nlUnitTimeSecondNano[] = "Nanoseconde";
constexpr static char ptUnitTimeSecondNano[] = "Nanosegundo";
constexpr static char itUnitTimeSecondNano[] = "Nanosecondo";
constexpr static char deUnitTimeSecondNano[] = "Nanosekunde";
constexpr static char esUnitTimeSecondNano[] = "Nanosecond";
constexpr static char huUnitTimeSecondNano[] = "Nanoszekundum";
constexpr static char enUnitTimeWeek[] = "Week";
constexpr static char frUnitTimeWeek[] = "Semaine";
constexpr static char nlUnitTimeWeek[] = "Week";
constexpr static char ptUnitTimeWeek[] = "Semana";
constexpr static char itUnitTimeWeek[] = "Settimana";
constexpr static char deUnitTimeWeek[] = "Woche";
constexpr static char esUnitTimeWeek[] = "Week";
constexpr static char huUnitTimeWeek[] = "hét";
constexpr static char enUnitTimeYear[] = "Year";
constexpr static char frUnitTimeYear[] = "Année";
constexpr static char nlUnitTimeYear[] = "Jaar";
constexpr static char ptUnitTimeYear[] = "Ano";
constexpr static char itUnitTimeYear[] = "Anno";
constexpr static char deUnitTimeYear[] = "Jahr";
constexpr static char esUnitTimeYear[] = "Year";
constexpr static char huUnitTimeYear[] = "Ev";
constexpr static char enUnitVolumeCup[] = "Cup";
constexpr static char frUnitVolumeCup[] = "Tasse";
constexpr static char nlUnitVolumeCup[] = "Kop";
constexpr static char ptUnitVolumeCup[] = "Copo";
constexpr static char itUnitVolumeCup[] = "Tazza";
constexpr static char deUnitVolumeCup[] = "Tasse";
constexpr static char esUnitVolumeCup[] = "Taza";
constexpr static char huUnitVolumeCup[] = "Kupa";
constexpr static char enUnitVolumeFluidOunce[] = "Fluid Ounce";
constexpr static char frUnitVolumeFluidOunce[] = "Once fluide";
constexpr static char nlUnitVolumeFluidOunce[] = "Vloeibare ons";
constexpr static char ptUnitVolumeFluidOunce[] = "Onça fluída";
constexpr static char itUnitVolumeFluidOunce[] = "Oncia liquida";
constexpr static char deUnitVolumeFluidOunce[] = "Flüssigunze";
constexpr static char esUnitVolumeFluidOunce[] = "Onza líquida";
constexpr static char huUnitVolumeFluidOunce[] = "Folyadék uncia";
constexpr static char enUnitVolumeGallon[] = "Gallon";
constexpr static char frUnitVolumeGallon[] = "Gallon";
constexpr static char nlUnitVolumeGallon[] = "Gallon";
constexpr static char ptUnitVolumeGallon[] = "Galão";
constexpr static char itUnitVolumeGallon[] = "Gallone";
constexpr static char deUnitVolumeGallon[] = "Gallone";
constexpr static char esUnitVolumeGallon[] = "Galón";
constexpr static char huUnitVolumeGallon[] = "Gallon";
constexpr static char enUnitVolumeLiter[] = "Liter";
constexpr static char frUnitVolumeLiter[] = "Litre";
constexpr static char nlUnitVolumeLiter[] = "Liter";
constexpr static char ptUnitVolumeLiter[] = "Litro";
constexpr static char itUnitVolumeLiter[] = "Litro";
constexpr static char deUnitVolumeLiter[] = "Liter";
constexpr static char esUnitVolumeLiter[] = "Liter";
constexpr static char huUnitVolumeLiter[] = "Liter";
constexpr static char enUnitVolumeLiterCenti[] = "Centiliter";
constexpr static char frUnitVolumeLiterCenti[] = "Centilitre";
constexpr static char nlUnitVolumeLiterCenti[] = "Centiliter";
constexpr static char ptUnitVolumeLiterCenti[] = "Centilitro";
constexpr static char itUnitVolumeLiterCenti[] = "Centilitro";
constexpr static char deUnitVolumeLiterCenti[] = "Centiliter";
constexpr static char esUnitVolumeLiterCenti[] = "Centiliter";
constexpr static char huUnitVolumeLiterCenti[] = "Centiliter";
constexpr static char enUnitVolumeLiterDeci[] = "Deciliter";
constexpr static char frUnitVolumeLiterDeci[] = "Décilitre";
constexpr static char nlUnitVolumeLiterDeci[] = "Deciliter";
constexpr static char ptUnitVolumeLiterDeci[] = "Decilitro";
constexpr static char itUnitVolumeLiterDeci[] = "Decilitro";
constexpr static char deUnitVolumeLiterDeci[] = "Deziliter";
constexpr static char esUnitVolumeLiterDeci[] = "Deciliter";
constexpr static char huUnitVolumeLiterDeci[] = "Deciliter";
constexpr static char enUnitVolumeLiterMilli[] = "Milliliter";
constexpr static char frUnitVolumeLiterMilli[] = "Millilitre";
constexpr static char nlUnitVolumeLiterMilli[] = "Milliliter";
constexpr static char ptUnitVolumeLiterMilli[] = "Mililitro";
constexpr static char itUnitVolumeLiterMilli[] = "Millilitro";
constexpr static char deUnitVolumeLiterMilli[] = "Milliliter";
constexpr static char esUnitVolumeLiterMilli[] = "Milliliter";
constexpr static char huUnitVolumeLiterMilli[] = "Milliliter";
constexpr static char enUnitVolumeMenu[] = "Volume";
constexpr static char frUnitVolumeMenu[] = "Volume";
constexpr static char nlUnitVolumeMenu[] = "Volume";
constexpr static char ptUnitVolumeMenu[] = "Volume";
constexpr static char itUnitVolumeMenu[] = "Volume";
constexpr static char deUnitVolumeMenu[] = "Volumen";
constexpr static char esUnitVolumeMenu[] = "Volume";
constexpr static char huUnitVolumeMenu[] = "Kötet";
constexpr static char enUnitVolumePint[] = "Pint";
constexpr static char frUnitVolumePint[] = "Pinte";
constexpr static char nlUnitVolumePint[] = "Pint";
constexpr static char ptUnitVolumePint[] = "Pinto";
constexpr static char itUnitVolumePint[] = "Pinta";
constexpr static char deUnitVolumePint[] = "Pint";
constexpr static char esUnitVolumePint[] = "Pinta";
constexpr static char huUnitVolumePint[] = "Pint";
constexpr static char enUnitVolumeQuart[] = "Quart";
constexpr static char frUnitVolumeQuart[] = "Quart";
constexpr static char nlUnitVolumeQuart[] = "Quart";
constexpr static char ptUnitVolumeQuart[] = "Quarto";
constexpr static char itUnitVolumeQuart[] = "Quarto";
constexpr static char deUnitVolumeQuart[] = "Quart";
constexpr static char esUnitVolumeQuart[] = "Cuarto";
constexpr static char huUnitVolumeQuart[] = "Quart";
constexpr static char enUnitVolumeTablespoon[] = "Tablespoon";
constexpr static char frUnitVolumeTablespoon[] = "Cuillère à soupe";
constexpr static char nlUnitVolumeTablespoon[] = "Eetlepel";
constexpr static char ptUnitVolumeTablespoon[] = "Colher de sopa";
constexpr static char itUnitVolumeTablespoon[] = "Cucchiaio";
constexpr static char deUnitVolumeTablespoon[] = "Esslöffel";
constexpr static char esUnitVolumeTablespoon[] = "Cucharada";
constexpr static char huUnitVolumeTablespoon[] = "evőkanál";
constexpr static char enUnitVolumeTeaspoon[] = "Teaspoon";
constexpr static char frUnitVolumeTeaspoon[] = "Cuillère à café";
constexpr static char nlUnitVolumeTeaspoon[] = "Theelepel";
constexpr static char ptUnitVolumeTeaspoon[] = "Colher de chá";
constexpr static char itUnitVolumeTeaspoon[] = "Cucchiaino";
constexpr static char deUnitVolumeTeaspoon[] = "Teelöffel";
constexpr static char esUnitVolumeTeaspoon[] = "Cucharadita";
constexpr static char huUnitVolumeTeaspoon[] = "Teáskanál";
constexpr static char enUnrealEquation[] = "Unreal equation";
constexpr static char frUnrealEquation[] = "Une équation n'est pas réelle";
constexpr static char nlUnrealEquation[] = "Vergelijking is niet reëel";
constexpr static char ptUnrealEquation[] = "Uma equação não é real";
constexpr static char itUnrealEquation[] = "Un'equazione non è reale";
constexpr static char deUnrealEquation[] = "Nicht reelle Gleichung";
constexpr static char esUnrealEquation[] = "Una ecuación no es real";
constexpr static char huUnrealEquation[] = "Irreális egyenlet";
constexpr static char enUpdateAvailable[] = "UPDATE AVAILABLE";
constexpr static char frUpdateAvailable[] = "MISE A JOUR DISPONIBLE";
constexpr static char nlUpdateAvailable[] = "UPDATE BESCHIKBAAR";
constexpr static char ptUpdateAvailable[] = "ATUALIZACAO DISPONIVEL";
constexpr static char itUpdateAvailable[] = "AGGIORNAMENTO DISPONIBILE";
constexpr static char deUpdateAvailable[] = "AKTUALISIERUNG VERFUGBAR";
constexpr static char esUpdateAvailable[] = "ACTUALIZACION DISPONIBLE";
constexpr static char huUpdateAvailable[] = "Elérhetö Frissítések!";
constexpr static char enUpdateMessage1[] = "There are important upgrades";
constexpr static char frUpdateMessage1[] = "Des améliorations importantes existent";
constexpr static char nlUpdateMessage1[] = "Er zijn belangrijke updates";
constexpr static char ptUpdateMessage1[] = "Existem melhorias significativas";
constexpr static char itUpdateMessage1[] = "Esistono miglioramenti significativi";
constexpr static char deUpdateMessage1[] = "Wichtige Verbesserungen für Ihren";
constexpr static char esUpdateMessage1[] = "Hay mejoras importantes";
constexpr static char huUpdateMessage1[] = "Fontos frissítések vannak";
constexpr static char enUpdateMessage2[] = "for your calculator.";
constexpr static char frUpdateMessage2[] = "pour votre calculatrice.";
constexpr static char nlUpdateMessage2[] = "voor je rekenmachine.";
constexpr static char ptUpdateMessage2[] = "para a sua calculadora.";
constexpr static char itUpdateMessage2[] = "per la vostra calcolatrice.";
constexpr static char deUpdateMessage2[] = "Taschenrechner stehen zur Verfügung.";
constexpr static char esUpdateMessage2[] = "para su calculadora.";
constexpr static char huUpdateMessage2[] = "a számológépéhez.";
constexpr static char enUpdateMessage3[] = "Browse our page from your computer";
constexpr static char frUpdateMessage3[] = "Connectez-vous depuis votre ordinateur";
constexpr static char nlUpdateMessage3[] = "Ga vanaf je computer naar onze pagina";
constexpr static char ptUpdateMessage3[] = "Navegue na nossa página no seu computador";
constexpr static char itUpdateMessage3[] = "Connettetevi dal vostro computer";
constexpr static char deUpdateMessage3[] = "Verbinden Sie sich mit Ihrem PC mit";
constexpr static char esUpdateMessage3[] = "Visite nuestra página desde su ordenador";
constexpr static char huUpdateMessage3[] = "Töltje le a weboldalunkról az utolso verziót";
constexpr static char enUpdateMessage4[] = "www.numworks.com/update";
constexpr static char frUpdateMessage4[] = "www.numworks.com/update";
constexpr static char nlUpdateMessage4[] = "www.numworks.com/update";
constexpr static char ptUpdateMessage4[] = "www.numworks.com/update";
constexpr static char itUpdateMessage4[] = "www.numworks.com/update";
constexpr static char deUpdateMessage4[] = "www.numworks.com/update.";
constexpr static char esUpdateMessage4[] = "www.numworks.com/update";
constexpr static char huUpdateMessage4[] = "www.numworks.com/update";
constexpr static char enUpdatePopUp[] = "Update pop-up";
constexpr static char frUpdatePopUp[] = "Rappel de mise à jour";
constexpr static char nlUpdatePopUp[] = "Update pop-up";
constexpr static char ptUpdatePopUp[] = "Alertas de atualização";
constexpr static char itUpdatePopUp[] = "Promemoria aggiornamento";
constexpr static char deUpdatePopUp[] = "Erinnerung: Aktualisierung";
constexpr static char esUpdatePopUp[] = "Pop-up de actualización";
constexpr static char huUpdatePopUp[] = "Frissítés figyelmeztetés";
constexpr static char enUseEquationModel[] = "Use an equation template";
constexpr static char frUseEquationModel[] = "Utiliser un modèle d'équation";
constexpr static char nlUseEquationModel[] = "Gebruik een template";
constexpr static char ptUseEquationModel[] = "Usar um modelo de equação";
constexpr static char itUseEquationModel[] = "Utilizza un modello di equazione";
constexpr static char deUseEquationModel[] = "Verwenden Sie ein Gleichungsmodell";
constexpr static char esUseEquationModel[] = "Usar un modelo de ecuación";
constexpr static char huUseEquationModel[] = "Használjon egyenleti sablont";
constexpr static char enUsername[] = "Name";
constexpr static char frUsername[] = "Nom";
constexpr static char nlUsername[] = "Name";
constexpr static char ptUsername[] = "Nome";
constexpr static char itUsername[] = "Name";
constexpr static char deUsername[] = "Name";
constexpr static char esUsername[] = "Apellido";
constexpr static char huUsername[] = "Felhasználónév";
constexpr static char enVacuumImpedanceTag[] = "Vacuum Impedance";
constexpr static char frVacuumImpedanceTag[] = "Impédance du Vide";
constexpr static char nlVacuumImpedanceTag[] = "Vacuüm Impedantie";
constexpr static char ptVacuumImpedanceTag[] = "Impedância a Vácuo";
constexpr static char itVacuumImpedanceTag[] = "Impedenza di vuoto";
constexpr static char deVacuumImpedanceTag[] = "Vakuum-Impedanz";
constexpr static char esVacuumImpedanceTag[] = "Impedancia de vacío";
constexpr static char huVacuumImpedanceTag[] = "Vákuum impedancia";
constexpr static char enVacuum_permeabilityTag[] = "Vacuum permeability";
constexpr static char frVacuum_permeabilityTag[] = "Perméabilité du vide";
constexpr static char nlVacuum_permeabilityTag[] = "Magnetische veldconstante";
constexpr static char ptVacuum_permeabilityTag[] = "Permeabilidade ao vácuo";
constexpr static char itVacuum_permeabilityTag[] = "Permeabilità al vuoto";
constexpr static char deVacuum_permeabilityTag[] = "Vakuumdurchlässigkeit";
constexpr static char esVacuum_permeabilityTag[] = "Permeabilidad al vacío";
constexpr static char huVacuum_permeabilityTag[] = "Vákuumpermeabilitás";
constexpr static char enVacuum_permittivityTag[] = "Vacuum permittivity";
constexpr static char frVacuum_permittivityTag[] = "Permittivité du vide";
constexpr static char nlVacuum_permittivityTag[] = "Elektrische veldconstante";
constexpr static char ptVacuum_permittivityTag[] = "Permissividade a vácuo";
constexpr static char itVacuum_permittivityTag[] = "Permittività del vuoto";
constexpr static char deVacuum_permittivityTag[] = "Vakuum-Durchlässigkeit";
constexpr static char esVacuum_permittivityTag[] = "Permisividad de vacío";
constexpr static char huVacuum_permittivityTag[] = "Vákuum-engedély";
constexpr static char enValueNotReachedByRegression[] = "Value not reached in this window";
constexpr static char frValueNotReachedByRegression[] = "Valeur non atteinte dans cette fenêtre";
constexpr static char nlValueNotReachedByRegression[] = "Waarde niet gevonden in dit venster";
constexpr static char ptValueNotReachedByRegression[] = "Valor não alcançado nesta janela";
constexpr static char itValueNotReachedByRegression[] = "Valore non raggiunto in questa finestra";
constexpr static char deValueNotReachedByRegression[] = "Wert im Fenster nicht erreicht";
constexpr static char esValueNotReachedByRegression[] = "Valor no alcanzado en esta ventana";
constexpr static char huValueNotReachedByRegression[] = "Az ablakban az érték még nem volt elérve";
constexpr static char enValues1[] = "Value V1";
constexpr static char frValues1[] = "Valeurs V1";
constexpr static char nlValues1[] = "Waarden V1";
constexpr static char ptValues1[] = "Valores V1";
constexpr static char itValues1[] = "Valori V1";
constexpr static char deValues1[] = "Werte V1";
constexpr static char esValues1[] = "Valores V1";
constexpr static char huValues1[] = "V1 értékek";
constexpr static char enValues2[] = "Value V2";
constexpr static char frValues2[] = "Valeurs V2";
constexpr static char nlValues2[] = "Waarden V2";
constexpr static char ptValues2[] = "Valores V2";
constexpr static char itValues2[] = "Valori V2";
constexpr static char deValues2[] = "Werte V2";
constexpr static char esValues2[] = "Valores V2";
constexpr static char huValues2[] = "V2 értékek";
constexpr static char enValues3[] = "Value V3";
constexpr static char frValues3[] = "Valeurs V3";
constexpr static char nlValues3[] = "Waarden V3";
constexpr static char ptValues3[] = "Valores V3";
constexpr static char itValues3[] = "Valori V3";
constexpr static char deValues3[] = "Werte V3";
constexpr static char esValues3[] = "Valores V3";
constexpr static char huValues3[] = "V3 értékek";
constexpr static char enValuesTab[] = "Table";
constexpr static char frValuesTab[] = "Tableau";
constexpr static char nlValuesTab[] = "Tabel";
constexpr static char ptValuesTab[] = "Tabela";
constexpr static char itValuesTab[] = "Tabella";
constexpr static char deValuesTab[] = "Tabelle";
constexpr static char esValuesTab[] = "Tabla";
constexpr static char huValuesTab[] = "Táblázat";
constexpr static char enVariables[] = "Variables";
constexpr static char frVariables[] = "Variables";
constexpr static char nlVariables[] = "Variabelen";
constexpr static char ptVariables[] = "Variáveis";
constexpr static char itVariables[] = "Variabili";
constexpr static char deVariables[] = "Variablen";
constexpr static char esVariables[] = "Variables";
constexpr static char huVariables[] = "Változók";
constexpr static char enVectors[] = "Vectors";
constexpr static char frVectors[] = "Vecteurs";
constexpr static char nlVectors[] = "Vectoren";
constexpr static char ptVectors[] = "Vetores";
constexpr static char itVectors[] = "Vettori";
constexpr static char deVectors[] = "Vektoren";
constexpr static char esVectors[] = "Vectores";
constexpr static char huVectors[] = "Vektorok";
constexpr static char enVolumeDimension[] = "Volume";
constexpr static char frVolumeDimension[] = "Volume";
constexpr static char nlVolumeDimension[] = "Volume";
constexpr static char ptVolumeDimension[] = "Volume";
constexpr static char itVolumeDimension[] = "Volume";
constexpr static char deVolumeDimension[] = "Volumen";
constexpr static char esVolumeDimension[] = "Volumen";
constexpr static char huVolumeDimension[] = "Hangerő";
constexpr static char enWBosonMassTag[] = "W Boson";
constexpr static char frWBosonMassTag[] = "Boson W";
constexpr static char nlWBosonMassTag[] = "W-boson";
constexpr static char ptWBosonMassTag[] = "W Boson";
constexpr static char itWBosonMassTag[] = "W boson";
constexpr static char deWBosonMassTag[] = "W Boson";
constexpr static char esWBosonMassTag[] = "W Boson";
constexpr static char huWBosonMassTag[] = "W Boson";
constexpr static char enWarning[] = "Warning";
constexpr static char frWarning[] = "Attention";
constexpr static char nlWarning[] = "Waarschuwing";
constexpr static char ptWarning[] = "Atenção";
constexpr static char itWarning[] = "Attenzione";
constexpr static char deWarning[] = "Achtung";
constexpr static char esWarning[] = "Cuidado";
constexpr static char huWarning[] = "Figyelem";
constexpr static char enWater[] = "Water";
constexpr static char frWater[] = "Eau";
constexpr static char nlWater[] = "Water";
constexpr static char ptWater[] = "Agua";
constexpr static char itWater[] = "Acqua";
constexpr static char deWater[] = "Wasser";
constexpr static char esWater[] = "Agua";
constexpr static char huWater[] = "Víz";
constexpr static char enWaterTriplePointTag[] = "Water Triple Point";
constexpr static char frWaterTriplePointTag[] = "Point Triple de l'eau";
constexpr static char nlWaterTriplePointTag[] = "Water Tripelpunt";
constexpr static char ptWaterTriplePointTag[] = "Ponto Triplo de Agua";
constexpr static char itWaterTriplePointTag[] = "Punto triplo dell'acqua";
constexpr static char deWaterTriplePointTag[] = "Wasser-Tripelpunkt";
constexpr static char esWaterTriplePointTag[] = "Punto Triple de Agua";
constexpr static char huWaterTriplePointTag[] = "Víz hármas pont";
constexpr static char enWienTag[] = "Wien Constant";
constexpr static char frWienTag[] = "Constante de Wien";
constexpr static char nlWienTag[] = "Wienconstante";
constexpr static char ptWienTag[] = "Constante de Wien";
constexpr static char itWienTag[] = "Costante di vienna";
constexpr static char deWienTag[] = "Wien-Konstante";
constexpr static char esWienTag[] = "Constante de Wien";
constexpr static char huWienTag[] = "Wien Allandó";
constexpr static char enWithN0100[] = "with n0100";
constexpr static char frWithN0100[] = "avec n0100";
constexpr static char nlWithN0100[] = "with n0100";
constexpr static char ptWithN0100[] = "con n0100";
constexpr static char itWithN0100[] = "with n0100";
constexpr static char deWithN0100[] = "mit N0100";
constexpr static char esWithN0100[] = "con n0100";
constexpr static char huWithN0100[] = "n0100-al";
constexpr static char enWithSimulator[] = "with the simulator";
constexpr static char frWithSimulator[] = "avec le simulateur";
constexpr static char nlWithSimulator[] = "with the simulator";
constexpr static char ptWithSimulator[] = "con el simulador";
constexpr static char itWithSimulator[] = "with the simulator";
constexpr static char deWithSimulator[] = "mit dem Simulator";
constexpr static char esWithSimulator[] = "con el simulador";
constexpr static char huWithSimulator[] = "Szimulátorral";
constexpr static char enWood[] = "Wood";
constexpr static char frWood[] = "Bois";
constexpr static char nlWood[] = "Hout";
constexpr static char ptWood[] = "Madeira";
constexpr static char itWood[] = "Legno";
constexpr static char deWood[] = "Holz";
constexpr static char esWood[] = "Madera";
constexpr static char huWood[] = "Wood";
constexpr static char enXEnd[] = "X end";
constexpr static char frXEnd[] = "X fin";
constexpr static char nlXEnd[] = "X einde";
constexpr static char ptXEnd[] = "X fim";
constexpr static char itXEnd[] = "X finale";
constexpr static char deXEnd[] = "X Endwert";
constexpr static char esXEnd[] = "X fin";
constexpr static char huXEnd[] = "X vége";
constexpr static char enXPrediction[] = "Prediction given X";
constexpr static char frXPrediction[] = "Prédiction sachant X";
constexpr static char nlXPrediction[] = "Voorspelling gegeven X";
constexpr static char ptXPrediction[] = "Previsão dado X";
constexpr static char itXPrediction[] = "Previsione data X";
constexpr static char deXPrediction[] = "Berechne Y";
constexpr static char esXPrediction[] = "Predicción dado X";
constexpr static char huXPrediction[] = "Jóslás X megadva";
constexpr static char enXStart[] = "X start";
constexpr static char frXStart[] = "X début";
constexpr static char nlXStart[] = "X begin";
constexpr static char ptXStart[] = "X início";
constexpr static char itXStart[] = "X iniziale";
constexpr static char deXStart[] = "X Startwert";
constexpr static char esXStart[] = "X inicio";
constexpr static char huXStart[] = "X kezdete";
constexpr static char enYPrediction[] = "Prediction given Y";
constexpr static char frYPrediction[] = "Prédiction sachant Y";
constexpr static char nlYPrediction[] = "Voorspelling gegeven Y";
constexpr static char ptYPrediction[] = "Previsão dado Y";
constexpr static char itYPrediction[] = "Previsione data Y";
constexpr static char deYPrediction[] = "Berechne X";
constexpr static char esYPrediction[] = "Predicción dado Y";
constexpr static char huYPrediction[] = "Jóslás Y megadva";
constexpr static char enZBosonMassTag[] = "Z Boson";
constexpr static char frZBosonMassTag[] = "Boson Z";
constexpr static char nlZBosonMassTag[] = "Z-boson";
constexpr static char ptZBosonMassTag[] = "Z Boson";
constexpr static char itZBosonMassTag[] = "Z buson";
constexpr static char deZBosonMassTag[] = "Z Boson";
constexpr static char esZBosonMassTag[] = "Z Boson";
constexpr static char huZBosonMassTag[] = "Z Boson";
constexpr static char enZeros[] = "Zeros";
constexpr static char frZeros[] = "Racines";
constexpr static char nlZeros[] = "Nulpunten";
constexpr static char ptZeros[] = "Zeros";
constexpr static char itZeros[] = "Zeri";
constexpr static char deZeros[] = "Nullstellen";
constexpr static char esZeros[] = "Raíces";
constexpr static char huZeros[] = "Nullák";
constexpr static char enZinc[] = "Zinc";
constexpr static char frZinc[] = "Zinc";
constexpr static char nlZinc[] = "Zink";
constexpr static char ptZinc[] = "Zinco";
constexpr static char itZinc[] = "Zinco";
constexpr static char deZinc[] = "Zink";
constexpr static char esZinc[] = "Zinc";
constexpr static char huZinc[] = "Cink";

constexpr static const char * messages[1353][8] = {
  {enAbout, frAbout, nlAbout, ptAbout, itAbout, deAbout, esAbout, huAbout, },
  {enAboutWarning1, frAboutWarning1, nlAboutWarning1, ptAboutWarning1, itAboutWarning1, deAboutWarning1, esAboutWarning1, huAboutWarning1, },
  {enAboutWarning2, frAboutWarning2, nlAboutWarning2, ptAboutWarning2, itAboutWarning2, deAboutWarning2, esAboutWarning2, huAboutWarning2, },
  {enAboutWarning3, frAboutWarning3, nlAboutWarning3, ptAboutWarning3, itAboutWarning3, deAboutWarning3, esAboutWarning3, huAboutWarning3, },
  {enAboutWarning4, frAboutWarning4, nlAboutWarning4, ptAboutWarning4, itAboutWarning4, deAboutWarning4, esAboutWarning4, huAboutWarning4, },
  {enAbsoluteValue, frAbsoluteValue, nlAbsoluteValue, ptAbsoluteValue, itAbsoluteValue, deAbsoluteValue, esAbsoluteValue, huAbsoluteValue, },
  {enAccessibility, frAccessibility, nlAccessibility, ptAccessibility, itAccessibility, deAccessibility, esAccessibility, huAccessibility, },
  {enAccessibilityGamma, frAccessibilityGamma, nlAccessibilityGamma, ptAccessibilityGamma, itAccessibilityGamma, deAccessibilityGamma, esAccessibilityGamma, huAccessibilityGamma, },
  {enAccessibilityGammaBlue, frAccessibilityGammaBlue, nlAccessibilityGammaBlue, ptAccessibilityGammaBlue, itAccessibilityGammaBlue, deAccessibilityGammaBlue, esAccessibilityGammaBlue, huAccessibilityGammaBlue, },
  {enAccessibilityGammaGreen, frAccessibilityGammaGreen, nlAccessibilityGammaGreen, ptAccessibilityGammaGreen, itAccessibilityGammaGreen, deAccessibilityGammaGreen, esAccessibilityGammaGreen, huAccessibilityGammaGreen, },
  {enAccessibilityGammaRed, frAccessibilityGammaRed, nlAccessibilityGammaRed, ptAccessibilityGammaRed, itAccessibilityGammaRed, deAccessibilityGammaRed, esAccessibilityGammaRed, huAccessibilityGammaRed, },
  {enAccessibilityInvertColors, frAccessibilityInvertColors, nlAccessibilityInvertColors, ptAccessibilityInvertColors, itAccessibilityInvertColors, deAccessibilityInvertColors, esAccessibilityInvertColors, huAccessibilityInvertColors, },
  {enAccessibilityMagnify, frAccessibilityMagnify, nlAccessibilityMagnify, ptAccessibilityMagnify, itAccessibilityMagnify, deAccessibilityMagnify, esAccessibilityMagnify, huAccessibilityMagnify, },
  {enActivateClock, frActivateClock, nlActivateClock, ptActivateClock, itActivateClock, deActivateClock, esActivateClock, huActivateClock, },
  {enActivateDeactivate, frActivateDeactivate, nlActivateDeactivate, ptActivateDeactivate, itActivateDeactivate, deActivateDeactivate, esActivateDeactivate, huActivateDeactivate, },
  {enActivateExamMode, frActivateExamMode, nlActivateExamMode, ptActivateExamMode, itActivateExamMode, deActivateExamMode, esActivateExamMode, huActivateExamMode, },
  {enActiveExamModeMessage1, frActiveExamModeMessage1, nlActiveExamModeMessage1, ptActiveExamModeMessage1, itActiveExamModeMessage1, deActiveExamModeMessage1, esActiveExamModeMessage1, huActiveExamModeMessage1, },
  {enActiveExamModeMessage2, frActiveExamModeMessage2, nlActiveExamModeMessage2, ptActiveExamModeMessage2, itActiveExamModeMessage2, deActiveExamModeMessage2, esActiveExamModeMessage2, huActiveExamModeMessage2, },
  {enActiveExamModeMessage3, frActiveExamModeMessage3, nlActiveExamModeMessage3, ptActiveExamModeMessage3, itActiveExamModeMessage3, deActiveExamModeMessage3, esActiveExamModeMessage3, huActiveExamModeMessage3, },
  {enAddEquation, frAddEquation, nlAddEquation, ptAddEquation, itAddEquation, deAddEquation, esAddEquation, huAddEquation, },
  {enAddFunction, frAddFunction, nlAddFunction, ptAddFunction, itAddFunction, deAddFunction, esAddFunction, huAddFunction, },
  {enAddScript, frAddScript, nlAddScript, ptAddScript, itAddScript, deAddScript, esAddScript, huAddScript, },
  {enAddSequence, frAddSequence, nlAddSequence, ptAddSequence, itAddSequence, deAddSequence, esAddSequence, huAddSequence, },
  {enAdditionalDeterminant, frAdditionalDeterminant, nlAdditionalDeterminant, ptAdditionalDeterminant, itAdditionalDeterminant, deAdditionalDeterminant, esAdditionalDeterminant, huAdditionalDeterminant, },
  {enAdditionalInverse, frAdditionalInverse, nlAdditionalInverse, ptAdditionalInverse, itAdditionalInverse, deAdditionalInverse, esAdditionalInverse, huAdditionalInverse, },
  {enAdditionalReducedRowEchelonForm, frAdditionalReducedRowEchelonForm, nlAdditionalReducedRowEchelonForm, ptAdditionalReducedRowEchelonForm, itAdditionalReducedRowEchelonForm, deAdditionalReducedRowEchelonForm, esAdditionalReducedRowEchelonForm, huAdditionalReducedRowEchelonForm, },
  {enAdditionalResults, frAdditionalResults, nlAdditionalResults, ptAdditionalResults, itAdditionalResults, deAdditionalResults, esAdditionalResults, huAdditionalResults, },
  {enAdditionalRowEchelonForm, frAdditionalRowEchelonForm, nlAdditionalRowEchelonForm, ptAdditionalRowEchelonForm, itAdditionalRowEchelonForm, deAdditionalRowEchelonForm, esAdditionalRowEchelonForm, huAdditionalRowEchelonForm, },
  {enAdditionalTrace, frAdditionalTrace, nlAdditionalTrace, ptAdditionalTrace, itAdditionalTrace, deAdditionalTrace, esAdditionalTrace, huAdditionalTrace, },
  {enAir, frAir, nlAir, ptAir, itAir, deAir, esAir, huAir, },
  {enAllowedCharactersAZaz09, frAllowedCharactersAZaz09, nlAllowedCharactersAZaz09, ptAllowedCharactersAZaz09, itAllowedCharactersAZaz09, deAllowedCharactersAZaz09, esAllowedCharactersAZaz09, huAllowedCharactersAZaz09, },
  {enAllowedCharactersaz09, frAllowedCharactersaz09, nlAllowedCharactersaz09, ptAllowedCharactersaz09, itAllowedCharactersaz09, deAllowedCharactersaz09, esAllowedCharactersaz09, huAllowedCharactersaz09, },
  {enAlphaElementAc, frAlphaElementAc, nlAlphaElementAc, ptAlphaElementAc, itAlphaElementAc, deAlphaElementAc, esAlphaElementAc, huAlphaElementAc, },
  {enAlphaElementAg, frAlphaElementAg, nlAlphaElementAg, ptAlphaElementAg, itAlphaElementAg, deAlphaElementAg, esAlphaElementAg, huAlphaElementAg, },
  {enAlphaElementAl, frAlphaElementAl, nlAlphaElementAl, ptAlphaElementAl, itAlphaElementAl, deAlphaElementAl, esAlphaElementAl, huAlphaElementAl, },
  {enAlphaElementAm, frAlphaElementAm, nlAlphaElementAm, ptAlphaElementAm, itAlphaElementAm, deAlphaElementAm, esAlphaElementAm, huAlphaElementAm, },
  {enAlphaElementAr, frAlphaElementAr, nlAlphaElementAr, ptAlphaElementAr, itAlphaElementAr, deAlphaElementAr, esAlphaElementAr, huAlphaElementAr, },
  {enAlphaElementAs, frAlphaElementAs, nlAlphaElementAs, ptAlphaElementAs, itAlphaElementAs, deAlphaElementAs, esAlphaElementAs, huAlphaElementAs, },
  {enAlphaElementAt, frAlphaElementAt, nlAlphaElementAt, ptAlphaElementAt, itAlphaElementAt, deAlphaElementAt, esAlphaElementAt, huAlphaElementAt, },
  {enAlphaElementAu, frAlphaElementAu, nlAlphaElementAu, ptAlphaElementAu, itAlphaElementAu, deAlphaElementAu, esAlphaElementAu, huAlphaElementAu, },
  {enAlphaElementB, frAlphaElementB, nlAlphaElementB, ptAlphaElementB, itAlphaElementB, deAlphaElementB, esAlphaElementB, huAlphaElementB, },
  {enAlphaElementBa, frAlphaElementBa, nlAlphaElementBa, ptAlphaElementBa, itAlphaElementBa, deAlphaElementBa, esAlphaElementBa, huAlphaElementBa, },
  {enAlphaElementBe, frAlphaElementBe, nlAlphaElementBe, ptAlphaElementBe, itAlphaElementBe, deAlphaElementBe, esAlphaElementBe, huAlphaElementBe, },
  {enAlphaElementBh, frAlphaElementBh, nlAlphaElementBh, ptAlphaElementBh, itAlphaElementBh, deAlphaElementBh, esAlphaElementBh, huAlphaElementBh, },
  {enAlphaElementBi, frAlphaElementBi, nlAlphaElementBi, ptAlphaElementBi, itAlphaElementBi, deAlphaElementBi, esAlphaElementBi, huAlphaElementBi, },
  {enAlphaElementBk, frAlphaElementBk, nlAlphaElementBk, ptAlphaElementBk, itAlphaElementBk, deAlphaElementBk, esAlphaElementBk, huAlphaElementBk, },
  {enAlphaElementBr, frAlphaElementBr, nlAlphaElementBr, ptAlphaElementBr, itAlphaElementBr, deAlphaElementBr, esAlphaElementBr, huAlphaElementBr, },
  {enAlphaElementC, frAlphaElementC, nlAlphaElementC, ptAlphaElementC, itAlphaElementC, deAlphaElementC, esAlphaElementC, huAlphaElementC, },
  {enAlphaElementCa, frAlphaElementCa, nlAlphaElementCa, ptAlphaElementCa, itAlphaElementCa, deAlphaElementCa, esAlphaElementCa, huAlphaElementCa, },
  {enAlphaElementCd, frAlphaElementCd, nlAlphaElementCd, ptAlphaElementCd, itAlphaElementCd, deAlphaElementCd, esAlphaElementCd, huAlphaElementCd, },
  {enAlphaElementCe, frAlphaElementCe, nlAlphaElementCe, ptAlphaElementCe, itAlphaElementCe, deAlphaElementCe, esAlphaElementCe, huAlphaElementCe, },
  {enAlphaElementCf, frAlphaElementCf, nlAlphaElementCf, ptAlphaElementCf, itAlphaElementCf, deAlphaElementCf, esAlphaElementCf, huAlphaElementCf, },
  {enAlphaElementCl, frAlphaElementCl, nlAlphaElementCl, ptAlphaElementCl, itAlphaElementCl, deAlphaElementCl, esAlphaElementCl, huAlphaElementCl, },
  {enAlphaElementCm, frAlphaElementCm, nlAlphaElementCm, ptAlphaElementCm, itAlphaElementCm, deAlphaElementCm, esAlphaElementCm, huAlphaElementCm, },
  {enAlphaElementCn, frAlphaElementCn, nlAlphaElementCn, ptAlphaElementCn, itAlphaElementCn, deAlphaElementCn, esAlphaElementCn, huAlphaElementCn, },
  {enAlphaElementCo, frAlphaElementCo, nlAlphaElementCo, ptAlphaElementCo, itAlphaElementCo, deAlphaElementCo, esAlphaElementCo, huAlphaElementCo, },
  {enAlphaElementCr, frAlphaElementCr, nlAlphaElementCr, ptAlphaElementCr, itAlphaElementCr, deAlphaElementCr, esAlphaElementCr, huAlphaElementCr, },
  {enAlphaElementCs, frAlphaElementCs, nlAlphaElementCs, ptAlphaElementCs, itAlphaElementCs, deAlphaElementCs, esAlphaElementCs, huAlphaElementCs, },
  {enAlphaElementCu, frAlphaElementCu, nlAlphaElementCu, ptAlphaElementCu, itAlphaElementCu, deAlphaElementCu, esAlphaElementCu, huAlphaElementCu, },
  {enAlphaElementDb, frAlphaElementDb, nlAlphaElementDb, ptAlphaElementDb, itAlphaElementDb, deAlphaElementDb, esAlphaElementDb, huAlphaElementDb, },
  {enAlphaElementDs, frAlphaElementDs, nlAlphaElementDs, ptAlphaElementDs, itAlphaElementDs, deAlphaElementDs, esAlphaElementDs, huAlphaElementDs, },
  {enAlphaElementDy, frAlphaElementDy, nlAlphaElementDy, ptAlphaElementDy, itAlphaElementDy, deAlphaElementDy, esAlphaElementDy, huAlphaElementDy, },
  {enAlphaElementEr, frAlphaElementEr, nlAlphaElementEr, ptAlphaElementEr, itAlphaElementEr, deAlphaElementEr, esAlphaElementEr, huAlphaElementEr, },
  {enAlphaElementEs, frAlphaElementEs, nlAlphaElementEs, ptAlphaElementEs, itAlphaElementEs, deAlphaElementEs, esAlphaElementEs, huAlphaElementEs, },
  {enAlphaElementEu, frAlphaElementEu, nlAlphaElementEu, ptAlphaElementEu, itAlphaElementEu, deAlphaElementEu, esAlphaElementEu, huAlphaElementEu, },
  {enAlphaElementF, frAlphaElementF, nlAlphaElementF, ptAlphaElementF, itAlphaElementF, deAlphaElementF, esAlphaElementF, huAlphaElementF, },
  {enAlphaElementFe, frAlphaElementFe, nlAlphaElementFe, ptAlphaElementFe, itAlphaElementFe, deAlphaElementFe, esAlphaElementFe, huAlphaElementFe, },
  {enAlphaElementFl, frAlphaElementFl, nlAlphaElementFl, ptAlphaElementFl, itAlphaElementFl, deAlphaElementFl, esAlphaElementFl, huAlphaElementFl, },
  {enAlphaElementFm, frAlphaElementFm, nlAlphaElementFm, ptAlphaElementFm, itAlphaElementFm, deAlphaElementFm, esAlphaElementFm, huAlphaElementFm, },
  {enAlphaElementFr, frAlphaElementFr, nlAlphaElementFr, ptAlphaElementFr, itAlphaElementFr, deAlphaElementFr, esAlphaElementFr, huAlphaElementFr, },
  {enAlphaElementGa, frAlphaElementGa, nlAlphaElementGa, ptAlphaElementGa, itAlphaElementGa, deAlphaElementGa, esAlphaElementGa, huAlphaElementGa, },
  {enAlphaElementGd, frAlphaElementGd, nlAlphaElementGd, ptAlphaElementGd, itAlphaElementGd, deAlphaElementGd, esAlphaElementGd, huAlphaElementGd, },
  {enAlphaElementGe, frAlphaElementGe, nlAlphaElementGe, ptAlphaElementGe, itAlphaElementGe, deAlphaElementGe, esAlphaElementGe, huAlphaElementGe, },
  {enAlphaElementH, frAlphaElementH, nlAlphaElementH, ptAlphaElementH, itAlphaElementH, deAlphaElementH, esAlphaElementH, huAlphaElementH, },
  {enAlphaElementHe, frAlphaElementHe, nlAlphaElementHe, ptAlphaElementHe, itAlphaElementHe, deAlphaElementHe, esAlphaElementHe, huAlphaElementHe, },
  {enAlphaElementHf, frAlphaElementHf, nlAlphaElementHf, ptAlphaElementHf, itAlphaElementHf, deAlphaElementHf, esAlphaElementHf, huAlphaElementHf, },
  {enAlphaElementHg, frAlphaElementHg, nlAlphaElementHg, ptAlphaElementHg, itAlphaElementHg, deAlphaElementHg, esAlphaElementHg, huAlphaElementHg, },
  {enAlphaElementHo, frAlphaElementHo, nlAlphaElementHo, ptAlphaElementHo, itAlphaElementHo, deAlphaElementHo, esAlphaElementHo, huAlphaElementHo, },
  {enAlphaElementHs, frAlphaElementHs, nlAlphaElementHs, ptAlphaElementHs, itAlphaElementHs, deAlphaElementHs, esAlphaElementHs, huAlphaElementHs, },
  {enAlphaElementI, frAlphaElementI, nlAlphaElementI, ptAlphaElementI, itAlphaElementI, deAlphaElementI, esAlphaElementI, huAlphaElementI, },
  {enAlphaElementIn, frAlphaElementIn, nlAlphaElementIn, ptAlphaElementIn, itAlphaElementIn, deAlphaElementIn, esAlphaElementIn, huAlphaElementIn, },
  {enAlphaElementIr, frAlphaElementIr, nlAlphaElementIr, ptAlphaElementIr, itAlphaElementIr, deAlphaElementIr, esAlphaElementIr, huAlphaElementIr, },
  {enAlphaElementK, frAlphaElementK, nlAlphaElementK, ptAlphaElementK, itAlphaElementK, deAlphaElementK, esAlphaElementK, huAlphaElementK, },
  {enAlphaElementKr, frAlphaElementKr, nlAlphaElementKr, ptAlphaElementKr, itAlphaElementKr, deAlphaElementKr, esAlphaElementKr, huAlphaElementKr, },
  {enAlphaElementLa, frAlphaElementLa, nlAlphaElementLa, ptAlphaElementLa, itAlphaElementLa, deAlphaElementLa, esAlphaElementLa, huAlphaElementLa, },
  {enAlphaElementLi, frAlphaElementLi, nlAlphaElementLi, ptAlphaElementLi, itAlphaElementLi, deAlphaElementLi, esAlphaElementLi, huAlphaElementLi, },
  {enAlphaElementLr, frAlphaElementLr, nlAlphaElementLr, ptAlphaElementLr, itAlphaElementLr, deAlphaElementLr, esAlphaElementLr, huAlphaElementLr, },
  {enAlphaElementLu, frAlphaElementLu, nlAlphaElementLu, ptAlphaElementLu, itAlphaElementLu, deAlphaElementLu, esAlphaElementLu, huAlphaElementLu, },
  {enAlphaElementLv, frAlphaElementLv, nlAlphaElementLv, ptAlphaElementLv, itAlphaElementLv, deAlphaElementLv, esAlphaElementLv, huAlphaElementLv, },
  {enAlphaElementMc, frAlphaElementMc, nlAlphaElementMc, ptAlphaElementMc, itAlphaElementMc, deAlphaElementMc, esAlphaElementMc, huAlphaElementMc, },
  {enAlphaElementMd, frAlphaElementMd, nlAlphaElementMd, ptAlphaElementMd, itAlphaElementMd, deAlphaElementMd, esAlphaElementMd, huAlphaElementMd, },
  {enAlphaElementMg, frAlphaElementMg, nlAlphaElementMg, ptAlphaElementMg, itAlphaElementMg, deAlphaElementMg, esAlphaElementMg, huAlphaElementMg, },
  {enAlphaElementMn, frAlphaElementMn, nlAlphaElementMn, ptAlphaElementMn, itAlphaElementMn, deAlphaElementMn, esAlphaElementMn, huAlphaElementMn, },
  {enAlphaElementMo, frAlphaElementMo, nlAlphaElementMo, ptAlphaElementMo, itAlphaElementMo, deAlphaElementMo, esAlphaElementMo, huAlphaElementMo, },
  {enAlphaElementMt, frAlphaElementMt, nlAlphaElementMt, ptAlphaElementMt, itAlphaElementMt, deAlphaElementMt, esAlphaElementMt, huAlphaElementMt, },
  {enAlphaElementN, frAlphaElementN, nlAlphaElementN, ptAlphaElementN, itAlphaElementN, deAlphaElementN, esAlphaElementN, huAlphaElementN, },
  {enAlphaElementNa, frAlphaElementNa, nlAlphaElementNa, ptAlphaElementNa, itAlphaElementNa, deAlphaElementNa, esAlphaElementNa, huAlphaElementNa, },
  {enAlphaElementNb, frAlphaElementNb, nlAlphaElementNb, ptAlphaElementNb, itAlphaElementNb, deAlphaElementNb, esAlphaElementNb, huAlphaElementNb, },
  {enAlphaElementNd, frAlphaElementNd, nlAlphaElementNd, ptAlphaElementNd, itAlphaElementNd, deAlphaElementNd, esAlphaElementNd, huAlphaElementNd, },
  {enAlphaElementNe, frAlphaElementNe, nlAlphaElementNe, ptAlphaElementNe, itAlphaElementNe, deAlphaElementNe, esAlphaElementNe, huAlphaElementNe, },
  {enAlphaElementNh, frAlphaElementNh, nlAlphaElementNh, ptAlphaElementNh, itAlphaElementNh, deAlphaElementNh, esAlphaElementNh, huAlphaElementNh, },
  {enAlphaElementNi, frAlphaElementNi, nlAlphaElementNi, ptAlphaElementNi, itAlphaElementNi, deAlphaElementNi, esAlphaElementNi, huAlphaElementNi, },
  {enAlphaElementNo, frAlphaElementNo, nlAlphaElementNo, ptAlphaElementNo, itAlphaElementNo, deAlphaElementNo, esAlphaElementNo, huAlphaElementNo, },
  {enAlphaElementNp, frAlphaElementNp, nlAlphaElementNp, ptAlphaElementNp, itAlphaElementNp, deAlphaElementNp, esAlphaElementNp, huAlphaElementNp, },
  {enAlphaElementO, frAlphaElementO, nlAlphaElementO, ptAlphaElementO, itAlphaElementO, deAlphaElementO, esAlphaElementO, huAlphaElementO, },
  {enAlphaElementOg, frAlphaElementOg, nlAlphaElementOg, ptAlphaElementOg, itAlphaElementOg, deAlphaElementOg, esAlphaElementOg, huAlphaElementOg, },
  {enAlphaElementOs, frAlphaElementOs, nlAlphaElementOs, ptAlphaElementOs, itAlphaElementOs, deAlphaElementOs, esAlphaElementOs, huAlphaElementOs, },
  {enAlphaElementP, frAlphaElementP, nlAlphaElementP, ptAlphaElementP, itAlphaElementP, deAlphaElementP, esAlphaElementP, huAlphaElementP, },
  {enAlphaElementPa, frAlphaElementPa, nlAlphaElementPa, ptAlphaElementPa, itAlphaElementPa, deAlphaElementPa, esAlphaElementPa, huAlphaElementPa, },
  {enAlphaElementPb, frAlphaElementPb, nlAlphaElementPb, ptAlphaElementPb, itAlphaElementPb, deAlphaElementPb, esAlphaElementPb, huAlphaElementPb, },
  {enAlphaElementPd, frAlphaElementPd, nlAlphaElementPd, ptAlphaElementPd, itAlphaElementPd, deAlphaElementPd, esAlphaElementPd, huAlphaElementPd, },
  {enAlphaElementPm, frAlphaElementPm, nlAlphaElementPm, ptAlphaElementPm, itAlphaElementPm, deAlphaElementPm, esAlphaElementPm, huAlphaElementPm, },
  {enAlphaElementPo, frAlphaElementPo, nlAlphaElementPo, ptAlphaElementPo, itAlphaElementPo, deAlphaElementPo, esAlphaElementPo, huAlphaElementPo, },
  {enAlphaElementPr, frAlphaElementPr, nlAlphaElementPr, ptAlphaElementPr, itAlphaElementPr, deAlphaElementPr, esAlphaElementPr, huAlphaElementPr, },
  {enAlphaElementPt, frAlphaElementPt, nlAlphaElementPt, ptAlphaElementPt, itAlphaElementPt, deAlphaElementPt, esAlphaElementPt, huAlphaElementPt, },
  {enAlphaElementPu, frAlphaElementPu, nlAlphaElementPu, ptAlphaElementPu, itAlphaElementPu, deAlphaElementPu, esAlphaElementPu, huAlphaElementPu, },
  {enAlphaElementRa, frAlphaElementRa, nlAlphaElementRa, ptAlphaElementRa, itAlphaElementRa, deAlphaElementRa, esAlphaElementRa, huAlphaElementRa, },
  {enAlphaElementRb, frAlphaElementRb, nlAlphaElementRb, ptAlphaElementRb, itAlphaElementRb, deAlphaElementRb, esAlphaElementRb, huAlphaElementRb, },
  {enAlphaElementRe, frAlphaElementRe, nlAlphaElementRe, ptAlphaElementRe, itAlphaElementRe, deAlphaElementRe, esAlphaElementRe, huAlphaElementRe, },
  {enAlphaElementRf, frAlphaElementRf, nlAlphaElementRf, ptAlphaElementRf, itAlphaElementRf, deAlphaElementRf, esAlphaElementRf, huAlphaElementRf, },
  {enAlphaElementRg, frAlphaElementRg, nlAlphaElementRg, ptAlphaElementRg, itAlphaElementRg, deAlphaElementRg, esAlphaElementRg, huAlphaElementRg, },
  {enAlphaElementRh, frAlphaElementRh, nlAlphaElementRh, ptAlphaElementRh, itAlphaElementRh, deAlphaElementRh, esAlphaElementRh, huAlphaElementRh, },
  {enAlphaElementRn, frAlphaElementRn, nlAlphaElementRn, ptAlphaElementRn, itAlphaElementRn, deAlphaElementRn, esAlphaElementRn, huAlphaElementRn, },
  {enAlphaElementRu, frAlphaElementRu, nlAlphaElementRu, ptAlphaElementRu, itAlphaElementRu, deAlphaElementRu, esAlphaElementRu, huAlphaElementRu, },
  {enAlphaElementS, frAlphaElementS, nlAlphaElementS, ptAlphaElementS, itAlphaElementS, deAlphaElementS, esAlphaElementS, huAlphaElementS, },
  {enAlphaElementSb, frAlphaElementSb, nlAlphaElementSb, ptAlphaElementSb, itAlphaElementSb, deAlphaElementSb, esAlphaElementSb, huAlphaElementSb, },
  {enAlphaElementSc, frAlphaElementSc, nlAlphaElementSc, ptAlphaElementSc, itAlphaElementSc, deAlphaElementSc, esAlphaElementSc, huAlphaElementSc, },
  {enAlphaElementSe, frAlphaElementSe, nlAlphaElementSe, ptAlphaElementSe, itAlphaElementSe, deAlphaElementSe, esAlphaElementSe, huAlphaElementSe, },
  {enAlphaElementSg, frAlphaElementSg, nlAlphaElementSg, ptAlphaElementSg, itAlphaElementSg, deAlphaElementSg, esAlphaElementSg, huAlphaElementSg, },
  {enAlphaElementSi, frAlphaElementSi, nlAlphaElementSi, ptAlphaElementSi, itAlphaElementSi, deAlphaElementSi, esAlphaElementSi, huAlphaElementSi, },
  {enAlphaElementSm, frAlphaElementSm, nlAlphaElementSm, ptAlphaElementSm, itAlphaElementSm, deAlphaElementSm, esAlphaElementSm, huAlphaElementSm, },
  {enAlphaElementSn, frAlphaElementSn, nlAlphaElementSn, ptAlphaElementSn, itAlphaElementSn, deAlphaElementSn, esAlphaElementSn, huAlphaElementSn, },
  {enAlphaElementSr, frAlphaElementSr, nlAlphaElementSr, ptAlphaElementSr, itAlphaElementSr, deAlphaElementSr, esAlphaElementSr, huAlphaElementSr, },
  {enAlphaElementTa, frAlphaElementTa, nlAlphaElementTa, ptAlphaElementTa, itAlphaElementTa, deAlphaElementTa, esAlphaElementTa, huAlphaElementTa, },
  {enAlphaElementTb, frAlphaElementTb, nlAlphaElementTb, ptAlphaElementTb, itAlphaElementTb, deAlphaElementTb, esAlphaElementTb, huAlphaElementTb, },
  {enAlphaElementTc, frAlphaElementTc, nlAlphaElementTc, ptAlphaElementTc, itAlphaElementTc, deAlphaElementTc, esAlphaElementTc, huAlphaElementTc, },
  {enAlphaElementTe, frAlphaElementTe, nlAlphaElementTe, ptAlphaElementTe, itAlphaElementTe, deAlphaElementTe, esAlphaElementTe, huAlphaElementTe, },
  {enAlphaElementTh, frAlphaElementTh, nlAlphaElementTh, ptAlphaElementTh, itAlphaElementTh, deAlphaElementTh, esAlphaElementTh, huAlphaElementTh, },
  {enAlphaElementTi, frAlphaElementTi, nlAlphaElementTi, ptAlphaElementTi, itAlphaElementTi, deAlphaElementTi, esAlphaElementTi, huAlphaElementTi, },
  {enAlphaElementTl, frAlphaElementTl, nlAlphaElementTl, ptAlphaElementTl, itAlphaElementTl, deAlphaElementTl, esAlphaElementTl, huAlphaElementTl, },
  {enAlphaElementTm, frAlphaElementTm, nlAlphaElementTm, ptAlphaElementTm, itAlphaElementTm, deAlphaElementTm, esAlphaElementTm, huAlphaElementTm, },
  {enAlphaElementTs, frAlphaElementTs, nlAlphaElementTs, ptAlphaElementTs, itAlphaElementTs, deAlphaElementTs, esAlphaElementTs, huAlphaElementTs, },
  {enAlphaElementU, frAlphaElementU, nlAlphaElementU, ptAlphaElementU, itAlphaElementU, deAlphaElementU, esAlphaElementU, huAlphaElementU, },
  {enAlphaElementUbn, frAlphaElementUbn, nlAlphaElementUbn, ptAlphaElementUbn, itAlphaElementUbn, deAlphaElementUbn, esAlphaElementUbn, huAlphaElementUbn, },
  {enAlphaElementUue, frAlphaElementUue, nlAlphaElementUue, ptAlphaElementUue, itAlphaElementUue, deAlphaElementUue, esAlphaElementUue, huAlphaElementUue, },
  {enAlphaElementV, frAlphaElementV, nlAlphaElementV, ptAlphaElementV, itAlphaElementV, deAlphaElementV, esAlphaElementV, huAlphaElementV, },
  {enAlphaElementW, frAlphaElementW, nlAlphaElementW, ptAlphaElementW, itAlphaElementW, deAlphaElementW, esAlphaElementW, huAlphaElementW, },
  {enAlphaElementXe, frAlphaElementXe, nlAlphaElementXe, ptAlphaElementXe, itAlphaElementXe, deAlphaElementXe, esAlphaElementXe, huAlphaElementXe, },
  {enAlphaElementY, frAlphaElementY, nlAlphaElementY, ptAlphaElementY, itAlphaElementY, deAlphaElementY, esAlphaElementY, huAlphaElementY, },
  {enAlphaElementYb, frAlphaElementYb, nlAlphaElementYb, ptAlphaElementYb, itAlphaElementYb, deAlphaElementYb, esAlphaElementYb, huAlphaElementYb, },
  {enAlphaElementZn, frAlphaElementZn, nlAlphaElementZn, ptAlphaElementZn, itAlphaElementZn, deAlphaElementZn, esAlphaElementZn, huAlphaElementZn, },
  {enAlphaElementZr, frAlphaElementZr, nlAlphaElementZr, ptAlphaElementZr, itAlphaElementZr, deAlphaElementZr, esAlphaElementZr, huAlphaElementZr, },
  {enAluminium, frAluminium, nlAluminium, ptAluminium, itAluminium, deAluminium, esAluminium, huAluminium, },
  {enAmountOfSubstanceDimension, frAmountOfSubstanceDimension, nlAmountOfSubstanceDimension, ptAmountOfSubstanceDimension, itAmountOfSubstanceDimension, deAmountOfSubstanceDimension, esAmountOfSubstanceDimension, huAmountOfSubstanceDimension, },
  {enAngleUnit, frAngleUnit, nlAngleUnit, ptAngleUnit, itAngleUnit, deAngleUnit, esAngleUnit, huAngleUnit, },
  {enApproximateSolution, frApproximateSolution, nlApproximateSolution, ptApproximateSolution, itApproximateSolution, deApproximateSolution, esApproximateSolution, huApproximateSolution, },
  {enApproximateSolutionIntervalInstruction0, frApproximateSolutionIntervalInstruction0, nlApproximateSolutionIntervalInstruction0, ptApproximateSolutionIntervalInstruction0, itApproximateSolutionIntervalInstruction0, deApproximateSolutionIntervalInstruction0, esApproximateSolutionIntervalInstruction0, huApproximateSolutionIntervalInstruction0, },
  {enApproximateSolutionIntervalInstruction1, frApproximateSolutionIntervalInstruction1, nlApproximateSolutionIntervalInstruction1, ptApproximateSolutionIntervalInstruction1, itApproximateSolutionIntervalInstruction1, deApproximateSolutionIntervalInstruction1, esApproximateSolutionIntervalInstruction1, huApproximateSolutionIntervalInstruction1, },
  {enApps, frApps, nlApps, ptApps, itApps, deApps, esApps, huApps, },
  {enAppsCapital, frAppsCapital, nlAppsCapital, ptAppsCapital, itAppsCapital, deAppsCapital, esAppsCapital, huAppsCapital, },
  {enArgument, frArgument, nlArgument, ptArgument, itArgument, deArgument, esArgument, huArgument, },
  {enArithmetic, frArithmetic, nlArithmetic, ptArithmetic, itArithmetic, deArithmetic, esArithmetic, huArithmetic, },
  {enAtmosphericPressureTag, frAtmosphericPressureTag, nlAtmosphericPressureTag, ptAtmosphericPressureTag, itAtmosphericPressureTag, deAtmosphericPressureTag, esAtmosphericPressureTag, huAtmosphericPressureTag, },
  {enAtomEC, frAtomEC, nlAtomEC, ptAtomEC, itAtomEC, deAtomEC, esAtomEC, huAtomEC, },
  {enAtomElectroneg, frAtomElectroneg, nlAtomElectroneg, ptAtomElectroneg, itAtomElectroneg, deAtomElectroneg, esAtomElectroneg, huAtomElectroneg, },
  {enAtomMass, frAtomMass, nlAtomMass, ptAtomMass, itAtomMass, deAtomMass, esAtomMass, huAtomMass, },
  {enAtomName_Actinium, frAtomName_Actinium, nlAtomName_Actinium, ptAtomName_Actinium, itAtomName_Actinium, deAtomName_Actinium, esAtomName_Actinium, huAtomName_Actinium, },
  {enAtomName_Aluminium, frAtomName_Aluminium, nlAtomName_Aluminium, ptAtomName_Aluminium, itAtomName_Aluminium, deAtomName_Aluminium, esAtomName_Aluminium, huAtomName_Aluminium, },
  {enAtomName_Americium, frAtomName_Americium, nlAtomName_Americium, ptAtomName_Americium, itAtomName_Americium, deAtomName_Americium, esAtomName_Americium, huAtomName_Americium, },
  {enAtomName_Antimony, frAtomName_Antimony, nlAtomName_Antimony, ptAtomName_Antimony, itAtomName_Antimony, deAtomName_Antimony, esAtomName_Antimony, huAtomName_Antimony, },
  {enAtomName_Argon, frAtomName_Argon, nlAtomName_Argon, ptAtomName_Argon, itAtomName_Argon, deAtomName_Argon, esAtomName_Argon, huAtomName_Argon, },
  {enAtomName_Arsenic, frAtomName_Arsenic, nlAtomName_Arsenic, ptAtomName_Arsenic, itAtomName_Arsenic, deAtomName_Arsenic, esAtomName_Arsenic, huAtomName_Arsenic, },
  {enAtomName_Astatine, frAtomName_Astatine, nlAtomName_Astatine, ptAtomName_Astatine, itAtomName_Astatine, deAtomName_Astatine, esAtomName_Astatine, huAtomName_Astatine, },
  {enAtomName_Barium, frAtomName_Barium, nlAtomName_Barium, ptAtomName_Barium, itAtomName_Barium, deAtomName_Barium, esAtomName_Barium, huAtomName_Barium, },
  {enAtomName_Berkelium, frAtomName_Berkelium, nlAtomName_Berkelium, ptAtomName_Berkelium, itAtomName_Berkelium, deAtomName_Berkelium, esAtomName_Berkelium, huAtomName_Berkelium, },
  {enAtomName_Beryllium, frAtomName_Beryllium, nlAtomName_Beryllium, ptAtomName_Beryllium, itAtomName_Beryllium, deAtomName_Beryllium, esAtomName_Beryllium, huAtomName_Beryllium, },
  {enAtomName_Bismuth, frAtomName_Bismuth, nlAtomName_Bismuth, ptAtomName_Bismuth, itAtomName_Bismuth, deAtomName_Bismuth, esAtomName_Bismuth, huAtomName_Bismuth, },
  {enAtomName_Boron, frAtomName_Boron, nlAtomName_Boron, ptAtomName_Boron, itAtomName_Boron, deAtomName_Boron, esAtomName_Boron, huAtomName_Boron, },
  {enAtomName_Bromine, frAtomName_Bromine, nlAtomName_Bromine, ptAtomName_Bromine, itAtomName_Bromine, deAtomName_Bromine, esAtomName_Bromine, huAtomName_Bromine, },
  {enAtomName_Cadmium, frAtomName_Cadmium, nlAtomName_Cadmium, ptAtomName_Cadmium, itAtomName_Cadmium, deAtomName_Cadmium, esAtomName_Cadmium, huAtomName_Cadmium, },
  {enAtomName_Caesium, frAtomName_Caesium, nlAtomName_Caesium, ptAtomName_Caesium, itAtomName_Caesium, deAtomName_Caesium, esAtomName_Caesium, huAtomName_Caesium, },
  {enAtomName_Calcium, frAtomName_Calcium, nlAtomName_Calcium, ptAtomName_Calcium, itAtomName_Calcium, deAtomName_Calcium, esAtomName_Calcium, huAtomName_Calcium, },
  {enAtomName_Californium, frAtomName_Californium, nlAtomName_Californium, ptAtomName_Californium, itAtomName_Californium, deAtomName_Californium, esAtomName_Californium, huAtomName_Californium, },
  {enAtomName_Carbon, frAtomName_Carbon, nlAtomName_Carbon, ptAtomName_Carbon, itAtomName_Carbon, deAtomName_Carbon, esAtomName_Carbon, huAtomName_Carbon, },
  {enAtomName_Cerium, frAtomName_Cerium, nlAtomName_Cerium, ptAtomName_Cerium, itAtomName_Cerium, deAtomName_Cerium, esAtomName_Cerium, huAtomName_Cerium, },
  {enAtomName_Chlorine, frAtomName_Chlorine, nlAtomName_Chlorine, ptAtomName_Chlorine, itAtomName_Chlorine, deAtomName_Chlorine, esAtomName_Chlorine, huAtomName_Chlorine, },
  {enAtomName_Chromium, frAtomName_Chromium, nlAtomName_Chromium, ptAtomName_Chromium, itAtomName_Chromium, deAtomName_Chromium, esAtomName_Chromium, huAtomName_Chromium, },
  {enAtomName_Cobalt, frAtomName_Cobalt, nlAtomName_Cobalt, ptAtomName_Cobalt, itAtomName_Cobalt, deAtomName_Cobalt, esAtomName_Cobalt, huAtomName_Cobalt, },
  {enAtomName_Copernicium, frAtomName_Copernicium, nlAtomName_Copernicium, ptAtomName_Copernicium, itAtomName_Copernicium, deAtomName_Copernicium, esAtomName_Copernicium, huAtomName_Copernicium, },
  {enAtomName_Copper, frAtomName_Copper, nlAtomName_Copper, ptAtomName_Copper, itAtomName_Copper, deAtomName_Copper, esAtomName_Copper, huAtomName_Copper, },
  {enAtomName_Curium, frAtomName_Curium, nlAtomName_Curium, ptAtomName_Curium, itAtomName_Curium, deAtomName_Curium, esAtomName_Curium, huAtomName_Curium, },
  {enAtomName_Darmstadtium, frAtomName_Darmstadtium, nlAtomName_Darmstadtium, ptAtomName_Darmstadtium, itAtomName_Darmstadtium, deAtomName_Darmstadtium, esAtomName_Darmstadtium, huAtomName_Darmstadtium, },
  {enAtomName_Dubnium, frAtomName_Dubnium, nlAtomName_Dubnium, ptAtomName_Dubnium, itAtomName_Dubnium, deAtomName_Dubnium, esAtomName_Dubnium, huAtomName_Dubnium, },
  {enAtomName_Dyxprosium, frAtomName_Dyxprosium, nlAtomName_Dyxprosium, ptAtomName_Dyxprosium, itAtomName_Dyxprosium, deAtomName_Dyxprosium, esAtomName_Dyxprosium, huAtomName_Dyxprosium, },
  {enAtomName_Einsteinium, frAtomName_Einsteinium, nlAtomName_Einsteinium, ptAtomName_Einsteinium, itAtomName_Einsteinium, deAtomName_Einsteinium, esAtomName_Einsteinium, huAtomName_Einsteinium, },
  {enAtomName_Erbium, frAtomName_Erbium, nlAtomName_Erbium, ptAtomName_Erbium, itAtomName_Erbium, deAtomName_Erbium, esAtomName_Erbium, huAtomName_Erbium, },
  {enAtomName_Europium, frAtomName_Europium, nlAtomName_Europium, ptAtomName_Europium, itAtomName_Europium, deAtomName_Europium, esAtomName_Europium, huAtomName_Europium, },
  {enAtomName_Fermium, frAtomName_Fermium, nlAtomName_Fermium, ptAtomName_Fermium, itAtomName_Fermium, deAtomName_Fermium, esAtomName_Fermium, huAtomName_Fermium, },
  {enAtomName_Flerovium, frAtomName_Flerovium, nlAtomName_Flerovium, ptAtomName_Flerovium, itAtomName_Flerovium, deAtomName_Flerovium, esAtomName_Flerovium, huAtomName_Flerovium, },
  {enAtomName_Fluorine, frAtomName_Fluorine, nlAtomName_Fluorine, ptAtomName_Fluorine, itAtomName_Fluorine, deAtomName_Fluorine, esAtomName_Fluorine, huAtomName_Fluorine, },
  {enAtomName_Francium, frAtomName_Francium, nlAtomName_Francium, ptAtomName_Francium, itAtomName_Francium, deAtomName_Francium, esAtomName_Francium, huAtomName_Francium, },
  {enAtomName_Gadolinium, frAtomName_Gadolinium, nlAtomName_Gadolinium, ptAtomName_Gadolinium, itAtomName_Gadolinium, deAtomName_Gadolinium, esAtomName_Gadolinium, huAtomName_Gadolinium, },
  {enAtomName_Gallium, frAtomName_Gallium, nlAtomName_Gallium, ptAtomName_Gallium, itAtomName_Gallium, deAtomName_Gallium, esAtomName_Gallium, huAtomName_Gallium, },
  {enAtomName_Germanium, frAtomName_Germanium, nlAtomName_Germanium, ptAtomName_Germanium, itAtomName_Germanium, deAtomName_Germanium, esAtomName_Germanium, huAtomName_Germanium, },
  {enAtomName_Gold, frAtomName_Gold, nlAtomName_Gold, ptAtomName_Gold, itAtomName_Gold, deAtomName_Gold, esAtomName_Gold, huAtomName_Gold, },
  {enAtomName_Hafnium, frAtomName_Hafnium, nlAtomName_Hafnium, ptAtomName_Hafnium, itAtomName_Hafnium, deAtomName_Hafnium, esAtomName_Hafnium, huAtomName_Hafnium, },
  {enAtomName_Helium, frAtomName_Helium, nlAtomName_Helium, ptAtomName_Helium, itAtomName_Helium, deAtomName_Helium, esAtomName_Helium, huAtomName_Helium, },
  {enAtomName_Holmium, frAtomName_Holmium, nlAtomName_Holmium, ptAtomName_Holmium, itAtomName_Holmium, deAtomName_Holmium, esAtomName_Holmium, huAtomName_Holmium, },
  {enAtomName_Hydrogen, frAtomName_Hydrogen, nlAtomName_Hydrogen, ptAtomName_Hydrogen, itAtomName_Hydrogen, deAtomName_Hydrogen, esAtomName_Hydrogen, huAtomName_Hydrogen, },
  {enAtomName_Indine, frAtomName_Indine, nlAtomName_Indine, ptAtomName_Indine, itAtomName_Indine, deAtomName_Indine, esAtomName_Indine, huAtomName_Indine, },
  {enAtomName_Indium, frAtomName_Indium, nlAtomName_Indium, ptAtomName_Indium, itAtomName_Indium, deAtomName_Indium, esAtomName_Indium, huAtomName_Indium, },
  {enAtomName_Iridium, frAtomName_Iridium, nlAtomName_Iridium, ptAtomName_Iridium, itAtomName_Iridium, deAtomName_Iridium, esAtomName_Iridium, huAtomName_Iridium, },
  {enAtomName_Iron, frAtomName_Iron, nlAtomName_Iron, ptAtomName_Iron, itAtomName_Iron, deAtomName_Iron, esAtomName_Iron, huAtomName_Iron, },
  {enAtomName_Krypton, frAtomName_Krypton, nlAtomName_Krypton, ptAtomName_Krypton, itAtomName_Krypton, deAtomName_Krypton, esAtomName_Krypton, huAtomName_Krypton, },
  {enAtomName_Lanthanum, frAtomName_Lanthanum, nlAtomName_Lanthanum, ptAtomName_Lanthanum, itAtomName_Lanthanum, deAtomName_Lanthanum, esAtomName_Lanthanum, huAtomName_Lanthanum, },
  {enAtomName_Lawrencium, frAtomName_Lawrencium, nlAtomName_Lawrencium, ptAtomName_Lawrencium, itAtomName_Lawrencium, deAtomName_Lawrencium, esAtomName_Lawrencium, huAtomName_Lawrencium, },
  {enAtomName_Lead, frAtomName_Lead, nlAtomName_Lead, ptAtomName_Lead, itAtomName_Lead, deAtomName_Lead, esAtomName_Lead, huAtomName_Lead, },
  {enAtomName_Lithium, frAtomName_Lithium, nlAtomName_Lithium, ptAtomName_Lithium, itAtomName_Lithium, deAtomName_Lithium, esAtomName_Lithium, huAtomName_Lithium, },
  {enAtomName_Lutetium, frAtomName_Lutetium, nlAtomName_Lutetium, ptAtomName_Lutetium, itAtomName_Lutetium, deAtomName_Lutetium, esAtomName_Lutetium, huAtomName_Lutetium, },
  {enAtomName_Magnesium, frAtomName_Magnesium, nlAtomName_Magnesium, ptAtomName_Magnesium, itAtomName_Magnesium, deAtomName_Magnesium, esAtomName_Magnesium, huAtomName_Magnesium, },
  {enAtomName_Manganese, frAtomName_Manganese, nlAtomName_Manganese, ptAtomName_Manganese, itAtomName_Manganese, deAtomName_Manganese, esAtomName_Manganese, huAtomName_Manganese, },
  {enAtomName_Meitnerium, frAtomName_Meitnerium, nlAtomName_Meitnerium, ptAtomName_Meitnerium, itAtomName_Meitnerium, deAtomName_Meitnerium, esAtomName_Meitnerium, huAtomName_Meitnerium, },
  {enAtomName_Mendelevium, frAtomName_Mendelevium, nlAtomName_Mendelevium, ptAtomName_Mendelevium, itAtomName_Mendelevium, deAtomName_Mendelevium, esAtomName_Mendelevium, huAtomName_Mendelevium, },
  {enAtomName_Mercury, frAtomName_Mercury, nlAtomName_Mercury, ptAtomName_Mercury, itAtomName_Mercury, deAtomName_Mercury, esAtomName_Mercury, huAtomName_Mercury, },
  {enAtomName_Molybdenum, frAtomName_Molybdenum, nlAtomName_Molybdenum, ptAtomName_Molybdenum, itAtomName_Molybdenum, deAtomName_Molybdenum, esAtomName_Molybdenum, huAtomName_Molybdenum, },
  {enAtomName_Neodymium, frAtomName_Neodymium, nlAtomName_Neodymium, ptAtomName_Neodymium, itAtomName_Neodymium, deAtomName_Neodymium, esAtomName_Neodymium, huAtomName_Neodymium, },
  {enAtomName_Neon, frAtomName_Neon, nlAtomName_Neon, ptAtomName_Neon, itAtomName_Neon, deAtomName_Neon, esAtomName_Neon, huAtomName_Neon, },
  {enAtomName_Neptunium, frAtomName_Neptunium, nlAtomName_Neptunium, ptAtomName_Neptunium, itAtomName_Neptunium, deAtomName_Neptunium, esAtomName_Neptunium, huAtomName_Neptunium, },
  {enAtomName_Nickel, frAtomName_Nickel, nlAtomName_Nickel, ptAtomName_Nickel, itAtomName_Nickel, deAtomName_Nickel, esAtomName_Nickel, huAtomName_Nickel, },
  {enAtomName_Niobium, frAtomName_Niobium, nlAtomName_Niobium, ptAtomName_Niobium, itAtomName_Niobium, deAtomName_Niobium, esAtomName_Niobium, huAtomName_Niobium, },
  {enAtomName_Nitrogen, frAtomName_Nitrogen, nlAtomName_Nitrogen, ptAtomName_Nitrogen, itAtomName_Nitrogen, deAtomName_Nitrogen, esAtomName_Nitrogen, huAtomName_Nitrogen, },
  {enAtomName_Nobelium, frAtomName_Nobelium, nlAtomName_Nobelium, ptAtomName_Nobelium, itAtomName_Nobelium, deAtomName_Nobelium, esAtomName_Nobelium, huAtomName_Nobelium, },
  {enAtomName_Osmium, frAtomName_Osmium, nlAtomName_Osmium, ptAtomName_Osmium, itAtomName_Osmium, deAtomName_Osmium, esAtomName_Osmium, huAtomName_Osmium, },
  {enAtomName_Oxygen, frAtomName_Oxygen, nlAtomName_Oxygen, ptAtomName_Oxygen, itAtomName_Oxygen, deAtomName_Oxygen, esAtomName_Oxygen, huAtomName_Oxygen, },
  {enAtomName_Palladium, frAtomName_Palladium, nlAtomName_Palladium, ptAtomName_Palladium, itAtomName_Palladium, deAtomName_Palladium, esAtomName_Palladium, huAtomName_Palladium, },
  {enAtomName_Phosphorus, frAtomName_Phosphorus, nlAtomName_Phosphorus, ptAtomName_Phosphorus, itAtomName_Phosphorus, deAtomName_Phosphorus, esAtomName_Phosphorus, huAtomName_Phosphorus, },
  {enAtomName_Platinum, frAtomName_Platinum, nlAtomName_Platinum, ptAtomName_Platinum, itAtomName_Platinum, deAtomName_Platinum, esAtomName_Platinum, huAtomName_Platinum, },
  {enAtomName_Plutonium, frAtomName_Plutonium, nlAtomName_Plutonium, ptAtomName_Plutonium, itAtomName_Plutonium, deAtomName_Plutonium, esAtomName_Plutonium, huAtomName_Plutonium, },
  {enAtomName_Polonium, frAtomName_Polonium, nlAtomName_Polonium, ptAtomName_Polonium, itAtomName_Polonium, deAtomName_Polonium, esAtomName_Polonium, huAtomName_Polonium, },
  {enAtomName_Potassium, frAtomName_Potassium, nlAtomName_Potassium, ptAtomName_Potassium, itAtomName_Potassium, deAtomName_Potassium, esAtomName_Potassium, huAtomName_Potassium, },
  {enAtomName_Praseodymium, frAtomName_Praseodymium, nlAtomName_Praseodymium, ptAtomName_Praseodymium, itAtomName_Praseodymium, deAtomName_Praseodymium, esAtomName_Praseodymium, huAtomName_Praseodymium, },
  {enAtomName_Promethium, frAtomName_Promethium, nlAtomName_Promethium, ptAtomName_Promethium, itAtomName_Promethium, deAtomName_Promethium, esAtomName_Promethium, huAtomName_Promethium, },
  {enAtomName_Protactinium, frAtomName_Protactinium, nlAtomName_Protactinium, ptAtomName_Protactinium, itAtomName_Protactinium, deAtomName_Protactinium, esAtomName_Protactinium, huAtomName_Protactinium, },
  {enAtomName_Radium, frAtomName_Radium, nlAtomName_Radium, ptAtomName_Radium, itAtomName_Radium, deAtomName_Radium, esAtomName_Radium, huAtomName_Radium, },
  {enAtomName_Radon, frAtomName_Radon, nlAtomName_Radon, ptAtomName_Radon, itAtomName_Radon, deAtomName_Radon, esAtomName_Radon, huAtomName_Radon, },
  {enAtomName_Rhenium, frAtomName_Rhenium, nlAtomName_Rhenium, ptAtomName_Rhenium, itAtomName_Rhenium, deAtomName_Rhenium, esAtomName_Rhenium, huAtomName_Rhenium, },
  {enAtomName_Rhodium, frAtomName_Rhodium, nlAtomName_Rhodium, ptAtomName_Rhodium, itAtomName_Rhodium, deAtomName_Rhodium, esAtomName_Rhodium, huAtomName_Rhodium, },
  {enAtomName_Roentgenium, frAtomName_Roentgenium, nlAtomName_Roentgenium, ptAtomName_Roentgenium, itAtomName_Roentgenium, deAtomName_Roentgenium, esAtomName_Roentgenium, huAtomName_Roentgenium, },
  {enAtomName_Rubidium, frAtomName_Rubidium, nlAtomName_Rubidium, ptAtomName_Rubidium, itAtomName_Rubidium, deAtomName_Rubidium, esAtomName_Rubidium, huAtomName_Rubidium, },
  {enAtomName_Ruthemium, frAtomName_Ruthemium, nlAtomName_Ruthemium, ptAtomName_Ruthemium, itAtomName_Ruthemium, deAtomName_Ruthemium, esAtomName_Ruthemium, huAtomName_Ruthemium, },
  {enAtomName_Rutherfordium, frAtomName_Rutherfordium, nlAtomName_Rutherfordium, ptAtomName_Rutherfordium, itAtomName_Rutherfordium, deAtomName_Rutherfordium, esAtomName_Rutherfordium, huAtomName_Rutherfordium, },
  {enAtomName_Samarium, frAtomName_Samarium, nlAtomName_Samarium, ptAtomName_Samarium, itAtomName_Samarium, deAtomName_Samarium, esAtomName_Samarium, huAtomName_Samarium, },
  {enAtomName_Scandium, frAtomName_Scandium, nlAtomName_Scandium, ptAtomName_Scandium, itAtomName_Scandium, deAtomName_Scandium, esAtomName_Scandium, huAtomName_Scandium, },
  {enAtomName_Seaborgium, frAtomName_Seaborgium, nlAtomName_Seaborgium, ptAtomName_Seaborgium, itAtomName_Seaborgium, deAtomName_Seaborgium, esAtomName_Seaborgium, huAtomName_Seaborgium, },
  {enAtomName_Selenium, frAtomName_Selenium, nlAtomName_Selenium, ptAtomName_Selenium, itAtomName_Selenium, deAtomName_Selenium, esAtomName_Selenium, huAtomName_Selenium, },
  {enAtomName_Silicon, frAtomName_Silicon, nlAtomName_Silicon, ptAtomName_Silicon, itAtomName_Silicon, deAtomName_Silicon, esAtomName_Silicon, huAtomName_Silicon, },
  {enAtomName_Silver, frAtomName_Silver, nlAtomName_Silver, ptAtomName_Silver, itAtomName_Silver, deAtomName_Silver, esAtomName_Silver, huAtomName_Silver, },
  {enAtomName_Sodium, frAtomName_Sodium, nlAtomName_Sodium, ptAtomName_Sodium, itAtomName_Sodium, deAtomName_Sodium, esAtomName_Sodium, huAtomName_Sodium, },
  {enAtomName_Strontium, frAtomName_Strontium, nlAtomName_Strontium, ptAtomName_Strontium, itAtomName_Strontium, deAtomName_Strontium, esAtomName_Strontium, huAtomName_Strontium, },
  {enAtomName_Sulfur, frAtomName_Sulfur, nlAtomName_Sulfur, ptAtomName_Sulfur, itAtomName_Sulfur, deAtomName_Sulfur, esAtomName_Sulfur, huAtomName_Sulfur, },
  {enAtomName_Tantalum, frAtomName_Tantalum, nlAtomName_Tantalum, ptAtomName_Tantalum, itAtomName_Tantalum, deAtomName_Tantalum, esAtomName_Tantalum, huAtomName_Tantalum, },
  {enAtomName_Technetium, frAtomName_Technetium, nlAtomName_Technetium, ptAtomName_Technetium, itAtomName_Technetium, deAtomName_Technetium, esAtomName_Technetium, huAtomName_Technetium, },
  {enAtomName_Tellurium, frAtomName_Tellurium, nlAtomName_Tellurium, ptAtomName_Tellurium, itAtomName_Tellurium, deAtomName_Tellurium, esAtomName_Tellurium, huAtomName_Tellurium, },
  {enAtomName_Terbium, frAtomName_Terbium, nlAtomName_Terbium, ptAtomName_Terbium, itAtomName_Terbium, deAtomName_Terbium, esAtomName_Terbium, huAtomName_Terbium, },
  {enAtomName_Thalium, frAtomName_Thalium, nlAtomName_Thalium, ptAtomName_Thalium, itAtomName_Thalium, deAtomName_Thalium, esAtomName_Thalium, huAtomName_Thalium, },
  {enAtomName_Thorium, frAtomName_Thorium, nlAtomName_Thorium, ptAtomName_Thorium, itAtomName_Thorium, deAtomName_Thorium, esAtomName_Thorium, huAtomName_Thorium, },
  {enAtomName_Thulium, frAtomName_Thulium, nlAtomName_Thulium, ptAtomName_Thulium, itAtomName_Thulium, deAtomName_Thulium, esAtomName_Thulium, huAtomName_Thulium, },
  {enAtomName_Tin, frAtomName_Tin, nlAtomName_Tin, ptAtomName_Tin, itAtomName_Tin, deAtomName_Tin, esAtomName_Tin, huAtomName_Tin, },
  {enAtomName_Titanium, frAtomName_Titanium, nlAtomName_Titanium, ptAtomName_Titanium, itAtomName_Titanium, deAtomName_Titanium, esAtomName_Titanium, huAtomName_Titanium, },
  {enAtomName_Tungsten, frAtomName_Tungsten, nlAtomName_Tungsten, ptAtomName_Tungsten, itAtomName_Tungsten, deAtomName_Tungsten, esAtomName_Tungsten, huAtomName_Tungsten, },
  {enAtomName_Uranium, frAtomName_Uranium, nlAtomName_Uranium, ptAtomName_Uranium, itAtomName_Uranium, deAtomName_Uranium, esAtomName_Uranium, huAtomName_Uranium, },
  {enAtomName_Vanadium, frAtomName_Vanadium, nlAtomName_Vanadium, ptAtomName_Vanadium, itAtomName_Vanadium, deAtomName_Vanadium, esAtomName_Vanadium, huAtomName_Vanadium, },
  {enAtomName_Xenon, frAtomName_Xenon, nlAtomName_Xenon, ptAtomName_Xenon, itAtomName_Xenon, deAtomName_Xenon, esAtomName_Xenon, huAtomName_Xenon, },
  {enAtomName_Ytterbium, frAtomName_Ytterbium, nlAtomName_Ytterbium, ptAtomName_Ytterbium, itAtomName_Ytterbium, deAtomName_Ytterbium, esAtomName_Ytterbium, huAtomName_Ytterbium, },
  {enAtomName_Yttrium, frAtomName_Yttrium, nlAtomName_Yttrium, ptAtomName_Yttrium, itAtomName_Yttrium, deAtomName_Yttrium, esAtomName_Yttrium, huAtomName_Yttrium, },
  {enAtomName_Zinc, frAtomName_Zinc, nlAtomName_Zinc, ptAtomName_Zinc, itAtomName_Zinc, deAtomName_Zinc, esAtomName_Zinc, huAtomName_Zinc, },
  {enAtomName_Zirconium, frAtomName_Zirconium, nlAtomName_Zirconium, ptAtomName_Zirconium, itAtomName_Zirconium, deAtomName_Zirconium, esAtomName_Zirconium, huAtomName_Zirconium, },
  {enAtomNeutrons, frAtomNeutrons, nlAtomNeutrons, ptAtomNeutrons, itAtomNeutrons, deAtomNeutrons, esAtomNeutrons, huAtomNeutrons, },
  {enAtomNum, frAtomNum, nlAtomNum, ptAtomNum, itAtomNum, deAtomNum, esAtomNum, huAtomNum, },
  {enAtomSymbol, frAtomSymbol, nlAtomSymbol, ptAtomSymbol, itAtomSymbol, deAtomSymbol, esAtomSymbol, huAtomSymbol, },
  {enAtomTypeACTINIDE, frAtomTypeACTINIDE, nlAtomTypeACTINIDE, ptAtomTypeACTINIDE, itAtomTypeACTINIDE, deAtomTypeACTINIDE, esAtomTypeACTINIDE, huAtomTypeACTINIDE, },
  {enAtomTypeALKALIEARTHMETAL, frAtomTypeALKALIEARTHMETAL, nlAtomTypeALKALIEARTHMETAL, ptAtomTypeALKALIEARTHMETAL, itAtomTypeALKALIEARTHMETAL, deAtomTypeALKALIEARTHMETAL, esAtomTypeALKALIEARTHMETAL, huAtomTypeALKALIEARTHMETAL, },
  {enAtomTypeALKALIMETAL, frAtomTypeALKALIMETAL, nlAtomTypeALKALIMETAL, ptAtomTypeALKALIMETAL, itAtomTypeALKALIMETAL, deAtomTypeALKALIMETAL, esAtomTypeALKALIMETAL, huAtomTypeALKALIMETAL, },
  {enAtomTypeHALLOGEN, frAtomTypeHALLOGEN, nlAtomTypeHALLOGEN, ptAtomTypeHALLOGEN, itAtomTypeHALLOGEN, deAtomTypeHALLOGEN, esAtomTypeHALLOGEN, huAtomTypeHALLOGEN, },
  {enAtomTypeLANTHANIDE, frAtomTypeLANTHANIDE, nlAtomTypeLANTHANIDE, ptAtomTypeLANTHANIDE, itAtomTypeLANTHANIDE, deAtomTypeLANTHANIDE, esAtomTypeLANTHANIDE, huAtomTypeLANTHANIDE, },
  {enAtomTypeMETALLOID, frAtomTypeMETALLOID, nlAtomTypeMETALLOID, ptAtomTypeMETALLOID, itAtomTypeMETALLOID, deAtomTypeMETALLOID, esAtomTypeMETALLOID, huAtomTypeMETALLOID, },
  {enAtomTypeNOBLEGAS, frAtomTypeNOBLEGAS, nlAtomTypeNOBLEGAS, ptAtomTypeNOBLEGAS, itAtomTypeNOBLEGAS, deAtomTypeNOBLEGAS, esAtomTypeNOBLEGAS, huAtomTypeNOBLEGAS, },
  {enAtomTypePOSTTRANSITIONMETAL, frAtomTypePOSTTRANSITIONMETAL, nlAtomTypePOSTTRANSITIONMETAL, ptAtomTypePOSTTRANSITIONMETAL, itAtomTypePOSTTRANSITIONMETAL, deAtomTypePOSTTRANSITIONMETAL, esAtomTypePOSTTRANSITIONMETAL, huAtomTypePOSTTRANSITIONMETAL, },
  {enAtomTypeREACTIVENONMETAL, frAtomTypeREACTIVENONMETAL, nlAtomTypeREACTIVENONMETAL, ptAtomTypeREACTIVENONMETAL, itAtomTypeREACTIVENONMETAL, deAtomTypeREACTIVENONMETAL, esAtomTypeREACTIVENONMETAL, huAtomTypeREACTIVENONMETAL, },
  {enAtomTypeTRANSITIONMETAL, frAtomTypeTRANSITIONMETAL, nlAtomTypeTRANSITIONMETAL, ptAtomTypeTRANSITIONMETAL, itAtomTypeTRANSITIONMETAL, deAtomTypeTRANSITIONMETAL, esAtomTypeTRANSITIONMETAL, huAtomTypeTRANSITIONMETAL, },
  {enAtomTypeUNKNOWN, frAtomTypeUNKNOWN, nlAtomTypeUNKNOWN, ptAtomTypeUNKNOWN, itAtomTypeUNKNOWN, deAtomTypeUNKNOWN, esAtomTypeUNKNOWN, huAtomTypeUNKNOWN, },
  {enAtomTypes, frAtomTypes, nlAtomTypes, ptAtomTypes, itAtomTypes, deAtomTypes, esAtomTypes, huAtomTypes, },
  {enAtomicMassUnitTag, frAtomicMassUnitTag, nlAtomicMassUnitTag, ptAtomicMassUnitTag, itAtomicMassUnitTag, deAtomicMassUnitTag, esAtomicMassUnitTag, huAtomicMassUnitTag, },
  {enAutoImportScript, frAutoImportScript, nlAutoImportScript, ptAutoImportScript, itAutoImportScript, deAutoImportScript, esAutoImportScript, huAutoImportScript, },
  {enAutocomplete, frAutocomplete, nlAutocomplete, ptAutocomplete, itAutocomplete, deAutocomplete, esAutocomplete, huAutocomplete, },
  {enAvogadroTag, frAvogadroTag, nlAvogadroTag, ptAvogadroTag, itAvogadroTag, deAvogadroTag, esAvogadroTag, huAvogadroTag, },
  {enAxis, frAxis, nlAxis, ptAxis, itAxis, deAxis, esAxis, huAxis, },
  {enBarStart, frBarStart, nlBarStart, ptBarStart, itBarStart, deBarStart, esBarStart, huBarStart, },
  {enBasedLogarithm, frBasedLogarithm, nlBasedLogarithm, ptBasedLogarithm, itBasedLogarithm, deBasedLogarithm, esBasedLogarithm, huBasedLogarithm, },
  {enBattery, frBattery, nlBattery, ptBattery, itBattery, deBattery, esBattery, huBattery, },
  {enBetaPopUp, frBetaPopUp, nlBetaPopUp, ptBetaPopUp, itBetaPopUp, deBetaPopUp, esBetaPopUp, huBetaPopUp, },
  {enBetaVersion, frBetaVersion, nlBetaVersion, ptBetaVersion, itBetaVersion, deBetaVersion, esBetaVersion, huBetaVersion, },
  {enBetaVersionMessage1, frBetaVersionMessage1, nlBetaVersionMessage1, ptBetaVersionMessage1, itBetaVersionMessage1, deBetaVersionMessage1, esBetaVersionMessage1, huBetaVersionMessage1, },
  {enBetaVersionMessage2, frBetaVersionMessage2, nlBetaVersionMessage2, ptBetaVersionMessage2, itBetaVersionMessage2, deBetaVersionMessage2, esBetaVersionMessage2, huBetaVersionMessage2, },
  {enBetaVersionMessage3, frBetaVersionMessage3, nlBetaVersionMessage3, ptBetaVersionMessage3, itBetaVersionMessage3, deBetaVersionMessage3, esBetaVersionMessage3, huBetaVersionMessage3, },
  {enBetaVersionMessage4, frBetaVersionMessage4, nlBetaVersionMessage4, ptBetaVersionMessage4, itBetaVersionMessage4, deBetaVersionMessage4, esBetaVersionMessage4, huBetaVersionMessage4, },
  {enBetaVersionMessage5, frBetaVersionMessage5, nlBetaVersionMessage5, ptBetaVersionMessage5, itBetaVersionMessage5, deBetaVersionMessage5, esBetaVersionMessage5, huBetaVersionMessage5, },
  {enBetaVersionMessage6, frBetaVersionMessage6, nlBetaVersionMessage6, ptBetaVersionMessage6, itBetaVersionMessage6, deBetaVersionMessage6, esBetaVersionMessage6, huBetaVersionMessage6, },
  {enBinaryBase, frBinaryBase, nlBinaryBase, ptBinaryBase, itBinaryBase, deBinaryBase, esBinaryBase, huBinaryBase, },
  {enBinomial, frBinomial, nlBinomial, ptBinomial, itBinomial, deBinomial, esBinomial, huBinomial, },
  {enBinomialCDF, frBinomialCDF, nlBinomialCDF, ptBinomialCDF, itBinomialCDF, deBinomialCDF, esBinomialCDF, huBinomialCDF, },
  {enBinomialDistribution, frBinomialDistribution, nlBinomialDistribution, ptBinomialDistribution, itBinomialDistribution, deBinomialDistribution, esBinomialDistribution, huBinomialDistribution, },
  {enBinomialPDF, frBinomialPDF, nlBinomialPDF, ptBinomialPDF, itBinomialPDF, deBinomialPDF, esBinomialPDF, huBinomialPDF, },
  {enBohrMagnetonTag, frBohrMagnetonTag, nlBohrMagnetonTag, ptBohrMagnetonTag, itBohrMagnetonTag, deBohrMagnetonTag, esBohrMagnetonTag, huBohrMagnetonTag, },
  {enBohrRadiusTag, frBohrRadiusTag, nlBohrRadiusTag, ptBohrRadiusTag, itBohrRadiusTag, deBohrRadiusTag, esBohrRadiusTag, huBohrRadiusTag, },
  {enBoltzmannTag, frBoltzmannTag, nlBoltzmannTag, ptBoltzmannTag, itBoltzmannTag, deBoltzmannTag, esBoltzmannTag, huBoltzmannTag, },
  {enBoxTab, frBoxTab, nlBoxTab, ptBoxTab, itBoxTab, deBoxTab, esBoxTab, huBoxTab, },
  {enBrightness, frBrightness, nlBrightness, ptBrightness, itBrightness, deBrightness, esBrightness, huBrightness, },
  {enBrightnessSettings, frBrightnessSettings, nlBrightnessSettings, ptBrightnessSettings, itBrightnessSettings, deBrightnessSettings, esBrightnessSettings, huBrightnessSettings, },
  {enBrightnessShortcut, frBrightnessShortcut, nlBrightnessShortcut, ptBrightnessShortcut, itBrightnessShortcut, deBrightnessShortcut, esBrightnessShortcut, huBrightnessShortcut, },
  {enBuiltinsAndKeywords, frBuiltinsAndKeywords, nlBuiltinsAndKeywords, ptBuiltinsAndKeywords, itBuiltinsAndKeywords, deBuiltinsAndKeywords, esBuiltinsAndKeywords, huBuiltinsAndKeywords, },
  {enCalcium, frCalcium, nlCalcium, ptCalcium, itCalcium, deCalcium, esCalcium, huCalcium, },
  {enCalculApp, frCalculApp, nlCalculApp, ptCalculApp, itCalculApp, deCalculApp, esCalculApp, huCalculApp, },
  {enCalculAppCapital, frCalculAppCapital, nlCalculAppCapital, ptCalculAppCapital, itCalculAppCapital, deCalculAppCapital, esCalculAppCapital, huCalculAppCapital, },
  {enCalculation, frCalculation, nlCalculation, ptCalculation, itCalculation, deCalculation, esCalculation, huCalculation, },
  {enCancel, frCancel, nlCancel, ptCancel, itCancel, deCancel, esCancel, huCancel, },
  {enCanonicalForm, frCanonicalForm, nlCanonicalForm, ptCanonicalForm, itCanonicalForm, deCanonicalForm, esCanonicalForm, huCanonicalForm, },
  {enCartesian, frCartesian, nlCartesian, ptCartesian, itCartesian, deCartesian, esCartesian, huCartesian, },
  {enCartesianType, frCartesianType, nlCartesianType, ptCartesianType, itCartesianType, deCartesianType, esCartesianType, huCartesianType, },
  {enCatalog, frCatalog, nlCatalog, ptCatalog, itCatalog, deCatalog, esCatalog, huCatalog, },
  {enCatalyticActivityDimension, frCatalyticActivityDimension, nlCatalyticActivityDimension, ptCatalyticActivityDimension, itCatalyticActivityDimension, deCatalyticActivityDimension, esCatalyticActivityDimension, huCatalyticActivityDimension, },
  {enCeiling, frCeiling, nlCeiling, ptCeiling, itCeiling, deCeiling, esCeiling, huCeiling, },
  {enChemistry, frChemistry, nlChemistry, ptChemistry, itChemistry, deChemistry, esChemistry, huChemistry, },
  {enChiSquared, frChiSquared, nlChiSquared, ptChiSquared, itChiSquared, deChiSquared, esChiSquared, huChiSquared, },
  {enChiSquaredDistribution, frChiSquaredDistribution, nlChiSquaredDistribution, ptChiSquaredDistribution, itChiSquaredDistribution, deChiSquaredDistribution, esChiSquaredDistribution, huChiSquaredDistribution, },
  {enChooseDistribution, frChooseDistribution, nlChooseDistribution, ptChooseDistribution, itChooseDistribution, deChooseDistribution, esChooseDistribution, huChooseDistribution, },
  {enChooseParameters, frChooseParameters, nlChooseParameters, ptChooseParameters, itChooseParameters, deChooseParameters, esChooseParameters, huChooseParameters, },
  {enChooseSequenceType, frChooseSequenceType, nlChooseSequenceType, ptChooseSequenceType, itChooseSequenceType, deChooseSequenceType, esChooseSequenceType, huChooseSequenceType, },
  {enCirculationQuantumTag, frCirculationQuantumTag, nlCirculationQuantumTag, ptCirculationQuantumTag, itCirculationQuantumTag, deCirculationQuantumTag, esCirculationQuantumTag, huCirculationQuantumTag, },
  {enClearColumn, frClearColumn, nlClearColumn, ptClearColumn, itClearColumn, deClearColumn, esClearColumn, huClearColumn, },
  {enCobalt, frCobalt, nlCobalt, ptCobalt, itCobalt, deCobalt, esCobalt, huCobalt, },
  {enColorBlue, frColorBlue, nlColorBlue, ptColorBlue, itColorBlue, deColorBlue, esColorBlue, huColorBlue, },
  {enColorCyan, frColorCyan, nlColorCyan, ptColorCyan, itColorCyan, deColorCyan, esColorCyan, huColorCyan, },
  {enColorGreen, frColorGreen, nlColorGreen, ptColorGreen, itColorGreen, deColorGreen, esColorGreen, huColorGreen, },
  {enColorOrange, frColorOrange, nlColorOrange, ptColorOrange, itColorOrange, deColorOrange, esColorOrange, huColorOrange, },
  {enColorPink, frColorPink, nlColorPink, ptColorPink, itColorPink, deColorPink, esColorPink, huColorPink, },
  {enColorPurple, frColorPurple, nlColorPurple, ptColorPurple, itColorPurple, deColorPurple, esColorPurple, huColorPurple, },
  {enColorRed, frColorRed, nlColorRed, ptColorRed, itColorRed, deColorRed, esColorRed, huColorRed, },
  {enColorYellow, frColorYellow, nlColorYellow, ptColorYellow, itColorYellow, deColorYellow, esColorYellow, huColorYellow, },
  {enColumnOptions, frColumnOptions, nlColumnOptions, ptColumnOptions, itColumnOptions, deColumnOptions, esColumnOptions, huColumnOptions, },
  {enCombination, frCombination, nlCombination, ptCombination, itCombination, deCombination, esCombination, huCombination, },
  {enCombinatorics, frCombinatorics, nlCombinatorics, ptCombinatorics, itCombinatorics, deCombinatorics, esCombinatorics, huCombinatorics, },
  {enComplexAbsoluteValue, frComplexAbsoluteValue, nlComplexAbsoluteValue, ptComplexAbsoluteValue, itComplexAbsoluteValue, deComplexAbsoluteValue, esComplexAbsoluteValue, huComplexAbsoluteValue, },
  {enComplexFormat, frComplexFormat, nlComplexFormat, ptComplexFormat, itComplexFormat, deComplexFormat, esComplexFormat, huComplexFormat, },
  {enComplexNumber, frComplexNumber, nlComplexNumber, ptComplexNumber, itComplexNumber, deComplexNumber, esComplexNumber, huComplexNumber, },
  {enCompute, frCompute, nlCompute, ptCompute, itCompute, deCompute, esCompute, huCompute, },
  {enComputeProbability, frComputeProbability, nlComputeProbability, ptComputeProbability, itComputeProbability, deComputeProbability, esComputeProbability, huComputeProbability, },
  {enConductanceQuantumTag, frConductanceQuantumTag, nlConductanceQuantumTag, ptConductanceQuantumTag, itConductanceQuantumTag, deConductanceQuantumTag, esConductanceQuantumTag, huConductanceQuantumTag, },
  {enConductivityConstants, frConductivityConstants, nlConductivityConstants, ptConductivityConstants, itConductivityConstants, deConductivityConstants, esConductivityConstants, huConductivityConstants, },
  {enConfidence, frConfidence, nlConfidence, ptConfidence, itConfidence, deConfidence, esConfidence, huConfidence, },
  {enConfirmDiscard1, frConfirmDiscard1, nlConfirmDiscard1, ptConfirmDiscard1, itConfirmDiscard1, deConfirmDiscard1, esConfirmDiscard1, huConfirmDiscard1, },
  {enConfirmDiscard2, frConfirmDiscard2, nlConfirmDiscard2, ptConfirmDiscard2, itConfirmDiscard2, deConfirmDiscard2, esConfirmDiscard2, huConfirmDiscard2, },
  {enConjugate, frConjugate, nlConjugate, ptConjugate, itConjugate, deConjugate, esConjugate, huConjugate, },
  {enConnectedMessage1, frConnectedMessage1, nlConnectedMessage1, ptConnectedMessage1, itConnectedMessage1, deConnectedMessage1, esConnectedMessage1, huConnectedMessage1, },
  {enConnectedMessage2, frConnectedMessage2, nlConnectedMessage2, ptConnectedMessage2, itConnectedMessage2, deConnectedMessage2, esConnectedMessage2, huConnectedMessage2, },
  {enConnectedMessage3, frConnectedMessage3, nlConnectedMessage3, ptConnectedMessage3, itConnectedMessage3, deConnectedMessage3, esConnectedMessage3, huConnectedMessage3, },
  {enConnectedMessage4, frConnectedMessage4, nlConnectedMessage4, ptConnectedMessage4, itConnectedMessage4, deConnectedMessage4, esConnectedMessage4, huConnectedMessage4, },
  {enConnectedMessage5, frConnectedMessage5, nlConnectedMessage5, ptConnectedMessage5, itConnectedMessage5, deConnectedMessage5, esConnectedMessage5, huConnectedMessage5, },
  {enConnectedMessage6, frConnectedMessage6, nlConnectedMessage6, ptConnectedMessage6, itConnectedMessage6, deConnectedMessage6, esConnectedMessage6, huConnectedMessage6, },
  {enConsole, frConsole, nlConsole, ptConsole, itConsole, deConsole, esConsole, huConsole, },
  {enContributors, frContributors, nlContributors, ptContributors, itContributors, deContributors, esContributors, huContributors, },
  {enCopper, frCopper, nlCopper, ptCopper, itCopper, deCopper, esCopper, huCopper, },
  {enCopyColumnInList, frCopyColumnInList, nlCopyColumnInList, ptCopyColumnInList, itCopyColumnInList, deCopyColumnInList, esCopyColumnInList, huCopyColumnInList, },
  {enCoulombTag, frCoulombTag, nlCoulombTag, ptCoulombTag, itCoulombTag, deCoulombTag, esCoulombTag, huCoulombTag, },
  {enCountry, frCountry, nlCountry, ptCountry, itCountry, deCountry, esCountry, huCountry, },
  {enCountryCA, frCountryCA, nlCountryCA, ptCountryCA, itCountryCA, deCountryCA, esCountryCA, huCountryCA, },
  {enCountryDE, frCountryDE, nlCountryDE, ptCountryDE, itCountryDE, deCountryDE, esCountryDE, huCountryDE, },
  {enCountryES, frCountryES, nlCountryES, ptCountryES, itCountryES, deCountryES, esCountryES, huCountryES, },
  {enCountryFR, frCountryFR, nlCountryFR, ptCountryFR, itCountryFR, deCountryFR, esCountryFR, huCountryFR, },
  {enCountryGB, frCountryGB, nlCountryGB, ptCountryGB, itCountryGB, deCountryGB, esCountryGB, huCountryGB, },
  {enCountryIT, frCountryIT, nlCountryIT, ptCountryIT, itCountryIT, deCountryIT, esCountryIT, huCountryIT, },
  {enCountryNL, frCountryNL, nlCountryNL, ptCountryNL, itCountryNL, deCountryNL, esCountryNL, huCountryNL, },
  {enCountryPT, frCountryPT, nlCountryPT, ptCountryPT, itCountryPT, deCountryPT, esCountryPT, huCountryPT, },
  {enCountryUS, frCountryUS, nlCountryUS, ptCountryUS, itCountryUS, deCountryUS, esCountryUS, huCountryUS, },
  {enCountryWW, frCountryWW, nlCountryWW, ptCountryWW, itCountryWW, deCountryWW, esCountryWW, huCountryWW, },
  {enCountryWarning1, frCountryWarning1, nlCountryWarning1, ptCountryWarning1, itCountryWarning1, deCountryWarning1, esCountryWarning1, huCountryWarning1, },
  {enCountryWarning2, frCountryWarning2, nlCountryWarning2, ptCountryWarning2, itCountryWarning2, deCountryWarning2, esCountryWarning2, huCountryWarning2, },
  {enCovariance, frCovariance, nlCovariance, ptCovariance, itCovariance, deCovariance, esCovariance, huCovariance, },
  {enCross, frCross, nlCross, ptCross, itCross, deCross, esCross, huCross, },
  {enCubic, frCubic, nlCubic, ptCubic, itCubic, deCubic, esCubic, huCubic, },
  {enCurrentDimension, frCurrentDimension, nlCurrentDimension, ptCurrentDimension, itCurrentDimension, deCurrentDimension, esCurrentDimension, huCurrentDimension, },
  {enCurveType, frCurveType, nlCurveType, ptCurveType, itCurveType, deCurveType, esCurveType, huCurveType, },
  {enD1FisherDefinition, frD1FisherDefinition, nlD1FisherDefinition, ptD1FisherDefinition, itD1FisherDefinition, deD1FisherDefinition, esD1FisherDefinition, huD1FisherDefinition, },
  {enD2FisherDefinition, frD2FisherDefinition, nlD2FisherDefinition, ptD2FisherDefinition, itD2FisherDefinition, deD2FisherDefinition, esD2FisherDefinition, huD2FisherDefinition, },
  {enDataNotSuitable, frDataNotSuitable, nlDataNotSuitable, ptDataNotSuitable, itDataNotSuitable, deDataNotSuitable, esDataNotSuitable, huDataNotSuitable, },
  {enDataNotSuitableForRegression, frDataNotSuitableForRegression, nlDataNotSuitableForRegression, ptDataNotSuitableForRegression, itDataNotSuitableForRegression, deDataNotSuitableForRegression, esDataNotSuitableForRegression, huDataNotSuitableForRegression, },
  {enDataTab, frDataTab, nlDataTab, ptDataTab, itDataTab, deDataTab, esDataTab, huDataTab, },
  {enDate, frDate, nlDate, ptDate, itDate, deDate, esDate, huDate, },
  {enDateTime, frDateTime, nlDateTime, ptDateTime, itDateTime, deDateTime, esDateTime, huDateTime, },
  {enDecimal, frDecimal, nlDecimal, ptDecimal, itDecimal, deDecimal, esDecimal, huDecimal, },
  {enDecimalBase, frDecimalBase, nlDecimalBase, ptDecimalBase, itDecimalBase, deDecimalBase, esDecimalBase, huDecimalBase, },
  {enDeg, frDeg, nlDeg, ptDeg, itDeg, deDeg, esDeg, huDeg, },
  {enDegrees, frDegrees, nlDegrees, ptDegrees, itDegrees, deDegrees, esDegrees, huDegrees, },
  {enDegreesOfFreedomDefinition, frDegreesOfFreedomDefinition, nlDegreesOfFreedomDefinition, ptDegreesOfFreedomDefinition, itDegreesOfFreedomDefinition, deDegreesOfFreedomDefinition, esDegreesOfFreedomDefinition, huDegreesOfFreedomDefinition, },
  {enDeleteFunction, frDeleteFunction, nlDeleteFunction, ptDeleteFunction, itDeleteFunction, deDeleteFunction, esDeleteFunction, huDeleteFunction, },
  {enDeleteScript, frDeleteScript, nlDeleteScript, ptDeleteScript, itDeleteScript, deDeleteScript, esDeleteScript, huDeleteScript, },
  {enDeleteSequence, frDeleteSequence, nlDeleteSequence, ptDeleteSequence, itDeleteSequence, deDeleteSequence, esDeleteSequence, huDeleteSequence, },
  {enDerivateNumber, frDerivateNumber, nlDerivateNumber, ptDerivateNumber, itDerivateNumber, deDerivateNumber, esDerivateNumber, huDerivateNumber, },
  {enDerivativeFunctionColumn, frDerivativeFunctionColumn, nlDerivativeFunctionColumn, ptDerivativeFunctionColumn, itDerivativeFunctionColumn, deDerivativeFunctionColumn, esDerivativeFunctionColumn, huDerivativeFunctionColumn, },
  {enDeterminant, frDeterminant, nlDeterminant, ptDeterminant, itDeterminant, deDeterminant, esDeterminant, huDeterminant, },
  {enDeviation, frDeviation, nlDeviation, ptDeviation, itDeviation, deDeviation, esDeviation, huDeviation, },
  {enDeviationDefinition, frDeviationDefinition, nlDeviationDefinition, ptDeviationDefinition, itDeviationDefinition, deDeviationDefinition, esDeviationDefinition, huDeviationDefinition, },
  {enDimension, frDimension, nlDimension, ptDimension, itDimension, deDimension, esDimension, huDimension, },
  {enDiscriminant, frDiscriminant, nlDiscriminant, ptDiscriminant, itDiscriminant, deDiscriminant, esDiscriminant, huDiscriminant, },
  {enDisplayMode, frDisplayMode, nlDisplayMode, ptDisplayMode, itDisplayMode, deDisplayMode, esDisplayMode, huDisplayMode, },
  {enDisplayValues, frDisplayValues, nlDisplayValues, ptDisplayValues, itDisplayValues, deDisplayValues, esDisplayValues, huDisplayValues, },
  {enDistanceDimension, frDistanceDimension, nlDistanceDimension, ptDistanceDimension, itDistanceDimension, deDistanceDimension, esDistanceDimension, huDistanceDimension, },
  {enDistances, frDistances, nlDistances, ptDistances, itDistances, deDistances, esDistances, huDistances, },
  {enDot, frDot, nlDot, ptDot, itDot, deDot, esDot, huDot, },
  {enDoubleRecurrence, frDoubleRecurrence, nlDoubleRecurrence, ptDoubleRecurrence, itDoubleRecurrence, deDoubleRecurrence, esDoubleRecurrence, huDoubleRecurrence, },
  {enDuplicateScript, frDuplicateScript, nlDuplicateScript, ptDuplicateScript, itDuplicateScript, deDuplicateScript, esDuplicateScript, huDuplicateScript, },
  {enEarthMassTag, frEarthMassTag, nlEarthMassTag, ptEarthMassTag, itEarthMassTag, deEarthMassTag, esEarthMassTag, huEarthMassTag, },
  {enEarthMoonDistanceTag, frEarthMoonDistanceTag, nlEarthMoonDistanceTag, ptEarthMoonDistanceTag, itEarthMoonDistanceTag, deEarthMoonDistanceTag, esEarthMoonDistanceTag, huEarthMoonDistanceTag, },
  {enEarthSunDistanceTag, frEarthSunDistanceTag, nlEarthSunDistanceTag, ptEarthSunDistanceTag, itEarthSunDistanceTag, deEarthSunDistanceTag, esEarthSunDistanceTag, huEarthSunDistanceTag, },
  {enEdition2D, frEdition2D, nlEdition2D, ptEdition2D, itEdition2D, deEdition2D, esEdition2D, huEdition2D, },
  {enEditionLinear, frEditionLinear, nlEditionLinear, ptEditionLinear, itEditionLinear, deEditionLinear, esEditionLinear, huEditionLinear, },
  {enEditionMode, frEditionMode, nlEditionMode, ptEditionMode, itEditionMode, deEditionMode, esEditionMode, huEditionMode, },
  {enElectricCapacitanceDimension, frElectricCapacitanceDimension, nlElectricCapacitanceDimension, ptElectricCapacitanceDimension, itElectricCapacitanceDimension, deElectricCapacitanceDimension, esElectricCapacitanceDimension, huElectricCapacitanceDimension, },
  {enElectricChargeDimension, frElectricChargeDimension, nlElectricChargeDimension, ptElectricChargeDimension, itElectricChargeDimension, deElectricChargeDimension, esElectricChargeDimension, huElectricChargeDimension, },
  {enElectricConductanceDimension, frElectricConductanceDimension, nlElectricConductanceDimension, ptElectricConductanceDimension, itElectricConductanceDimension, deElectricConductanceDimension, esElectricConductanceDimension, huElectricConductanceDimension, },
  {enElectricPotentialDimension, frElectricPotentialDimension, nlElectricPotentialDimension, ptElectricPotentialDimension, itElectricPotentialDimension, deElectricPotentialDimension, esElectricPotentialDimension, huElectricPotentialDimension, },
  {enElectricResistanceDimension, frElectricResistanceDimension, nlElectricResistanceDimension, ptElectricResistanceDimension, itElectricResistanceDimension, deElectricResistanceDimension, esElectricResistanceDimension, huElectricResistanceDimension, },
  {enElectricity, frElectricity, nlElectricity, ptElectricity, itElectricity, deElectricity, esElectricity, huElectricity, },
  {enElectromagnetism, frElectromagnetism, nlElectromagnetism, ptElectromagnetism, itElectromagnetism, deElectromagnetism, esElectromagnetism, huElectromagnetism, },
  {enElectronMassTag, frElectronMassTag, nlElectronMassTag, ptElectronMassTag, itElectronMassTag, deElectronMassTag, esElectronMassTag, huElectronMassTag, },
  {enElementalChargeTag, frElementalChargeTag, nlElementalChargeTag, ptElementalChargeTag, itElementalChargeTag, deElementalChargeTag, esElementalChargeTag, huElementalChargeTag, },
  {enEmpty, frEmpty, nlEmpty, ptEmpty, itEmpty, deEmpty, esEmpty, huEmpty, },
  {enEmptyExpressionBox0, frEmptyExpressionBox0, nlEmptyExpressionBox0, ptEmptyExpressionBox0, itEmptyExpressionBox0, deEmptyExpressionBox0, esEmptyExpressionBox0, huEmptyExpressionBox0, },
  {enEmptyExpressionBox1, frEmptyExpressionBox1, nlEmptyExpressionBox1, ptEmptyExpressionBox1, itEmptyExpressionBox1, deEmptyExpressionBox1, esEmptyExpressionBox1, huEmptyExpressionBox1, },
  {enEmptyExpressionBox2, frEmptyExpressionBox2, nlEmptyExpressionBox2, ptEmptyExpressionBox2, itEmptyExpressionBox2, deEmptyExpressionBox2, esEmptyExpressionBox2, huEmptyExpressionBox2, },
  {enEmptyFunctionBox0, frEmptyFunctionBox0, nlEmptyFunctionBox0, ptEmptyFunctionBox0, itEmptyFunctionBox0, deEmptyFunctionBox0, esEmptyFunctionBox0, huEmptyFunctionBox0, },
  {enEmptyFunctionBox1, frEmptyFunctionBox1, nlEmptyFunctionBox1, ptEmptyFunctionBox1, itEmptyFunctionBox1, deEmptyFunctionBox1, esEmptyFunctionBox1, huEmptyFunctionBox1, },
  {enEmptyFunctionBox2, frEmptyFunctionBox2, nlEmptyFunctionBox2, ptEmptyFunctionBox2, itEmptyFunctionBox2, deEmptyFunctionBox2, esEmptyFunctionBox2, huEmptyFunctionBox2, },
  {enEmptySequenceBox0, frEmptySequenceBox0, nlEmptySequenceBox0, ptEmptySequenceBox0, itEmptySequenceBox0, deEmptySequenceBox0, esEmptySequenceBox0, huEmptySequenceBox0, },
  {enEmptySequenceBox1, frEmptySequenceBox1, nlEmptySequenceBox1, ptEmptySequenceBox1, itEmptySequenceBox1, deEmptySequenceBox1, esEmptySequenceBox1, huEmptySequenceBox1, },
  {enEnableCharacters, frEnableCharacters, nlEnableCharacters, ptEnableCharacters, itEnableCharacters, deEnableCharacters, esEnableCharacters, huEnableCharacters, },
  {enEnergyDimension, frEnergyDimension, nlEnergyDimension, ptEnergyDimension, itEnergyDimension, deEnergyDimension, esEnergyDimension, huEnergyDimension, },
  {enEng, frEng, nlEng, ptEng, itEng, deEng, esEng, huEng, },
  {enEngineering, frEngineering, nlEngineering, ptEngineering, itEngineering, deEngineering, esEngineering, huEngineering, },
  {enEnterEquation, frEnterEquation, nlEnterEquation, ptEnterEquation, itEnterEquation, deEnterEquation, esEnterEquation, huEnterEquation, },
  {enEscapeVelocity, frEscapeVelocity, nlEscapeVelocity, ptEscapeVelocity, itEscapeVelocity, deEscapeVelocity, esEscapeVelocity, huEscapeVelocity, },
  {enEscapeVelocityFromEarth, frEscapeVelocityFromEarth, nlEscapeVelocityFromEarth, ptEscapeVelocityFromEarth, itEscapeVelocityFromEarth, deEscapeVelocityFromEarth, esEscapeVelocityFromEarth, huEscapeVelocityFromEarth, },
  {enEscapeVelocityFromMoon, frEscapeVelocityFromMoon, nlEscapeVelocityFromMoon, ptEscapeVelocityFromMoon, itEscapeVelocityFromMoon, deEscapeVelocityFromMoon, esEscapeVelocityFromMoon, huEscapeVelocityFromMoon, },
  {enEscapeVelocityFromSun, frEscapeVelocityFromSun, nlEscapeVelocityFromSun, ptEscapeVelocityFromSun, itEscapeVelocityFromSun, deEscapeVelocityFromSun, esEscapeVelocityFromSun, huEscapeVelocityFromSun, },
  {enEuclideanDivision, frEuclideanDivision, nlEuclideanDivision, ptEuclideanDivision, itEuclideanDivision, deEuclideanDivision, esEuclideanDivision, huEuclideanDivision, },
  {enExamMode, frExamMode, nlExamMode, ptExamMode, itExamMode, deExamMode, esExamMode, huExamMode, },
  {enExamModeActive, frExamModeActive, nlExamModeActive, ptExamModeActive, itExamModeActive, deExamModeActive, esExamModeActive, huExamModeActive, },
  {enExamModeMode, frExamModeMode, nlExamModeMode, ptExamModeMode, itExamModeMode, deExamModeMode, esExamModeMode, huExamModeMode, },
  {enExamModeModeDutch, frExamModeModeDutch, nlExamModeModeDutch, ptExamModeModeDutch, itExamModeModeDutch, deExamModeModeDutch, esExamModeModeDutch, huExamModeModeDutch, },
  {enExamModeModeNoSym, frExamModeModeNoSym, nlExamModeModeNoSym, ptExamModeModeNoSym, itExamModeModeNoSym, deExamModeModeNoSym, esExamModeModeNoSym, huExamModeModeNoSym, },
  {enExamModeModeNoSymNoText, frExamModeModeNoSymNoText, nlExamModeModeNoSymNoText, ptExamModeModeNoSymNoText, itExamModeModeNoSymNoText, deExamModeModeNoSymNoText, esExamModeModeNoSymNoText, huExamModeModeNoSymNoText, },
  {enExamModeModeStandard, frExamModeModeStandard, nlExamModeModeStandard, ptExamModeModeStandard, itExamModeModeStandard, deExamModeModeStandard, esExamModeModeStandard, huExamModeModeStandard, },
  {enExamModeWarning1, frExamModeWarning1, nlExamModeWarning1, ptExamModeWarning1, itExamModeWarning1, deExamModeWarning1, esExamModeWarning1, huExamModeWarning1, },
  {enExamModeWarning2, frExamModeWarning2, nlExamModeWarning2, ptExamModeWarning2, itExamModeWarning2, deExamModeWarning2, esExamModeWarning2, huExamModeWarning2, },
  {enExamModeWarning3, frExamModeWarning3, nlExamModeWarning3, ptExamModeWarning3, itExamModeWarning3, deExamModeWarning3, esExamModeWarning3, huExamModeWarning3, },
  {enExceptions, frExceptions, nlExceptions, ptExceptions, itExceptions, deExceptions, esExceptions, huExceptions, },
  {enExecuteScript, frExecuteScript, nlExecuteScript, ptExecuteScript, itExecuteScript, deExecuteScript, esExecuteScript, huExecuteScript, },
  {enExitExamMode1, frExitExamMode1, nlExitExamMode1, ptExitExamMode1, itExitExamMode1, deExitExamMode1, esExitExamMode1, huExitExamMode1, },
  {enExitExamMode2, frExitExamMode2, nlExitExamMode2, ptExitExamMode2, itExitExamMode2, deExitExamMode2, esExitExamMode2, huExitExamMode2, },
  {enExplicit, frExplicit, nlExplicit, ptExplicit, itExplicit, deExplicit, esExplicit, huExplicit, },
  {enExponential, frExponential, nlExponential, ptExponential, itExponential, deExponential, esExponential, huExponential, },
  {enExponentialDistribution, frExponentialDistribution, nlExponentialDistribution, ptExponentialDistribution, itExponentialDistribution, deExponentialDistribution, esExponentialDistribution, huExponentialDistribution, },
  {enExpressions, frExpressions, nlExpressions, ptExpressions, itExpressions, deExpressions, esExpressions, huExpressions, },
  {enExtAppEnabled, frExtAppEnabled, nlExtAppEnabled, ptExtAppEnabled, itExtAppEnabled, deExtAppEnabled, esExtAppEnabled, huExtAppEnabled, },
  {enExtAppWrite, frExtAppWrite, nlExtAppWrite, ptExtAppWrite, itExtAppWrite, deExtAppWrite, esExtAppWrite, huExtAppWrite, },
  {enExtAppWriteExplanation1, frExtAppWriteExplanation1, nlExtAppWriteExplanation1, ptExtAppWriteExplanation1, itExtAppWriteExplanation1, deExtAppWriteExplanation1, esExtAppWriteExplanation1, huExtAppWriteExplanation1, },
  {enExtAppWriteExplanation2, frExtAppWriteExplanation2, nlExtAppWriteExplanation2, ptExtAppWriteExplanation2, itExtAppWriteExplanation2, deExtAppWriteExplanation2, esExtAppWriteExplanation2, huExtAppWriteExplanation2, },
  {enExtAppWriteExplanation3, frExtAppWriteExplanation3, nlExtAppWriteExplanation3, ptExtAppWriteExplanation3, itExtAppWriteExplanation3, deExtAppWriteExplanation3, esExtAppWriteExplanation3, huExtAppWriteExplanation3, },
  {enExternalApp, frExternalApp, nlExternalApp, ptExternalApp, itExternalApp, deExternalApp, esExternalApp, huExternalApp, },
  {enExternalAppApiMismatch, frExternalAppApiMismatch, nlExternalAppApiMismatch, ptExternalAppApiMismatch, itExternalAppApiMismatch, deExternalAppApiMismatch, esExternalAppApiMismatch, huExternalAppApiMismatch, },
  {enExternalAppCapital, frExternalAppCapital, nlExternalAppCapital, ptExternalAppCapital, itExternalAppCapital, deExternalAppCapital, esExternalAppCapital, huExternalAppCapital, },
  {enExternalAppExecError, frExternalAppExecError, nlExternalAppExecError, ptExternalAppExecError, itExternalAppExecError, deExternalAppExecError, esExternalAppExecError, huExternalAppExecError, },
  {enExternalApps, frExternalApps, nlExternalApps, ptExternalApps, itExternalApps, deExternalApps, esExternalApps, huExternalApps, },
  {enExternalNotCompatible, frExternalNotCompatible, nlExternalNotCompatible, ptExternalNotCompatible, itExternalNotCompatible, deExternalNotCompatible, esExternalNotCompatible, huExternalNotCompatible, },
  {enFactorizedForm, frFactorizedForm, nlFactorizedForm, ptFactorizedForm, itFactorizedForm, deFactorizedForm, esFactorizedForm, huFactorizedForm, },
  {enFaradayConstantTag, frFaradayConstantTag, nlFaradayConstantTag, ptFaradayConstantTag, itFaradayConstantTag, deFaradayConstantTag, esFaradayConstantTag, huFaradayConstantTag, },
  {enFiles, frFiles, nlFiles, ptFiles, itFiles, deFiles, esFiles, huFiles, },
  {enFillWithFormula, frFillWithFormula, nlFillWithFormula, ptFillWithFormula, itFillWithFormula, deFillWithFormula, esFillWithFormula, huFillWithFormula, },
  {enFineStructureTag, frFineStructureTag, nlFineStructureTag, ptFineStructureTag, itFineStructureTag, deFineStructureTag, esFineStructureTag, huFineStructureTag, },
  {enFirstQuartile, frFirstQuartile, nlFirstQuartile, ptFirstQuartile, itFirstQuartile, deFirstQuartile, esFirstQuartile, huFirstQuartile, },
  {enFirstRoot, frFirstRoot, nlFirstRoot, ptFirstRoot, itFirstRoot, deFirstRoot, esFirstRoot, huFirstRoot, },
  {enFirstTermIndex, frFirstTermIndex, nlFirstTermIndex, ptFirstTermIndex, itFirstTermIndex, deFirstTermIndex, esFirstTermIndex, huFirstTermIndex, },
  {enFisherDistribution, frFisherDistribution, nlFisherDistribution, ptFisherDistribution, itFisherDistribution, deFisherDistribution, esFisherDistribution, huFisherDistribution, },
  {enFloor, frFloor, nlFloor, ptFloor, itFloor, deFloor, esFloor, huFloor, },
  {enFluctuation, frFluctuation, nlFluctuation, ptFluctuation, itFluctuation, deFluctuation, esFluctuation, huFluctuation, },
  {enFontSizes, frFontSizes, nlFontSizes, ptFontSizes, itFontSizes, deFontSizes, esFontSizes, huFontSizes, },
  {enForbiddenAppInExamMode1, frForbiddenAppInExamMode1, nlForbiddenAppInExamMode1, ptForbiddenAppInExamMode1, itForbiddenAppInExamMode1, deForbiddenAppInExamMode1, esForbiddenAppInExamMode1, huForbiddenAppInExamMode1, },
  {enForbiddenAppInExamMode2, frForbiddenAppInExamMode2, nlForbiddenAppInExamMode2, ptForbiddenAppInExamMode2, itForbiddenAppInExamMode2, deForbiddenAppInExamMode2, esForbiddenAppInExamMode2, huForbiddenAppInExamMode2, },
  {enForbiddenValue, frForbiddenValue, nlForbiddenValue, ptForbiddenValue, itForbiddenValue, deForbiddenValue, esForbiddenValue, huForbiddenValue, },
  {enForceDimension, frForceDimension, nlForceDimension, ptForceDimension, itForceDimension, deForceDimension, esForceDimension, huForceDimension, },
  {enFracPart, frFracPart, nlFracPart, ptFracPart, itFracPart, deFracPart, esFracPart, huFracPart, },
  {enFrequencies1, frFrequencies1, nlFrequencies1, ptFrequencies1, itFrequencies1, deFrequencies1, esFrequencies1, huFrequencies1, },
  {enFrequencies2, frFrequencies2, nlFrequencies2, ptFrequencies2, itFrequencies2, deFrequencies2, esFrequencies2, huFrequencies2, },
  {enFrequencies3, frFrequencies3, nlFrequencies3, ptFrequencies3, itFrequencies3, deFrequencies3, esFrequencies3, huFrequencies3, },
  {enFrequency, frFrequency, nlFrequency, ptFrequency, itFrequency, deFrequency, esFrequency, huFrequency, },
  {enFrequencyDimension, frFrequencyDimension, nlFrequencyDimension, ptFrequencyDimension, itFrequencyDimension, deFrequencyDimension, esFrequencyDimension, huFrequencyDimension, },
  {enFunctionApp, frFunctionApp, nlFunctionApp, ptFunctionApp, itFunctionApp, deFunctionApp, esFunctionApp, huFunctionApp, },
  {enFunctionAppCapital, frFunctionAppCapital, nlFunctionAppCapital, ptFunctionAppCapital, itFunctionAppCapital, deFunctionAppCapital, esFunctionAppCapital, huFunctionAppCapital, },
  {enFunctionColor, frFunctionColor, nlFunctionColor, ptFunctionColor, itFunctionColor, deFunctionColor, esFunctionColor, huFunctionColor, },
  {enFunctionDomain, frFunctionDomain, nlFunctionDomain, ptFunctionDomain, itFunctionDomain, deFunctionDomain, esFunctionDomain, huFunctionDomain, },
  {enFunctionOptions, frFunctionOptions, nlFunctionOptions, ptFunctionOptions, itFunctionOptions, deFunctionOptions, esFunctionOptions, huFunctionOptions, },
  {enFunctionTab, frFunctionTab, nlFunctionTab, ptFunctionTab, itFunctionTab, deFunctionTab, esFunctionTab, huFunctionTab, },
  {enFunctions, frFunctions, nlFunctions, ptFunctions, itFunctions, deFunctions, esFunctions, huFunctions, },
  {enFunctionsAndVariables, frFunctionsAndVariables, nlFunctionsAndVariables, ptFunctionsAndVariables, itFunctionsAndVariables, deFunctionsAndVariables, esFunctionsAndVariables, huFunctionsAndVariables, },
  {enFundamentalConstants, frFundamentalConstants, nlFundamentalConstants, ptFundamentalConstants, itFundamentalConstants, deFundamentalConstants, esFundamentalConstants, huFundamentalConstants, },
  {enGAccelerationTag, frGAccelerationTag, nlGAccelerationTag, ptGAccelerationTag, itGAccelerationTag, deGAccelerationTag, esGAccelerationTag, huGAccelerationTag, },
  {enGConstantTag, frGConstantTag, nlGConstantTag, ptGConstantTag, itGConstantTag, deGConstantTag, esGConstantTag, huGConstantTag, },
  {enGasTag, frGasTag, nlGasTag, ptGasTag, itGasTag, deGasTag, esGasTag, huGasTag, },
  {enGeometric, frGeometric, nlGeometric, ptGeometric, itGeometric, deGeometric, esGeometric, huGeometric, },
  {enGeometricDistribution, frGeometricDistribution, nlGeometricDistribution, ptGeometricDistribution, itGeometricDistribution, deGeometricDistribution, esGeometricDistribution, huGeometricDistribution, },
  {enGeometricMean, frGeometricMean, nlGeometricMean, ptGeometricMean, itGeometricMean, deGeometricMean, esGeometricMean, huGeometricMean, },
  {enGetMoreAppsAt, frGetMoreAppsAt, nlGetMoreAppsAt, ptGetMoreAppsAt, itGetMoreAppsAt, deGetMoreAppsAt, esGetMoreAppsAt, huGetMoreAppsAt, },
  {enGlass, frGlass, nlGlass, ptGlass, itGlass, deGlass, esGlass, huGlass, },
  {enGold, frGold, nlGold, ptGold, itGold, deGold, esGold, huGold, },
  {enGoto, frGoto, nlGoto, ptGoto, itGoto, deGoto, esGoto, huGoto, },
  {enGradians, frGradians, nlGradians, ptGradians, itGradians, deGradians, esGradians, huGradians, },
  {enGraphTab, frGraphTab, nlGraphTab, ptGraphTab, itGraphTab, deGraphTab, esGraphTab, huGraphTab, },
  {enGravitation, frGravitation, nlGravitation, ptGravitation, itGravitation, deGravitation, esGravitation, huGravitation, },
  {enGreatCommonDivisor, frGreatCommonDivisor, nlGreatCommonDivisor, ptGreatCommonDivisor, itGreatCommonDivisor, deGreatCommonDivisor, esGreatCommonDivisor, huGreatCommonDivisor, },
  {enHardwareTestLaunch1, frHardwareTestLaunch1, nlHardwareTestLaunch1, ptHardwareTestLaunch1, itHardwareTestLaunch1, deHardwareTestLaunch1, esHardwareTestLaunch1, huHardwareTestLaunch1, },
  {enHardwareTestLaunch2, frHardwareTestLaunch2, nlHardwareTestLaunch2, ptHardwareTestLaunch2, itHardwareTestLaunch2, deHardwareTestLaunch2, esHardwareTestLaunch2, huHardwareTestLaunch2, },
  {enHardwareTestLaunch3, frHardwareTestLaunch3, nlHardwareTestLaunch3, ptHardwareTestLaunch3, itHardwareTestLaunch3, deHardwareTestLaunch3, esHardwareTestLaunch3, huHardwareTestLaunch3, },
  {enHardwareTestLaunch4, frHardwareTestLaunch4, nlHardwareTestLaunch4, ptHardwareTestLaunch4, itHardwareTestLaunch4, deHardwareTestLaunch4, esHardwareTestLaunch4, huHardwareTestLaunch4, },
  {enHarmonicMean, frHarmonicMean, nlHarmonicMean, ptHarmonicMean, itHarmonicMean, deHarmonicMean, esHarmonicMean, huHarmonicMean, },
  {enHartreeConstantTag, frHartreeConstantTag, nlHartreeConstantTag, ptHartreeConstantTag, itHartreeConstantTag, deHartreeConstantTag, esHartreeConstantTag, huHartreeConstantTag, },
  {enHexadecimalBase, frHexadecimalBase, nlHexadecimalBase, ptHexadecimalBase, itHexadecimalBase, deHexadecimalBase, esHexadecimalBase, huHexadecimalBase, },
  {enHideDerivativeColumn, frHideDerivativeColumn, nlHideDerivativeColumn, ptHideDerivativeColumn, itHideDerivativeColumn, deHideDerivativeColumn, esHideDerivativeColumn, huHideDerivativeColumn, },
  {enHistogramSet, frHistogramSet, nlHistogramSet, ptHistogramSet, itHistogramSet, deHistogramSet, esHistogramSet, huHistogramSet, },
  {enHistogramTab, frHistogramTab, nlHistogramTab, ptHistogramTab, itHistogramTab, deHistogramTab, esHistogramTab, huHistogramTab, },
  {enHyperbolicCosine, frHyperbolicCosine, nlHyperbolicCosine, ptHyperbolicCosine, itHyperbolicCosine, deHyperbolicCosine, esHyperbolicCosine, huHyperbolicCosine, },
  {enHyperbolicSine, frHyperbolicSine, nlHyperbolicSine, ptHyperbolicSine, itHyperbolicSine, deHyperbolicSine, esHyperbolicSine, huHyperbolicSine, },
  {enHyperbolicTangent, frHyperbolicTangent, nlHyperbolicTangent, ptHyperbolicTangent, itHyperbolicTangent, deHyperbolicTangent, esHyperbolicTangent, huHyperbolicTangent, },
  {enHyperbolicTrigonometry, frHyperbolicTrigonometry, nlHyperbolicTrigonometry, ptHyperbolicTrigonometry, itHyperbolicTrigonometry, deHyperbolicTrigonometry, esHyperbolicTrigonometry, huHyperbolicTrigonometry, },
  {enIdentity, frIdentity, nlIdentity, ptIdentity, itIdentity, deIdentity, esIdentity, huIdentity, },
  {enIdleTimeBeforeDimming, frIdleTimeBeforeDimming, nlIdleTimeBeforeDimming, ptIdleTimeBeforeDimming, itIdleTimeBeforeDimming, deIdleTimeBeforeDimming, esIdleTimeBeforeDimming, huIdleTimeBeforeDimming, },
  {enIdleTimeBeforeSuspend, frIdleTimeBeforeSuspend, nlIdleTimeBeforeSuspend, ptIdleTimeBeforeSuspend, itIdleTimeBeforeSuspend, deIdleTimeBeforeSuspend, esIdleTimeBeforeSuspend, huIdleTimeBeforeSuspend, },
  {enImaginaryPart, frImaginaryPart, nlImaginaryPart, ptImaginaryPart, itImaginaryPart, deImaginaryPart, esImaginaryPart, huImaginaryPart, },
  {enImportedModulesAndScripts, frImportedModulesAndScripts, nlImportedModulesAndScripts, ptImportedModulesAndScripts, itImportedModulesAndScripts, deImportedModulesAndScripts, esImportedModulesAndScripts, huImportedModulesAndScripts, },
  {enInductanceDimension, frInductanceDimension, nlInductanceDimension, ptInductanceDimension, itInductanceDimension, deInductanceDimension, esInductanceDimension, huInductanceDimension, },
  {enInductanceMenu, frInductanceMenu, nlInductanceMenu, ptInductanceMenu, itInductanceMenu, deInductanceMenu, esInductanceMenu, huInductanceMenu, },
  {enInfiniteNumberOfSolutions, frInfiniteNumberOfSolutions, nlInfiniteNumberOfSolutions, ptInfiniteNumberOfSolutions, itInfiniteNumberOfSolutions, deInfiniteNumberOfSolutions, esInfiniteNumberOfSolutions, huInfiniteNumberOfSolutions, },
  {enInfinityMessage, frInfinityMessage, nlInfinityMessage, ptInfinityMessage, itInfinityMessage, deInfinityMessage, esInfinityMessage, huInfinityMessage, },
  {enIntegral, frIntegral, nlIntegral, ptIntegral, itIntegral, deIntegral, esIntegral, huIntegral, },
  {enInterquartileRange, frInterquartileRange, nlInterquartileRange, ptInterquartileRange, itInterquartileRange, deInterquartileRange, esInterquartileRange, huInterquartileRange, },
  {enIntersection, frIntersection, nlIntersection, ptIntersection, itIntersection, deIntersection, esIntersection, huIntersection, },
  {enInterval, frInterval, nlInterval, ptInterval, itInterval, deInterval, esInterval, huInterval, },
  {enIntervalDefinition, frIntervalDefinition, nlIntervalDefinition, ptIntervalDefinition, itIntervalDefinition, deIntervalDefinition, esIntervalDefinition, huIntervalDefinition, },
  {enIntervalSet, frIntervalSet, nlIntervalSet, ptIntervalSet, itIntervalSet, deIntervalSet, esIntervalSet, huIntervalSet, },
  {enIntervalT, frIntervalT, nlIntervalT, ptIntervalT, itIntervalT, deIntervalT, esIntervalT, huIntervalT, },
  {enIntervalTheta, frIntervalTheta, nlIntervalTheta, ptIntervalTheta, itIntervalTheta, deIntervalTheta, esIntervalTheta, huIntervalTheta, },
  {enIntervalX, frIntervalX, nlIntervalX, ptIntervalX, itIntervalX, deIntervalX, esIntervalX, huIntervalX, },
  {enInvBinomial, frInvBinomial, nlInvBinomial, ptInvBinomial, itInvBinomial, deInvBinomial, esInvBinomial, huInvBinomial, },
  {enInvNorm, frInvNorm, nlInvNorm, ptInvNorm, itInvNorm, deInvNorm, esInvNorm, huInvNorm, },
  {enInvSort, frInvSort, nlInvSort, ptInvSort, itInvSort, deInvSort, esInvSort, huInvSort, },
  {enInverse, frInverse, nlInverse, ptInverse, itInverse, deInverse, esInverse, huInverse, },
  {enInverseHyperbolicCosine, frInverseHyperbolicCosine, nlInverseHyperbolicCosine, ptInverseHyperbolicCosine, itInverseHyperbolicCosine, deInverseHyperbolicCosine, esInverseHyperbolicCosine, huInverseHyperbolicCosine, },
  {enInverseHyperbolicSine, frInverseHyperbolicSine, nlInverseHyperbolicSine, ptInverseHyperbolicSine, itInverseHyperbolicSine, deInverseHyperbolicSine, esInverseHyperbolicSine, huInverseHyperbolicSine, },
  {enInverseHyperbolicTangent, frInverseHyperbolicTangent, nlInverseHyperbolicTangent, ptInverseHyperbolicTangent, itInverseHyperbolicTangent, deInverseHyperbolicTangent, esInverseHyperbolicTangent, huInverseHyperbolicTangent, },
  {enIonKeyList, frIonKeyList, nlIonKeyList, ptIonKeyList, itIonKeyList, deIonKeyList, esIonKeyList, huIonKeyList, },
  {enIonSelector, frIonSelector, nlIonSelector, ptIonSelector, itIonSelector, deIonSelector, esIonSelector, huIonSelector, },
  {enIron, frIron, nlIron, ptIron, itIron, deIron, esIron, huIron, },
  {enLambdaExponentialDefinition, frLambdaExponentialDefinition, nlLambdaExponentialDefinition, ptLambdaExponentialDefinition, itLambdaExponentialDefinition, deLambdaExponentialDefinition, esLambdaExponentialDefinition, huLambdaExponentialDefinition, },
  {enLambdaPoissonDefinition, frLambdaPoissonDefinition, nlLambdaPoissonDefinition, ptLambdaPoissonDefinition, itLambdaPoissonDefinition, deLambdaPoissonDefinition, esLambdaPoissonDefinition, huLambdaPoissonDefinition, },
  {enLanguage, frLanguage, nlLanguage, ptLanguage, itLanguage, deLanguage, esLanguage, huLanguage, },
  {enLargeFont, frLargeFont, nlLargeFont, ptLargeFont, itLargeFont, deLargeFont, esLargeFont, huLargeFont, },
  {enLeastCommonMultiple, frLeastCommonMultiple, nlLeastCommonMultiple, ptLeastCommonMultiple, itLeastCommonMultiple, deLeastCommonMultiple, esLeastCommonMultiple, huLeastCommonMultiple, },
  {enLength, frLength, nlLength, ptLength, itLength, deLength, esLength, huLength, },
  {enLinear, frLinear, nlLinear, ptLinear, itLinear, deLinear, esLinear, huLinear, },
  {enLists, frLists, nlLists, ptLists, itLists, deLists, esLists, huLists, },
  {enLithium, frLithium, nlLithium, ptLithium, itLithium, deLithium, esLithium, huLithium, },
  {enLogarithmic, frLogarithmic, nlLogarithmic, ptLogarithmic, itLogarithmic, deLogarithmic, esLogarithmic, huLogarithmic, },
  {enLogistic, frLogistic, nlLogistic, ptLogistic, itLogistic, deLogistic, esLogistic, huLogistic, },
  {enLoopsAndTests, frLoopsAndTests, nlLoopsAndTests, ptLoopsAndTests, itLoopsAndTests, deLoopsAndTests, esLoopsAndTests, huLoopsAndTests, },
  {enLowBattery, frLowBattery, nlLowBattery, ptLowBattery, itLowBattery, deLowBattery, esLowBattery, huLowBattery, },
  {enLuminousIntensityDimension, frLuminousIntensityDimension, nlLuminousIntensityDimension, ptLuminousIntensityDimension, itLuminousIntensityDimension, deLuminousIntensityDimension, esLuminousIntensityDimension, huLuminousIntensityDimension, },
  {enMagneticFieldDimension, frMagneticFieldDimension, nlMagneticFieldDimension, ptMagneticFieldDimension, itMagneticFieldDimension, deMagneticFieldDimension, esMagneticFieldDimension, huMagneticFieldDimension, },
  {enMagneticFluxDimension, frMagneticFluxDimension, nlMagneticFluxDimension, ptMagneticFluxDimension, itMagneticFluxDimension, deMagneticFluxDimension, esMagneticFluxDimension, huMagneticFluxDimension, },
  {enMagneticFluxQuantumTag, frMagneticFluxQuantumTag, nlMagneticFluxQuantumTag, ptMagneticFluxQuantumTag, itMagneticFluxQuantumTag, deMagneticFluxQuantumTag, esMagneticFluxQuantumTag, huMagneticFluxQuantumTag, },
  {enMass, frMass, nlMass, ptMass, itMass, deMass, esMass, huMass, },
  {enMassDimension, frMassDimension, nlMassDimension, ptMassDimension, itMassDimension, deMassDimension, esMassDimension, huMassDimension, },
  {enMathOptions, frMathOptions, nlMathOptions, ptMathOptions, itMathOptions, deMathOptions, esMathOptions, huMathOptions, },
  {enMatrices, frMatrices, nlMatrices, ptMatrices, itMatrices, deMatrices, esMatrices, huMatrices, },
  {enMatricesAndVectors, frMatricesAndVectors, nlMatricesAndVectors, ptMatricesAndVectors, itMatricesAndVectors, deMatricesAndVectors, esMatricesAndVectors, huMatricesAndVectors, },
  {enMaximum, frMaximum, nlMaximum, ptMaximum, itMaximum, deMaximum, esMaximum, huMaximum, },
  {enMean, frMean, nlMean, ptMean, itMean, deMean, esMean, huMean, },
  {enMeanDefinition, frMeanDefinition, nlMeanDefinition, ptMeanDefinition, itMeanDefinition, deMeanDefinition, esMeanDefinition, huMeanDefinition, },
  {enMeanDot, frMeanDot, nlMeanDot, ptMeanDot, itMeanDot, deMeanDot, esMeanDot, huMeanDot, },
  {enMedian, frMedian, nlMedian, ptMedian, itMedian, deMedian, esMedian, huMedian, },
  {enMemUse, frMemUse, nlMemUse, ptMemUse, itMemUse, deMemUse, esMemUse, huMemUse, },
  {enMicroPythonVersion, frMicroPythonVersion, nlMicroPythonVersion, ptMicroPythonVersion, itMicroPythonVersion, deMicroPythonVersion, esMicroPythonVersion, huMicroPythonVersion, },
  {enMinimum, frMinimum, nlMinimum, ptMinimum, itMinimum, deMinimum, esMinimum, huMinimum, },
  {enMixedFraction, frMixedFraction, nlMixedFraction, ptMixedFraction, itMixedFraction, deMixedFraction, esMixedFraction, huMixedFraction, },
  {enModules, frModules, nlModules, ptModules, itModules, deModules, esModules, huModules, },
  {enMolarMassesByAlpha, frMolarMassesByAlpha, nlMolarMassesByAlpha, ptMolarMassesByAlpha, itMolarMassesByAlpha, deMolarMassesByAlpha, esMolarMassesByAlpha, huMolarMassesByAlpha, },
  {enMolarMassesByNumber, frMolarMassesByNumber, nlMolarMassesByNumber, ptMolarMassesByNumber, itMolarMassesByNumber, deMolarMassesByNumber, esMolarMassesByNumber, huMolarMassesByNumber, },
  {enMoonMassTag, frMoonMassTag, nlMoonMassTag, ptMoonMassTag, itMoonMassTag, deMoonMassTag, esMoonMassTag, huMoonMassTag, },
  {enMove, frMove, nlMove, ptMove, itMove, deMove, esMove, huMove, },
  {enMuonMassTag, frMuonMassTag, nlMuonMassTag, ptMuonMassTag, itMuonMassTag, deMuonMassTag, esMuonMassTag, huMuonMassTag, },
  {enNColumn, frNColumn, nlNColumn, ptNColumn, itNColumn, deNColumn, esNColumn, huNColumn, },
  {enNEnd, frNEnd, nlNEnd, ptNEnd, itNEnd, deNEnd, esNEnd, huNEnd, },
  {enNStart, frNStart, nlNStart, ptNStart, itNStart, deNStart, esNStart, huNStart, },
  {enNameCannotStartWithNumber, frNameCannotStartWithNumber, nlNameCannotStartWithNumber, ptNameCannotStartWithNumber, itNameCannotStartWithNumber, deNameCannotStartWithNumber, esNameCannotStartWithNumber, huNameCannotStartWithNumber, },
  {enNameTaken, frNameTaken, nlNameTaken, ptNameTaken, itNameTaken, deNameTaken, esNameTaken, huNameTaken, },
  {enNameTooLong, frNameTooLong, nlNameTooLong, ptNameTooLong, itNameTooLong, deNameTooLong, esNameTooLong, huNameTooLong, },
  {enNavigate, frNavigate, nlNavigate, ptNavigate, itNavigate, deNavigate, esNavigate, huNavigate, },
  {enNeutronMassTag, frNeutronMassTag, nlNeutronMassTag, ptNeutronMassTag, itNeutronMassTag, deNeutronMassTag, esNeutronMassTag, huNeutronMassTag, },
  {enNewMatrix, frNewMatrix, nlNewMatrix, ptNewMatrix, itNewMatrix, deNewMatrix, esNewMatrix, huNewMatrix, },
  {enNext, frNext, nlNext, ptNext, itNext, deNext, esNext, huNext, },
  {enNickel, frNickel, nlNickel, ptNickel, itNickel, deNickel, esNickel, huNickel, },
  {enNoActivatedFunction, frNoActivatedFunction, nlNoActivatedFunction, ptNoActivatedFunction, itNoActivatedFunction, deNoActivatedFunction, esNoActivatedFunction, huNoActivatedFunction, },
  {enNoActivatedSequence, frNoActivatedSequence, nlNoActivatedSequence, ptNoActivatedSequence, itNoActivatedSequence, deNoActivatedSequence, esNoActivatedSequence, huNoActivatedSequence, },
  {enNoAppsInstalled, frNoAppsInstalled, nlNoAppsInstalled, ptNoAppsInstalled, itNoAppsInstalled, deNoAppsInstalled, esNoAppsInstalled, huNoAppsInstalled, },
  {enNoDataToPlot, frNoDataToPlot, nlNoDataToPlot, ptNoDataToPlot, itNoDataToPlot, deNoDataToPlot, esNoDataToPlot, huNoDataToPlot, },
  {enNoFileToDisplay, frNoFileToDisplay, nlNoFileToDisplay, ptNoFileToDisplay, itNoFileToDisplay, deNoFileToDisplay, esNoFileToDisplay, huNoFileToDisplay, },
  {enNoFunction, frNoFunction, nlNoFunction, ptNoFunction, itNoFunction, deNoFunction, esNoFunction, huNoFunction, },
  {enNoIntersectionFound, frNoIntersectionFound, nlNoIntersectionFound, ptNoIntersectionFound, itNoIntersectionFound, deNoIntersectionFound, esNoIntersectionFound, huNoIntersectionFound, },
  {enNoMaximumFound, frNoMaximumFound, nlNoMaximumFound, ptNoMaximumFound, itNoMaximumFound, deNoMaximumFound, esNoMaximumFound, huNoMaximumFound, },
  {enNoMinimumFound, frNoMinimumFound, nlNoMinimumFound, ptNoMinimumFound, itNoMinimumFound, deNoMinimumFound, esNoMinimumFound, huNoMinimumFound, },
  {enNoPreimageFound, frNoPreimageFound, nlNoPreimageFound, ptNoPreimageFound, itNoPreimageFound, deNoPreimageFound, esNoPreimageFound, huNoPreimageFound, },
  {enNoSequence, frNoSequence, nlNoSequence, ptNoSequence, itNoSequence, deNoSequence, esNoSequence, huNoSequence, },
  {enNoSolutionEquation, frNoSolutionEquation, nlNoSolutionEquation, ptNoSolutionEquation, itNoSolutionEquation, deNoSolutionEquation, esNoSolutionEquation, huNoSolutionEquation, },
  {enNoSolutionInterval, frNoSolutionInterval, nlNoSolutionInterval, ptNoSolutionInterval, itNoSolutionInterval, deNoSolutionInterval, esNoSolutionInterval, huNoSolutionInterval, },
  {enNoSolutionSystem, frNoSolutionSystem, nlNoSolutionSystem, ptNoSolutionSystem, itNoSolutionSystem, deNoSolutionSystem, esNoSolutionSystem, huNoSolutionSystem, },
  {enNoValueToCompute, frNoValueToCompute, nlNoValueToCompute, ptNoValueToCompute, itNoValueToCompute, deNoValueToCompute, esNoValueToCompute, huNoValueToCompute, },
  {enNoWordAvailableHere, frNoWordAvailableHere, nlNoWordAvailableHere, ptNoWordAvailableHere, itNoWordAvailableHere, deNoWordAvailableHere, esNoWordAvailableHere, huNoWordAvailableHere, },
  {enNoZeroFound, frNoZeroFound, nlNoZeroFound, ptNoZeroFound, itNoZeroFound, deNoZeroFound, esNoZeroFound, huNoZeroFound, },
  {enNonLinearSystem, frNonLinearSystem, nlNonLinearSystem, ptNonLinearSystem, itNonLinearSystem, deNonLinearSystem, esNonLinearSystem, huNonLinearSystem, },
  {enNormCDF, frNormCDF, nlNormCDF, ptNormCDF, itNormCDF, deNormCDF, esNormCDF, huNormCDF, },
  {enNormCDF2, frNormCDF2, nlNormCDF2, ptNormCDF2, itNormCDF2, deNormCDF2, esNormCDF2, huNormCDF2, },
  {enNormPDF, frNormPDF, nlNormPDF, ptNormPDF, itNormPDF, deNormPDF, esNormPDF, huNormPDF, },
  {enNormVector, frNormVector, nlNormVector, ptNormVector, itNormVector, deNormVector, esNormVector, huNormVector, },
  {enNormal, frNormal, nlNormal, ptNormal, itNormal, deNormal, esNormal, huNormal, },
  {enNormalDistribution, frNormalDistribution, nlNormalDistribution, ptNormalDistribution, itNormalDistribution, deNormalDistribution, esNormalDistribution, huNormalDistribution, },
  {enNthRoot, frNthRoot, nlNthRoot, ptNthRoot, itNthRoot, deNthRoot, esNthRoot, huNthRoot, },
  {enNuclearConstants, frNuclearConstants, nlNuclearConstants, ptNuclearConstants, itNuclearConstants, deNuclearConstants, esNuclearConstants, huNuclearConstants, },
  {enNuclearMagnetonTag, frNuclearMagnetonTag, nlNuclearMagnetonTag, ptNuclearMagnetonTag, itNuclearMagnetonTag, deNuclearMagnetonTag, esNuclearMagnetonTag, huNuclearMagnetonTag, },
  {enNumberElementAc, frNumberElementAc, nlNumberElementAc, ptNumberElementAc, itNumberElementAc, deNumberElementAc, esNumberElementAc, huNumberElementAc, },
  {enNumberElementAg, frNumberElementAg, nlNumberElementAg, ptNumberElementAg, itNumberElementAg, deNumberElementAg, esNumberElementAg, huNumberElementAg, },
  {enNumberElementAl, frNumberElementAl, nlNumberElementAl, ptNumberElementAl, itNumberElementAl, deNumberElementAl, esNumberElementAl, huNumberElementAl, },
  {enNumberElementAm, frNumberElementAm, nlNumberElementAm, ptNumberElementAm, itNumberElementAm, deNumberElementAm, esNumberElementAm, huNumberElementAm, },
  {enNumberElementAr, frNumberElementAr, nlNumberElementAr, ptNumberElementAr, itNumberElementAr, deNumberElementAr, esNumberElementAr, huNumberElementAr, },
  {enNumberElementAs, frNumberElementAs, nlNumberElementAs, ptNumberElementAs, itNumberElementAs, deNumberElementAs, esNumberElementAs, huNumberElementAs, },
  {enNumberElementAt, frNumberElementAt, nlNumberElementAt, ptNumberElementAt, itNumberElementAt, deNumberElementAt, esNumberElementAt, huNumberElementAt, },
  {enNumberElementAu, frNumberElementAu, nlNumberElementAu, ptNumberElementAu, itNumberElementAu, deNumberElementAu, esNumberElementAu, huNumberElementAu, },
  {enNumberElementB, frNumberElementB, nlNumberElementB, ptNumberElementB, itNumberElementB, deNumberElementB, esNumberElementB, huNumberElementB, },
  {enNumberElementBa, frNumberElementBa, nlNumberElementBa, ptNumberElementBa, itNumberElementBa, deNumberElementBa, esNumberElementBa, huNumberElementBa, },
  {enNumberElementBe, frNumberElementBe, nlNumberElementBe, ptNumberElementBe, itNumberElementBe, deNumberElementBe, esNumberElementBe, huNumberElementBe, },
  {enNumberElementBh, frNumberElementBh, nlNumberElementBh, ptNumberElementBh, itNumberElementBh, deNumberElementBh, esNumberElementBh, huNumberElementBh, },
  {enNumberElementBi, frNumberElementBi, nlNumberElementBi, ptNumberElementBi, itNumberElementBi, deNumberElementBi, esNumberElementBi, huNumberElementBi, },
  {enNumberElementBk, frNumberElementBk, nlNumberElementBk, ptNumberElementBk, itNumberElementBk, deNumberElementBk, esNumberElementBk, huNumberElementBk, },
  {enNumberElementBr, frNumberElementBr, nlNumberElementBr, ptNumberElementBr, itNumberElementBr, deNumberElementBr, esNumberElementBr, huNumberElementBr, },
  {enNumberElementC, frNumberElementC, nlNumberElementC, ptNumberElementC, itNumberElementC, deNumberElementC, esNumberElementC, huNumberElementC, },
  {enNumberElementCa, frNumberElementCa, nlNumberElementCa, ptNumberElementCa, itNumberElementCa, deNumberElementCa, esNumberElementCa, huNumberElementCa, },
  {enNumberElementCd, frNumberElementCd, nlNumberElementCd, ptNumberElementCd, itNumberElementCd, deNumberElementCd, esNumberElementCd, huNumberElementCd, },
  {enNumberElementCe, frNumberElementCe, nlNumberElementCe, ptNumberElementCe, itNumberElementCe, deNumberElementCe, esNumberElementCe, huNumberElementCe, },
  {enNumberElementCf, frNumberElementCf, nlNumberElementCf, ptNumberElementCf, itNumberElementCf, deNumberElementCf, esNumberElementCf, huNumberElementCf, },
  {enNumberElementCl, frNumberElementCl, nlNumberElementCl, ptNumberElementCl, itNumberElementCl, deNumberElementCl, esNumberElementCl, huNumberElementCl, },
  {enNumberElementCm, frNumberElementCm, nlNumberElementCm, ptNumberElementCm, itNumberElementCm, deNumberElementCm, esNumberElementCm, huNumberElementCm, },
  {enNumberElementCn, frNumberElementCn, nlNumberElementCn, ptNumberElementCn, itNumberElementCn, deNumberElementCn, esNumberElementCn, huNumberElementCn, },
  {enNumberElementCo, frNumberElementCo, nlNumberElementCo, ptNumberElementCo, itNumberElementCo, deNumberElementCo, esNumberElementCo, huNumberElementCo, },
  {enNumberElementCr, frNumberElementCr, nlNumberElementCr, ptNumberElementCr, itNumberElementCr, deNumberElementCr, esNumberElementCr, huNumberElementCr, },
  {enNumberElementCs, frNumberElementCs, nlNumberElementCs, ptNumberElementCs, itNumberElementCs, deNumberElementCs, esNumberElementCs, huNumberElementCs, },
  {enNumberElementCu, frNumberElementCu, nlNumberElementCu, ptNumberElementCu, itNumberElementCu, deNumberElementCu, esNumberElementCu, huNumberElementCu, },
  {enNumberElementDb, frNumberElementDb, nlNumberElementDb, ptNumberElementDb, itNumberElementDb, deNumberElementDb, esNumberElementDb, huNumberElementDb, },
  {enNumberElementDs, frNumberElementDs, nlNumberElementDs, ptNumberElementDs, itNumberElementDs, deNumberElementDs, esNumberElementDs, huNumberElementDs, },
  {enNumberElementDy, frNumberElementDy, nlNumberElementDy, ptNumberElementDy, itNumberElementDy, deNumberElementDy, esNumberElementDy, huNumberElementDy, },
  {enNumberElementEr, frNumberElementEr, nlNumberElementEr, ptNumberElementEr, itNumberElementEr, deNumberElementEr, esNumberElementEr, huNumberElementEr, },
  {enNumberElementEs, frNumberElementEs, nlNumberElementEs, ptNumberElementEs, itNumberElementEs, deNumberElementEs, esNumberElementEs, huNumberElementEs, },
  {enNumberElementEu, frNumberElementEu, nlNumberElementEu, ptNumberElementEu, itNumberElementEu, deNumberElementEu, esNumberElementEu, huNumberElementEu, },
  {enNumberElementF, frNumberElementF, nlNumberElementF, ptNumberElementF, itNumberElementF, deNumberElementF, esNumberElementF, huNumberElementF, },
  {enNumberElementFe, frNumberElementFe, nlNumberElementFe, ptNumberElementFe, itNumberElementFe, deNumberElementFe, esNumberElementFe, huNumberElementFe, },
  {enNumberElementFl, frNumberElementFl, nlNumberElementFl, ptNumberElementFl, itNumberElementFl, deNumberElementFl, esNumberElementFl, huNumberElementFl, },
  {enNumberElementFm, frNumberElementFm, nlNumberElementFm, ptNumberElementFm, itNumberElementFm, deNumberElementFm, esNumberElementFm, huNumberElementFm, },
  {enNumberElementFr, frNumberElementFr, nlNumberElementFr, ptNumberElementFr, itNumberElementFr, deNumberElementFr, esNumberElementFr, huNumberElementFr, },
  {enNumberElementGa, frNumberElementGa, nlNumberElementGa, ptNumberElementGa, itNumberElementGa, deNumberElementGa, esNumberElementGa, huNumberElementGa, },
  {enNumberElementGd, frNumberElementGd, nlNumberElementGd, ptNumberElementGd, itNumberElementGd, deNumberElementGd, esNumberElementGd, huNumberElementGd, },
  {enNumberElementGe, frNumberElementGe, nlNumberElementGe, ptNumberElementGe, itNumberElementGe, deNumberElementGe, esNumberElementGe, huNumberElementGe, },
  {enNumberElementH, frNumberElementH, nlNumberElementH, ptNumberElementH, itNumberElementH, deNumberElementH, esNumberElementH, huNumberElementH, },
  {enNumberElementHe, frNumberElementHe, nlNumberElementHe, ptNumberElementHe, itNumberElementHe, deNumberElementHe, esNumberElementHe, huNumberElementHe, },
  {enNumberElementHf, frNumberElementHf, nlNumberElementHf, ptNumberElementHf, itNumberElementHf, deNumberElementHf, esNumberElementHf, huNumberElementHf, },
  {enNumberElementHg, frNumberElementHg, nlNumberElementHg, ptNumberElementHg, itNumberElementHg, deNumberElementHg, esNumberElementHg, huNumberElementHg, },
  {enNumberElementHo, frNumberElementHo, nlNumberElementHo, ptNumberElementHo, itNumberElementHo, deNumberElementHo, esNumberElementHo, huNumberElementHo, },
  {enNumberElementHs, frNumberElementHs, nlNumberElementHs, ptNumberElementHs, itNumberElementHs, deNumberElementHs, esNumberElementHs, huNumberElementHs, },
  {enNumberElementI, frNumberElementI, nlNumberElementI, ptNumberElementI, itNumberElementI, deNumberElementI, esNumberElementI, huNumberElementI, },
  {enNumberElementIn, frNumberElementIn, nlNumberElementIn, ptNumberElementIn, itNumberElementIn, deNumberElementIn, esNumberElementIn, huNumberElementIn, },
  {enNumberElementIr, frNumberElementIr, nlNumberElementIr, ptNumberElementIr, itNumberElementIr, deNumberElementIr, esNumberElementIr, huNumberElementIr, },
  {enNumberElementK, frNumberElementK, nlNumberElementK, ptNumberElementK, itNumberElementK, deNumberElementK, esNumberElementK, huNumberElementK, },
  {enNumberElementKr, frNumberElementKr, nlNumberElementKr, ptNumberElementKr, itNumberElementKr, deNumberElementKr, esNumberElementKr, huNumberElementKr, },
  {enNumberElementLa, frNumberElementLa, nlNumberElementLa, ptNumberElementLa, itNumberElementLa, deNumberElementLa, esNumberElementLa, huNumberElementLa, },
  {enNumberElementLi, frNumberElementLi, nlNumberElementLi, ptNumberElementLi, itNumberElementLi, deNumberElementLi, esNumberElementLi, huNumberElementLi, },
  {enNumberElementLr, frNumberElementLr, nlNumberElementLr, ptNumberElementLr, itNumberElementLr, deNumberElementLr, esNumberElementLr, huNumberElementLr, },
  {enNumberElementLu, frNumberElementLu, nlNumberElementLu, ptNumberElementLu, itNumberElementLu, deNumberElementLu, esNumberElementLu, huNumberElementLu, },
  {enNumberElementLv, frNumberElementLv, nlNumberElementLv, ptNumberElementLv, itNumberElementLv, deNumberElementLv, esNumberElementLv, huNumberElementLv, },
  {enNumberElementMc, frNumberElementMc, nlNumberElementMc, ptNumberElementMc, itNumberElementMc, deNumberElementMc, esNumberElementMc, huNumberElementMc, },
  {enNumberElementMd, frNumberElementMd, nlNumberElementMd, ptNumberElementMd, itNumberElementMd, deNumberElementMd, esNumberElementMd, huNumberElementMd, },
  {enNumberElementMg, frNumberElementMg, nlNumberElementMg, ptNumberElementMg, itNumberElementMg, deNumberElementMg, esNumberElementMg, huNumberElementMg, },
  {enNumberElementMn, frNumberElementMn, nlNumberElementMn, ptNumberElementMn, itNumberElementMn, deNumberElementMn, esNumberElementMn, huNumberElementMn, },
  {enNumberElementMo, frNumberElementMo, nlNumberElementMo, ptNumberElementMo, itNumberElementMo, deNumberElementMo, esNumberElementMo, huNumberElementMo, },
  {enNumberElementMt, frNumberElementMt, nlNumberElementMt, ptNumberElementMt, itNumberElementMt, deNumberElementMt, esNumberElementMt, huNumberElementMt, },
  {enNumberElementN, frNumberElementN, nlNumberElementN, ptNumberElementN, itNumberElementN, deNumberElementN, esNumberElementN, huNumberElementN, },
  {enNumberElementNa, frNumberElementNa, nlNumberElementNa, ptNumberElementNa, itNumberElementNa, deNumberElementNa, esNumberElementNa, huNumberElementNa, },
  {enNumberElementNb, frNumberElementNb, nlNumberElementNb, ptNumberElementNb, itNumberElementNb, deNumberElementNb, esNumberElementNb, huNumberElementNb, },
  {enNumberElementNd, frNumberElementNd, nlNumberElementNd, ptNumberElementNd, itNumberElementNd, deNumberElementNd, esNumberElementNd, huNumberElementNd, },
  {enNumberElementNe, frNumberElementNe, nlNumberElementNe, ptNumberElementNe, itNumberElementNe, deNumberElementNe, esNumberElementNe, huNumberElementNe, },
  {enNumberElementNh, frNumberElementNh, nlNumberElementNh, ptNumberElementNh, itNumberElementNh, deNumberElementNh, esNumberElementNh, huNumberElementNh, },
  {enNumberElementNi, frNumberElementNi, nlNumberElementNi, ptNumberElementNi, itNumberElementNi, deNumberElementNi, esNumberElementNi, huNumberElementNi, },
  {enNumberElementNo, frNumberElementNo, nlNumberElementNo, ptNumberElementNo, itNumberElementNo, deNumberElementNo, esNumberElementNo, huNumberElementNo, },
  {enNumberElementNp, frNumberElementNp, nlNumberElementNp, ptNumberElementNp, itNumberElementNp, deNumberElementNp, esNumberElementNp, huNumberElementNp, },
  {enNumberElementO, frNumberElementO, nlNumberElementO, ptNumberElementO, itNumberElementO, deNumberElementO, esNumberElementO, huNumberElementO, },
  {enNumberElementOg, frNumberElementOg, nlNumberElementOg, ptNumberElementOg, itNumberElementOg, deNumberElementOg, esNumberElementOg, huNumberElementOg, },
  {enNumberElementOs, frNumberElementOs, nlNumberElementOs, ptNumberElementOs, itNumberElementOs, deNumberElementOs, esNumberElementOs, huNumberElementOs, },
  {enNumberElementP, frNumberElementP, nlNumberElementP, ptNumberElementP, itNumberElementP, deNumberElementP, esNumberElementP, huNumberElementP, },
  {enNumberElementPa, frNumberElementPa, nlNumberElementPa, ptNumberElementPa, itNumberElementPa, deNumberElementPa, esNumberElementPa, huNumberElementPa, },
  {enNumberElementPb, frNumberElementPb, nlNumberElementPb, ptNumberElementPb, itNumberElementPb, deNumberElementPb, esNumberElementPb, huNumberElementPb, },
  {enNumberElementPd, frNumberElementPd, nlNumberElementPd, ptNumberElementPd, itNumberElementPd, deNumberElementPd, esNumberElementPd, huNumberElementPd, },
  {enNumberElementPm, frNumberElementPm, nlNumberElementPm, ptNumberElementPm, itNumberElementPm, deNumberElementPm, esNumberElementPm, huNumberElementPm, },
  {enNumberElementPo, frNumberElementPo, nlNumberElementPo, ptNumberElementPo, itNumberElementPo, deNumberElementPo, esNumberElementPo, huNumberElementPo, },
  {enNumberElementPr, frNumberElementPr, nlNumberElementPr, ptNumberElementPr, itNumberElementPr, deNumberElementPr, esNumberElementPr, huNumberElementPr, },
  {enNumberElementPt, frNumberElementPt, nlNumberElementPt, ptNumberElementPt, itNumberElementPt, deNumberElementPt, esNumberElementPt, huNumberElementPt, },
  {enNumberElementPu, frNumberElementPu, nlNumberElementPu, ptNumberElementPu, itNumberElementPu, deNumberElementPu, esNumberElementPu, huNumberElementPu, },
  {enNumberElementRa, frNumberElementRa, nlNumberElementRa, ptNumberElementRa, itNumberElementRa, deNumberElementRa, esNumberElementRa, huNumberElementRa, },
  {enNumberElementRb, frNumberElementRb, nlNumberElementRb, ptNumberElementRb, itNumberElementRb, deNumberElementRb, esNumberElementRb, huNumberElementRb, },
  {enNumberElementRe, frNumberElementRe, nlNumberElementRe, ptNumberElementRe, itNumberElementRe, deNumberElementRe, esNumberElementRe, huNumberElementRe, },
  {enNumberElementRf, frNumberElementRf, nlNumberElementRf, ptNumberElementRf, itNumberElementRf, deNumberElementRf, esNumberElementRf, huNumberElementRf, },
  {enNumberElementRg, frNumberElementRg, nlNumberElementRg, ptNumberElementRg, itNumberElementRg, deNumberElementRg, esNumberElementRg, huNumberElementRg, },
  {enNumberElementRh, frNumberElementRh, nlNumberElementRh, ptNumberElementRh, itNumberElementRh, deNumberElementRh, esNumberElementRh, huNumberElementRh, },
  {enNumberElementRn, frNumberElementRn, nlNumberElementRn, ptNumberElementRn, itNumberElementRn, deNumberElementRn, esNumberElementRn, huNumberElementRn, },
  {enNumberElementRu, frNumberElementRu, nlNumberElementRu, ptNumberElementRu, itNumberElementRu, deNumberElementRu, esNumberElementRu, huNumberElementRu, },
  {enNumberElementS, frNumberElementS, nlNumberElementS, ptNumberElementS, itNumberElementS, deNumberElementS, esNumberElementS, huNumberElementS, },
  {enNumberElementSb, frNumberElementSb, nlNumberElementSb, ptNumberElementSb, itNumberElementSb, deNumberElementSb, esNumberElementSb, huNumberElementSb, },
  {enNumberElementSc, frNumberElementSc, nlNumberElementSc, ptNumberElementSc, itNumberElementSc, deNumberElementSc, esNumberElementSc, huNumberElementSc, },
  {enNumberElementSe, frNumberElementSe, nlNumberElementSe, ptNumberElementSe, itNumberElementSe, deNumberElementSe, esNumberElementSe, huNumberElementSe, },
  {enNumberElementSg, frNumberElementSg, nlNumberElementSg, ptNumberElementSg, itNumberElementSg, deNumberElementSg, esNumberElementSg, huNumberElementSg, },
  {enNumberElementSi, frNumberElementSi, nlNumberElementSi, ptNumberElementSi, itNumberElementSi, deNumberElementSi, esNumberElementSi, huNumberElementSi, },
  {enNumberElementSm, frNumberElementSm, nlNumberElementSm, ptNumberElementSm, itNumberElementSm, deNumberElementSm, esNumberElementSm, huNumberElementSm, },
  {enNumberElementSn, frNumberElementSn, nlNumberElementSn, ptNumberElementSn, itNumberElementSn, deNumberElementSn, esNumberElementSn, huNumberElementSn, },
  {enNumberElementSr, frNumberElementSr, nlNumberElementSr, ptNumberElementSr, itNumberElementSr, deNumberElementSr, esNumberElementSr, huNumberElementSr, },
  {enNumberElementTa, frNumberElementTa, nlNumberElementTa, ptNumberElementTa, itNumberElementTa, deNumberElementTa, esNumberElementTa, huNumberElementTa, },
  {enNumberElementTb, frNumberElementTb, nlNumberElementTb, ptNumberElementTb, itNumberElementTb, deNumberElementTb, esNumberElementTb, huNumberElementTb, },
  {enNumberElementTc, frNumberElementTc, nlNumberElementTc, ptNumberElementTc, itNumberElementTc, deNumberElementTc, esNumberElementTc, huNumberElementTc, },
  {enNumberElementTe, frNumberElementTe, nlNumberElementTe, ptNumberElementTe, itNumberElementTe, deNumberElementTe, esNumberElementTe, huNumberElementTe, },
  {enNumberElementTh, frNumberElementTh, nlNumberElementTh, ptNumberElementTh, itNumberElementTh, deNumberElementTh, esNumberElementTh, huNumberElementTh, },
  {enNumberElementTi, frNumberElementTi, nlNumberElementTi, ptNumberElementTi, itNumberElementTi, deNumberElementTi, esNumberElementTi, huNumberElementTi, },
  {enNumberElementTl, frNumberElementTl, nlNumberElementTl, ptNumberElementTl, itNumberElementTl, deNumberElementTl, esNumberElementTl, huNumberElementTl, },
  {enNumberElementTm, frNumberElementTm, nlNumberElementTm, ptNumberElementTm, itNumberElementTm, deNumberElementTm, esNumberElementTm, huNumberElementTm, },
  {enNumberElementTs, frNumberElementTs, nlNumberElementTs, ptNumberElementTs, itNumberElementTs, deNumberElementTs, esNumberElementTs, huNumberElementTs, },
  {enNumberElementU, frNumberElementU, nlNumberElementU, ptNumberElementU, itNumberElementU, deNumberElementU, esNumberElementU, huNumberElementU, },
  {enNumberElementUbn, frNumberElementUbn, nlNumberElementUbn, ptNumberElementUbn, itNumberElementUbn, deNumberElementUbn, esNumberElementUbn, huNumberElementUbn, },
  {enNumberElementUue, frNumberElementUue, nlNumberElementUue, ptNumberElementUue, itNumberElementUue, deNumberElementUue, esNumberElementUue, huNumberElementUue, },
  {enNumberElementV, frNumberElementV, nlNumberElementV, ptNumberElementV, itNumberElementV, deNumberElementV, esNumberElementV, huNumberElementV, },
  {enNumberElementW, frNumberElementW, nlNumberElementW, ptNumberElementW, itNumberElementW, deNumberElementW, esNumberElementW, huNumberElementW, },
  {enNumberElementXe, frNumberElementXe, nlNumberElementXe, ptNumberElementXe, itNumberElementXe, deNumberElementXe, esNumberElementXe, huNumberElementXe, },
  {enNumberElementY, frNumberElementY, nlNumberElementY, ptNumberElementY, itNumberElementY, deNumberElementY, esNumberElementY, huNumberElementY, },
  {enNumberElementYb, frNumberElementYb, nlNumberElementYb, ptNumberElementYb, itNumberElementYb, deNumberElementYb, esNumberElementYb, huNumberElementYb, },
  {enNumberElementZn, frNumberElementZn, nlNumberElementZn, ptNumberElementZn, itNumberElementZn, deNumberElementZn, esNumberElementZn, huNumberElementZn, },
  {enNumberElementZr, frNumberElementZr, nlNumberElementZr, ptNumberElementZr, itNumberElementZr, deNumberElementZr, esNumberElementZr, huNumberElementZr, },
  {enNumberOfDots, frNumberOfDots, nlNumberOfDots, ptNumberOfDots, itNumberOfDots, deNumberOfDots, esNumberOfDots, huNumberOfDots, },
  {enOk, frOk, nlOk, ptOk, itOk, deOk, esOk, huOk, },
  {enOmegaVersion, frOmegaVersion, nlOmegaVersion, ptOmegaVersion, itOmegaVersion, deOmegaVersion, esOmegaVersion, huOmegaVersion, },
  {enOnlyFirstSolutionsDisplayed0, frOnlyFirstSolutionsDisplayed0, nlOnlyFirstSolutionsDisplayed0, ptOnlyFirstSolutionsDisplayed0, itOnlyFirstSolutionsDisplayed0, deOnlyFirstSolutionsDisplayed0, esOnlyFirstSolutionsDisplayed0, huOnlyFirstSolutionsDisplayed0, },
  {enOnlyFirstSolutionsDisplayed1, frOnlyFirstSolutionsDisplayed1, nlOnlyFirstSolutionsDisplayed1, ptOnlyFirstSolutionsDisplayed1, itOnlyFirstSolutionsDisplayed1, deOnlyFirstSolutionsDisplayed1, esOnlyFirstSolutionsDisplayed1, huOnlyFirstSolutionsDisplayed1, },
  {enOnlyRoot, frOnlyRoot, nlOnlyRoot, ptOnlyRoot, itOnlyRoot, deOnlyRoot, esOnlyRoot, huOnlyRoot, },
  {enOr, frOr, nlOr, ptOr, itOr, deOr, esOr, huOr, },
  {enOrthonormal, frOrthonormal, nlOrthonormal, ptOrthonormal, itOrthonormal, deOrthonormal, esOrthonormal, huOrthonormal, },
  {enParametricType, frParametricType, nlParametricType, ptParametricType, itParametricType, deParametricType, esParametricType, huParametricType, },
  {enParticleMass, frParticleMass, nlParticleMass, ptParticleMass, itParticleMass, deParticleMass, esParticleMass, huParticleMass, },
  {enPermutation, frPermutation, nlPermutation, ptPermutation, itPermutation, dePermutation, esPermutation, huPermutation, },
  {enPhysics, frPhysics, nlPhysics, ptPhysics, itPhysics, dePhysics, esPhysics, huPhysics, },
  {enPlanckChargeTag, frPlanckChargeTag, nlPlanckChargeTag, ptPlanckChargeTag, itPlanckChargeTag, dePlanckChargeTag, esPlanckChargeTag, huPlanckChargeTag, },
  {enPlanckCurrentTag, frPlanckCurrentTag, nlPlanckCurrentTag, ptPlanckCurrentTag, itPlanckCurrentTag, dePlanckCurrentTag, esPlanckCurrentTag, huPlanckCurrentTag, },
  {enPlanckDensityTag, frPlanckDensityTag, nlPlanckDensityTag, ptPlanckDensityTag, itPlanckDensityTag, dePlanckDensityTag, esPlanckDensityTag, huPlanckDensityTag, },
  {enPlanckEnergyTag, frPlanckEnergyTag, nlPlanckEnergyTag, ptPlanckEnergyTag, itPlanckEnergyTag, dePlanckEnergyTag, esPlanckEnergyTag, huPlanckEnergyTag, },
  {enPlanckForceTag, frPlanckForceTag, nlPlanckForceTag, ptPlanckForceTag, itPlanckForceTag, dePlanckForceTag, esPlanckForceTag, huPlanckForceTag, },
  {enPlanckImpedanceTag, frPlanckImpedanceTag, nlPlanckImpedanceTag, ptPlanckImpedanceTag, itPlanckImpedanceTag, dePlanckImpedanceTag, esPlanckImpedanceTag, huPlanckImpedanceTag, },
  {enPlanckLengthTag, frPlanckLengthTag, nlPlanckLengthTag, ptPlanckLengthTag, itPlanckLengthTag, dePlanckLengthTag, esPlanckLengthTag, huPlanckLengthTag, },
  {enPlanckLinearMassTag, frPlanckLinearMassTag, nlPlanckLinearMassTag, ptPlanckLinearMassTag, itPlanckLinearMassTag, dePlanckLinearMassTag, esPlanckLinearMassTag, huPlanckLinearMassTag, },
  {enPlanckMassTag, frPlanckMassTag, nlPlanckMassTag, ptPlanckMassTag, itPlanckMassTag, dePlanckMassTag, esPlanckMassTag, huPlanckMassTag, },
  {enPlanckPowerTag, frPlanckPowerTag, nlPlanckPowerTag, ptPlanckPowerTag, itPlanckPowerTag, dePlanckPowerTag, esPlanckPowerTag, huPlanckPowerTag, },
  {enPlanckPressureTag, frPlanckPressureTag, nlPlanckPressureTag, ptPlanckPressureTag, itPlanckPressureTag, dePlanckPressureTag, esPlanckPressureTag, huPlanckPressureTag, },
  {enPlanckQuantityMovementTag, frPlanckQuantityMovementTag, nlPlanckQuantityMovementTag, ptPlanckQuantityMovementTag, itPlanckQuantityMovementTag, dePlanckQuantityMovementTag, esPlanckQuantityMovementTag, huPlanckQuantityMovementTag, },
  {enPlanckReduceTag, frPlanckReduceTag, nlPlanckReduceTag, ptPlanckReduceTag, itPlanckReduceTag, dePlanckReduceTag, esPlanckReduceTag, huPlanckReduceTag, },
  {enPlanckTag, frPlanckTag, nlPlanckTag, ptPlanckTag, itPlanckTag, dePlanckTag, esPlanckTag, huPlanckTag, },
  {enPlanckTemperatureTag, frPlanckTemperatureTag, nlPlanckTemperatureTag, ptPlanckTemperatureTag, itPlanckTemperatureTag, dePlanckTemperatureTag, esPlanckTemperatureTag, huPlanckTemperatureTag, },
  {enPlanckTensionTag, frPlanckTensionTag, nlPlanckTensionTag, ptPlanckTensionTag, itPlanckTensionTag, dePlanckTensionTag, esPlanckTensionTag, huPlanckTensionTag, },
  {enPlanckTimeTag, frPlanckTimeTag, nlPlanckTimeTag, ptPlanckTimeTag, itPlanckTimeTag, dePlanckTimeTag, esPlanckTimeTag, huPlanckTimeTag, },
  {enPlanckUnitsTag, frPlanckUnitsTag, nlPlanckUnitsTag, ptPlanckUnitsTag, itPlanckUnitsTag, dePlanckUnitsTag, esPlanckUnitsTag, huPlanckUnitsTag, },
  {enPlatinum, frPlatinum, nlPlatinum, ptPlatinum, itPlatinum, dePlatinum, esPlatinum, huPlatinum, },
  {enPlot, frPlot, nlPlot, ptPlot, itPlot, dePlot, esPlot, huPlot, },
  {enPlotOptions, frPlotOptions, nlPlotOptions, ptPlotOptions, itPlotOptions, dePlotOptions, esPlotOptions, huPlotOptions, },
  {enPoissonDistribution, frPoissonDistribution, nlPoissonDistribution, ptPoissonDistribution, itPoissonDistribution, dePoissonDistribution, esPoissonDistribution, huPoissonDistribution, },
  {enPolar, frPolar, nlPolar, ptPolar, itPolar, dePolar, esPolar, huPolar, },
  {enPolarType, frPolarType, nlPolarType, ptPolarType, itPolarType, dePolarType, esPolarType, huPolarType, },
  {enPolynomeHasNoRealSolution0, frPolynomeHasNoRealSolution0, nlPolynomeHasNoRealSolution0, ptPolynomeHasNoRealSolution0, itPolynomeHasNoRealSolution0, dePolynomeHasNoRealSolution0, esPolynomeHasNoRealSolution0, huPolynomeHasNoRealSolution0, },
  {enPolynomeHasNoRealSolution1, frPolynomeHasNoRealSolution1, nlPolynomeHasNoRealSolution1, ptPolynomeHasNoRealSolution1, itPolynomeHasNoRealSolution1, dePolynomeHasNoRealSolution1, esPolynomeHasNoRealSolution1, huPolynomeHasNoRealSolution1, },
  {enPoolMemoryFull1, frPoolMemoryFull1, nlPoolMemoryFull1, ptPoolMemoryFull1, itPoolMemoryFull1, dePoolMemoryFull1, esPoolMemoryFull1, huPoolMemoryFull1, },
  {enPoolMemoryFull2, frPoolMemoryFull2, nlPoolMemoryFull2, ptPoolMemoryFull2, itPoolMemoryFull2, dePoolMemoryFull2, esPoolMemoryFull2, huPoolMemoryFull2, },
  {enPower, frPower, nlPower, ptPower, itPower, dePower, esPower, huPower, },
  {enPowerDimension, frPowerDimension, nlPowerDimension, ptPowerDimension, itPowerDimension, dePowerDimension, esPowerDimension, huPowerDimension, },
  {enPredefinedVariablesIgnoredLeft, frPredefinedVariablesIgnoredLeft, nlPredefinedVariablesIgnoredLeft, ptPredefinedVariablesIgnoredLeft, itPredefinedVariablesIgnoredLeft, dePredefinedVariablesIgnoredLeft, esPredefinedVariablesIgnoredLeft, huPredefinedVariablesIgnoredLeft, },
  {enPredefinedVariablesIgnoredRight, frPredefinedVariablesIgnoredRight, nlPredefinedVariablesIgnoredRight, ptPredefinedVariablesIgnoredRight, itPredefinedVariablesIgnoredRight, dePredefinedVariablesIgnoredRight, esPredefinedVariablesIgnoredRight, huPredefinedVariablesIgnoredRight, },
  {enPredefinedVariablesUsedLeft, frPredefinedVariablesUsedLeft, nlPredefinedVariablesUsedLeft, ptPredefinedVariablesUsedLeft, itPredefinedVariablesUsedLeft, dePredefinedVariablesUsedLeft, esPredefinedVariablesUsedLeft, huPredefinedVariablesUsedLeft, },
  {enPredefinedVariablesUsedRight, frPredefinedVariablesUsedRight, nlPredefinedVariablesUsedRight, ptPredefinedVariablesUsedRight, itPredefinedVariablesUsedRight, dePredefinedVariablesUsedRight, esPredefinedVariablesUsedRight, huPredefinedVariablesUsedRight, },
  {enPrediction, frPrediction, nlPrediction, ptPrediction, itPrediction, dePrediction, esPrediction, huPrediction, },
  {enPrediction95, frPrediction95, nlPrediction95, ptPrediction95, itPrediction95, dePrediction95, esPrediction95, huPrediction95, },
  {enPreimage, frPreimage, nlPreimage, ptPreimage, itPreimage, dePreimage, esPreimage, huPreimage, },
  {enPressAKey, frPressAKey, nlPressAKey, ptPressAKey, itPressAKey, dePressAKey, esPressAKey, huPressAKey, },
  {enPressureDimension, frPressureDimension, nlPressureDimension, ptPressureDimension, itPressureDimension, dePressureDimension, esPressureDimension, huPressureDimension, },
  {enPrimeFactorDecomposition, frPrimeFactorDecomposition, nlPrimeFactorDecomposition, ptPrimeFactorDecomposition, itPrimeFactorDecomposition, dePrimeFactorDecomposition, esPrimeFactorDecomposition, huPrimeFactorDecomposition, },
  {enPrimeFactors, frPrimeFactors, nlPrimeFactors, ptPrimeFactors, itPrimeFactors, dePrimeFactors, esPrimeFactors, huPrimeFactors, },
  {enProbaApp, frProbaApp, nlProbaApp, ptProbaApp, itProbaApp, deProbaApp, esProbaApp, huProbaApp, },
  {enProbaAppCapital, frProbaAppCapital, nlProbaAppCapital, ptProbaAppCapital, itProbaAppCapital, deProbaAppCapital, esProbaAppCapital, huProbaAppCapital, },
  {enProbability, frProbability, nlProbability, ptProbability, itProbability, deProbability, esProbability, huProbability, },
  {enProduct, frProduct, nlProduct, ptProduct, itProduct, deProduct, esProduct, huProduct, },
  {enProportional, frProportional, nlProportional, ptProportional, itProportional, deProportional, esProportional, huProportional, },
  {enProtonMassTag, frProtonMassTag, nlProtonMassTag, ptProtonMassTag, itProtonMassTag, deProtonMassTag, esProtonMassTag, huProtonMassTag, },
  {enPython1J, frPython1J, nlPython1J, ptPython1J, itPython1J, dePython1J, esPython1J, huPython1J, },
  {enPythonAbs, frPythonAbs, nlPythonAbs, ptPythonAbs, itPythonAbs, dePythonAbs, esPythonAbs, huPythonAbs, },
  {enPythonAcos, frPythonAcos, nlPythonAcos, ptPythonAcos, itPythonAcos, dePythonAcos, esPythonAcos, huPythonAcos, },
  {enPythonAcosh, frPythonAcosh, nlPythonAcosh, ptPythonAcosh, itPythonAcosh, dePythonAcosh, esPythonAcosh, huPythonAcosh, },
  {enPythonAmpersand, frPythonAmpersand, nlPythonAmpersand, ptPythonAmpersand, itPythonAmpersand, dePythonAmpersand, esPythonAmpersand, huPythonAmpersand, },
  {enPythonAppend, frPythonAppend, nlPythonAppend, ptPythonAppend, itPythonAppend, dePythonAppend, esPythonAppend, huPythonAppend, },
  {enPythonArrow, frPythonArrow, nlPythonArrow, ptPythonArrow, itPythonArrow, dePythonArrow, esPythonArrow, huPythonArrow, },
  {enPythonAsin, frPythonAsin, nlPythonAsin, ptPythonAsin, itPythonAsin, dePythonAsin, esPythonAsin, huPythonAsin, },
  {enPythonAsinh, frPythonAsinh, nlPythonAsinh, ptPythonAsinh, itPythonAsinh, dePythonAsinh, esPythonAsinh, huPythonAsinh, },
  {enPythonAtan, frPythonAtan, nlPythonAtan, ptPythonAtan, itPythonAtan, dePythonAtan, esPythonAtan, huPythonAtan, },
  {enPythonAtan2, frPythonAtan2, nlPythonAtan2, ptPythonAtan2, itPythonAtan2, dePythonAtan2, esPythonAtan2, huPythonAtan2, },
  {enPythonAtanh, frPythonAtanh, nlPythonAtanh, ptPythonAtanh, itPythonAtanh, dePythonAtanh, esPythonAtanh, huPythonAtanh, },
  {enPythonAxis, frPythonAxis, nlPythonAxis, ptPythonAxis, itPythonAxis, dePythonAxis, esPythonAxis, huPythonAxis, },
  {enPythonBar, frPythonBar, nlPythonBar, ptPythonBar, itPythonBar, dePythonBar, esPythonBar, huPythonBar, },
  {enPythonBattery, frPythonBattery, nlPythonBattery, ptPythonBattery, itPythonBattery, dePythonBattery, esPythonBattery, huPythonBattery, },
  {enPythonBatteryIscharging, frPythonBatteryIscharging, nlPythonBatteryIscharging, ptPythonBatteryIscharging, itPythonBatteryIscharging, dePythonBatteryIscharging, esPythonBatteryIscharging, huPythonBatteryIscharging, },
  {enPythonBatteryLevel, frPythonBatteryLevel, nlPythonBatteryLevel, ptPythonBatteryLevel, itPythonBatteryLevel, dePythonBatteryLevel, esPythonBatteryLevel, huPythonBatteryLevel, },
  {enPythonBin, frPythonBin, nlPythonBin, ptPythonBin, itPythonBin, dePythonBin, esPythonBin, huPythonBin, },
  {enPythonCeil, frPythonCeil, nlPythonCeil, ptPythonCeil, itPythonCeil, dePythonCeil, esPythonCeil, huPythonCeil, },
  {enPythonChoice, frPythonChoice, nlPythonChoice, ptPythonChoice, itPythonChoice, dePythonChoice, esPythonChoice, huPythonChoice, },
  {enPythonClear, frPythonClear, nlPythonClear, ptPythonClear, itPythonClear, dePythonClear, esPythonClear, huPythonClear, },
  {enPythonCmathFunction, frPythonCmathFunction, nlPythonCmathFunction, ptPythonCmathFunction, itPythonCmathFunction, dePythonCmathFunction, esPythonCmathFunction, huPythonCmathFunction, },
  {enPythonColor, frPythonColor, nlPythonColor, ptPythonColor, itPythonColor, dePythonColor, esPythonColor, huPythonColor, },
  {enPythonColorBlack, frPythonColorBlack, nlPythonColorBlack, ptPythonColorBlack, itPythonColorBlack, dePythonColorBlack, esPythonColorBlack, huPythonColorBlack, },
  {enPythonColorBlue, frPythonColorBlue, nlPythonColorBlue, ptPythonColorBlue, itPythonColorBlue, dePythonColorBlue, esPythonColorBlue, huPythonColorBlue, },
  {enPythonColorBrown, frPythonColorBrown, nlPythonColorBrown, ptPythonColorBrown, itPythonColorBrown, dePythonColorBrown, esPythonColorBrown, huPythonColorBrown, },
  {enPythonColorGray, frPythonColorGray, nlPythonColorGray, ptPythonColorGray, itPythonColorGray, dePythonColorGray, esPythonColorGray, huPythonColorGray, },
  {enPythonColorGreen, frPythonColorGreen, nlPythonColorGreen, ptPythonColorGreen, itPythonColorGreen, dePythonColorGreen, esPythonColorGreen, huPythonColorGreen, },
  {enPythonColorOrange, frPythonColorOrange, nlPythonColorOrange, ptPythonColorOrange, itPythonColorOrange, dePythonColorOrange, esPythonColorOrange, huPythonColorOrange, },
  {enPythonColorPink, frPythonColorPink, nlPythonColorPink, ptPythonColorPink, itPythonColorPink, dePythonColorPink, esPythonColorPink, huPythonColorPink, },
  {enPythonColorPurple, frPythonColorPurple, nlPythonColorPurple, ptPythonColorPurple, itPythonColorPurple, dePythonColorPurple, esPythonColorPurple, huPythonColorPurple, },
  {enPythonColorRed, frPythonColorRed, nlPythonColorRed, ptPythonColorRed, itPythonColorRed, dePythonColorRed, esPythonColorRed, huPythonColorRed, },
  {enPythonColorWhite, frPythonColorWhite, nlPythonColorWhite, ptPythonColorWhite, itPythonColorWhite, dePythonColorWhite, esPythonColorWhite, huPythonColorWhite, },
  {enPythonColorYellow, frPythonColorYellow, nlPythonColorYellow, ptPythonColorYellow, itPythonColorYellow, dePythonColorYellow, esPythonColorYellow, huPythonColorYellow, },
  {enPythonComplex, frPythonComplex, nlPythonComplex, ptPythonComplex, itPythonComplex, dePythonComplex, esPythonComplex, huPythonComplex, },
  {enPythonCopySign, frPythonCopySign, nlPythonCopySign, ptPythonCopySign, itPythonCopySign, dePythonCopySign, esPythonCopySign, huPythonCopySign, },
  {enPythonCos, frPythonCos, nlPythonCos, ptPythonCos, itPythonCos, dePythonCos, esPythonCos, huPythonCos, },
  {enPythonCosh, frPythonCosh, nlPythonCosh, ptPythonCosh, itPythonCosh, dePythonCosh, esPythonCosh, huPythonCosh, },
  {enPythonCount, frPythonCount, nlPythonCount, ptPythonCount, itPythonCount, dePythonCount, esPythonCount, huPythonCount, },
  {enPythonDegrees, frPythonDegrees, nlPythonDegrees, ptPythonDegrees, itPythonDegrees, dePythonDegrees, esPythonDegrees, huPythonDegrees, },
  {enPythonDivMod, frPythonDivMod, nlPythonDivMod, ptPythonDivMod, itPythonDivMod, dePythonDivMod, esPythonDivMod, huPythonDivMod, },
  {enPythonDrawCircle, frPythonDrawCircle, nlPythonDrawCircle, ptPythonDrawCircle, itPythonDrawCircle, dePythonDrawCircle, esPythonDrawCircle, huPythonDrawCircle, },
  {enPythonDrawLine, frPythonDrawLine, nlPythonDrawLine, ptPythonDrawLine, itPythonDrawLine, dePythonDrawLine, esPythonDrawLine, huPythonDrawLine, },
  {enPythonDrawString, frPythonDrawString, nlPythonDrawString, ptPythonDrawString, itPythonDrawString, dePythonDrawString, esPythonDrawString, huPythonDrawString, },
  {enPythonErf, frPythonErf, nlPythonErf, ptPythonErf, itPythonErf, dePythonErf, esPythonErf, huPythonErf, },
  {enPythonErfc, frPythonErfc, nlPythonErfc, ptPythonErfc, itPythonErfc, dePythonErfc, esPythonErfc, huPythonErfc, },
  {enPythonEval, frPythonEval, nlPythonEval, ptPythonEval, itPythonEval, dePythonEval, esPythonEval, huPythonEval, },
  {enPythonExp, frPythonExp, nlPythonExp, ptPythonExp, itPythonExp, dePythonExp, esPythonExp, huPythonExp, },
  {enPythonExpm1, frPythonExpm1, nlPythonExpm1, ptPythonExpm1, itPythonExpm1, dePythonExpm1, esPythonExpm1, huPythonExpm1, },
  {enPythonFabs, frPythonFabs, nlPythonFabs, ptPythonFabs, itPythonFabs, dePythonFabs, esPythonFabs, huPythonFabs, },
  {enPythonFactorial, frPythonFactorial, nlPythonFactorial, ptPythonFactorial, itPythonFactorial, dePythonFactorial, esPythonFactorial, huPythonFactorial, },
  {enPythonFileClose, frPythonFileClose, nlPythonFileClose, ptPythonFileClose, itPythonFileClose, dePythonFileClose, esPythonFileClose, huPythonFileClose, },
  {enPythonFileClosed, frPythonFileClosed, nlPythonFileClosed, ptPythonFileClosed, itPythonFileClosed, dePythonFileClosed, esPythonFileClosed, huPythonFileClosed, },
  {enPythonFileMode, frPythonFileMode, nlPythonFileMode, ptPythonFileMode, itPythonFileMode, dePythonFileMode, esPythonFileMode, huPythonFileMode, },
  {enPythonFileName, frPythonFileName, nlPythonFileName, ptPythonFileName, itPythonFileName, dePythonFileName, esPythonFileName, huPythonFileName, },
  {enPythonFileOpen, frPythonFileOpen, nlPythonFileOpen, ptPythonFileOpen, itPythonFileOpen, dePythonFileOpen, esPythonFileOpen, huPythonFileOpen, },
  {enPythonFileRead, frPythonFileRead, nlPythonFileRead, ptPythonFileRead, itPythonFileRead, dePythonFileRead, esPythonFileRead, huPythonFileRead, },
  {enPythonFileReadable, frPythonFileReadable, nlPythonFileReadable, ptPythonFileReadable, itPythonFileReadable, dePythonFileReadable, esPythonFileReadable, huPythonFileReadable, },
  {enPythonFileReadline, frPythonFileReadline, nlPythonFileReadline, ptPythonFileReadline, itPythonFileReadline, dePythonFileReadline, esPythonFileReadline, huPythonFileReadline, },
  {enPythonFileReadlines, frPythonFileReadlines, nlPythonFileReadlines, ptPythonFileReadlines, itPythonFileReadlines, dePythonFileReadlines, esPythonFileReadlines, huPythonFileReadlines, },
  {enPythonFileSeek, frPythonFileSeek, nlPythonFileSeek, ptPythonFileSeek, itPythonFileSeek, dePythonFileSeek, esPythonFileSeek, huPythonFileSeek, },
  {enPythonFileSeekable, frPythonFileSeekable, nlPythonFileSeekable, ptPythonFileSeekable, itPythonFileSeekable, dePythonFileSeekable, esPythonFileSeekable, huPythonFileSeekable, },
  {enPythonFileTell, frPythonFileTell, nlPythonFileTell, ptPythonFileTell, itPythonFileTell, dePythonFileTell, esPythonFileTell, huPythonFileTell, },
  {enPythonFileTruncate, frPythonFileTruncate, nlPythonFileTruncate, ptPythonFileTruncate, itPythonFileTruncate, dePythonFileTruncate, esPythonFileTruncate, huPythonFileTruncate, },
  {enPythonFileWritable, frPythonFileWritable, nlPythonFileWritable, ptPythonFileWritable, itPythonFileWritable, dePythonFileWritable, esPythonFileWritable, huPythonFileWritable, },
  {enPythonFileWrite, frPythonFileWrite, nlPythonFileWrite, ptPythonFileWrite, itPythonFileWrite, dePythonFileWrite, esPythonFileWrite, huPythonFileWrite, },
  {enPythonFileWritelines, frPythonFileWritelines, nlPythonFileWritelines, ptPythonFileWritelines, itPythonFileWritelines, dePythonFileWritelines, esPythonFileWritelines, huPythonFileWritelines, },
  {enPythonFillCircle, frPythonFillCircle, nlPythonFillCircle, ptPythonFillCircle, itPythonFillCircle, dePythonFillCircle, esPythonFillCircle, huPythonFillCircle, },
  {enPythonFillPolygon, frPythonFillPolygon, nlPythonFillPolygon, ptPythonFillPolygon, itPythonFillPolygon, dePythonFillPolygon, esPythonFillPolygon, huPythonFillPolygon, },
  {enPythonFillRect, frPythonFillRect, nlPythonFillRect, ptPythonFillRect, itPythonFillRect, dePythonFillRect, esPythonFillRect, huPythonFillRect, },
  {enPythonFloat, frPythonFloat, nlPythonFloat, ptPythonFloat, itPythonFloat, dePythonFloat, esPythonFloat, huPythonFloat, },
  {enPythonFloor, frPythonFloor, nlPythonFloor, ptPythonFloor, itPythonFloor, dePythonFloor, esPythonFloor, huPythonFloor, },
  {enPythonFmod, frPythonFmod, nlPythonFmod, ptPythonFmod, itPythonFmod, dePythonFmod, esPythonFmod, huPythonFmod, },
  {enPythonFrExp, frPythonFrExp, nlPythonFrExp, ptPythonFrExp, itPythonFrExp, dePythonFrExp, esPythonFrExp, huPythonFrExp, },
  {enPythonGamma, frPythonGamma, nlPythonGamma, ptPythonGamma, itPythonGamma, dePythonGamma, esPythonGamma, huPythonGamma, },
  {enPythonGetBrightness, frPythonGetBrightness, nlPythonGetBrightness, ptPythonGetBrightness, itPythonGetBrightness, dePythonGetBrightness, esPythonGetBrightness, huPythonGetBrightness, },
  {enPythonGetKeys, frPythonGetKeys, nlPythonGetKeys, ptPythonGetKeys, itPythonGetKeys, dePythonGetKeys, esPythonGetKeys, huPythonGetKeys, },
  {enPythonGetPalette, frPythonGetPalette, nlPythonGetPalette, ptPythonGetPalette, itPythonGetPalette, dePythonGetPalette, esPythonGetPalette, huPythonGetPalette, },
  {enPythonGetPixel, frPythonGetPixel, nlPythonGetPixel, ptPythonGetPixel, itPythonGetPixel, dePythonGetPixel, esPythonGetPixel, huPythonGetPixel, },
  {enPythonGetrandbits, frPythonGetrandbits, nlPythonGetrandbits, ptPythonGetrandbits, itPythonGetrandbits, dePythonGetrandbits, esPythonGetrandbits, huPythonGetrandbits, },
  {enPythonGrid, frPythonGrid, nlPythonGrid, ptPythonGrid, itPythonGrid, dePythonGrid, esPythonGrid, huPythonGrid, },
  {enPythonHex, frPythonHex, nlPythonHex, ptPythonHex, itPythonHex, dePythonHex, esPythonHex, huPythonHex, },
  {enPythonHist, frPythonHist, nlPythonHist, ptPythonHist, itPythonHist, dePythonHist, esPythonHist, huPythonHist, },
  {enPythonImag, frPythonImag, nlPythonImag, ptPythonImag, itPythonImag, dePythonImag, esPythonImag, huPythonImag, },
  {enPythonImportCmath, frPythonImportCmath, nlPythonImportCmath, ptPythonImportCmath, itPythonImportCmath, dePythonImportCmath, esPythonImportCmath, huPythonImportCmath, },
  {enPythonImportIon, frPythonImportIon, nlPythonImportIon, ptPythonImportIon, itPythonImportIon, dePythonImportIon, esPythonImportIon, huPythonImportIon, },
  {enPythonImportKandinsky, frPythonImportKandinsky, nlPythonImportKandinsky, ptPythonImportKandinsky, itPythonImportKandinsky, dePythonImportKandinsky, esPythonImportKandinsky, huPythonImportKandinsky, },
  {enPythonImportMath, frPythonImportMath, nlPythonImportMath, ptPythonImportMath, itPythonImportMath, dePythonImportMath, esPythonImportMath, huPythonImportMath, },
  {enPythonImportMatplotlibPyplot, frPythonImportMatplotlibPyplot, nlPythonImportMatplotlibPyplot, ptPythonImportMatplotlibPyplot, itPythonImportMatplotlibPyplot, dePythonImportMatplotlibPyplot, esPythonImportMatplotlibPyplot, huPythonImportMatplotlibPyplot, },
  {enPythonImportNumpy, frPythonImportNumpy, nlPythonImportNumpy, ptPythonImportNumpy, itPythonImportNumpy, dePythonImportNumpy, esPythonImportNumpy, huPythonImportNumpy, },
  {enPythonImportOs, frPythonImportOs, nlPythonImportOs, ptPythonImportOs, itPythonImportOs, dePythonImportOs, esPythonImportOs, huPythonImportOs, },
  {enPythonImportRandom, frPythonImportRandom, nlPythonImportRandom, ptPythonImportRandom, itPythonImportRandom, dePythonImportRandom, esPythonImportRandom, huPythonImportRandom, },
  {enPythonImportScipy, frPythonImportScipy, nlPythonImportScipy, ptPythonImportScipy, itPythonImportScipy, dePythonImportScipy, esPythonImportScipy, huPythonImportScipy, },
  {enPythonImportSys, frPythonImportSys, nlPythonImportSys, ptPythonImportSys, itPythonImportSys, dePythonImportSys, esPythonImportSys, huPythonImportSys, },
  {enPythonImportTime, frPythonImportTime, nlPythonImportTime, ptPythonImportTime, itPythonImportTime, dePythonImportTime, esPythonImportTime, huPythonImportTime, },
  {enPythonImportTurtle, frPythonImportTurtle, nlPythonImportTurtle, ptPythonImportTurtle, itPythonImportTurtle, dePythonImportTurtle, esPythonImportTurtle, huPythonImportTurtle, },
  {enPythonImportUtils, frPythonImportUtils, nlPythonImportUtils, ptPythonImportUtils, itPythonImportUtils, dePythonImportUtils, esPythonImportUtils, huPythonImportUtils, },
  {enPythonIndex, frPythonIndex, nlPythonIndex, ptPythonIndex, itPythonIndex, dePythonIndex, esPythonIndex, huPythonIndex, },
  {enPythonInput, frPythonInput, nlPythonInput, ptPythonInput, itPythonInput, dePythonInput, esPythonInput, huPythonInput, },
  {enPythonInsert, frPythonInsert, nlPythonInsert, ptPythonInsert, itPythonInsert, dePythonInsert, esPythonInsert, huPythonInsert, },
  {enPythonInt, frPythonInt, nlPythonInt, ptPythonInt, itPythonInt, dePythonInt, esPythonInt, huPythonInt, },
  {enPythonIonFunction, frPythonIonFunction, nlPythonIonFunction, ptPythonIonFunction, itPythonIonFunction, dePythonIonFunction, esPythonIonFunction, huPythonIonFunction, },
  {enPythonIsFinite, frPythonIsFinite, nlPythonIsFinite, ptPythonIsFinite, itPythonIsFinite, dePythonIsFinite, esPythonIsFinite, huPythonIsFinite, },
  {enPythonIsInfinite, frPythonIsInfinite, nlPythonIsInfinite, ptPythonIsInfinite, itPythonIsInfinite, dePythonIsInfinite, esPythonIsInfinite, huPythonIsInfinite, },
  {enPythonIsKeyDown, frPythonIsKeyDown, nlPythonIsKeyDown, ptPythonIsKeyDown, itPythonIsKeyDown, dePythonIsKeyDown, esPythonIsKeyDown, huPythonIsKeyDown, },
  {enPythonIsNaN, frPythonIsNaN, nlPythonIsNaN, ptPythonIsNaN, itPythonIsNaN, dePythonIsNaN, esPythonIsNaN, huPythonIsNaN, },
  {enPythonKandinskyFunction, frPythonKandinskyFunction, nlPythonKandinskyFunction, ptPythonKandinskyFunction, itPythonKandinskyFunction, dePythonKandinskyFunction, esPythonKandinskyFunction, huPythonKandinskyFunction, },
  {enPythonKeyAlpha, frPythonKeyAlpha, nlPythonKeyAlpha, ptPythonKeyAlpha, itPythonKeyAlpha, dePythonKeyAlpha, esPythonKeyAlpha, huPythonKeyAlpha, },
  {enPythonKeyAns, frPythonKeyAns, nlPythonKeyAns, ptPythonKeyAns, itPythonKeyAns, dePythonKeyAns, esPythonKeyAns, huPythonKeyAns, },
  {enPythonKeyBack, frPythonKeyBack, nlPythonKeyBack, ptPythonKeyBack, itPythonKeyBack, dePythonKeyBack, esPythonKeyBack, huPythonKeyBack, },
  {enPythonKeyBackspace, frPythonKeyBackspace, nlPythonKeyBackspace, ptPythonKeyBackspace, itPythonKeyBackspace, dePythonKeyBackspace, esPythonKeyBackspace, huPythonKeyBackspace, },
  {enPythonKeyComma, frPythonKeyComma, nlPythonKeyComma, ptPythonKeyComma, itPythonKeyComma, dePythonKeyComma, esPythonKeyComma, huPythonKeyComma, },
  {enPythonKeyCosine, frPythonKeyCosine, nlPythonKeyCosine, ptPythonKeyCosine, itPythonKeyCosine, dePythonKeyCosine, esPythonKeyCosine, huPythonKeyCosine, },
  {enPythonKeyDivision, frPythonKeyDivision, nlPythonKeyDivision, ptPythonKeyDivision, itPythonKeyDivision, dePythonKeyDivision, esPythonKeyDivision, huPythonKeyDivision, },
  {enPythonKeyDot, frPythonKeyDot, nlPythonKeyDot, ptPythonKeyDot, itPythonKeyDot, dePythonKeyDot, esPythonKeyDot, huPythonKeyDot, },
  {enPythonKeyDown, frPythonKeyDown, nlPythonKeyDown, ptPythonKeyDown, itPythonKeyDown, dePythonKeyDown, esPythonKeyDown, huPythonKeyDown, },
  {enPythonKeyEe, frPythonKeyEe, nlPythonKeyEe, ptPythonKeyEe, itPythonKeyEe, dePythonKeyEe, esPythonKeyEe, huPythonKeyEe, },
  {enPythonKeyEight, frPythonKeyEight, nlPythonKeyEight, ptPythonKeyEight, itPythonKeyEight, dePythonKeyEight, esPythonKeyEight, huPythonKeyEight, },
  {enPythonKeyExe, frPythonKeyExe, nlPythonKeyExe, ptPythonKeyExe, itPythonKeyExe, dePythonKeyExe, esPythonKeyExe, huPythonKeyExe, },
  {enPythonKeyExp, frPythonKeyExp, nlPythonKeyExp, ptPythonKeyExp, itPythonKeyExp, dePythonKeyExp, esPythonKeyExp, huPythonKeyExp, },
  {enPythonKeyFive, frPythonKeyFive, nlPythonKeyFive, ptPythonKeyFive, itPythonKeyFive, dePythonKeyFive, esPythonKeyFive, huPythonKeyFive, },
  {enPythonKeyFour, frPythonKeyFour, nlPythonKeyFour, ptPythonKeyFour, itPythonKeyFour, dePythonKeyFour, esPythonKeyFour, huPythonKeyFour, },
  {enPythonKeyHome, frPythonKeyHome, nlPythonKeyHome, ptPythonKeyHome, itPythonKeyHome, dePythonKeyHome, esPythonKeyHome, huPythonKeyHome, },
  {enPythonKeyImaginary, frPythonKeyImaginary, nlPythonKeyImaginary, ptPythonKeyImaginary, itPythonKeyImaginary, dePythonKeyImaginary, esPythonKeyImaginary, huPythonKeyImaginary, },
  {enPythonKeyLeft, frPythonKeyLeft, nlPythonKeyLeft, ptPythonKeyLeft, itPythonKeyLeft, dePythonKeyLeft, esPythonKeyLeft, huPythonKeyLeft, },
  {enPythonKeyLeftParenthesis, frPythonKeyLeftParenthesis, nlPythonKeyLeftParenthesis, ptPythonKeyLeftParenthesis, itPythonKeyLeftParenthesis, dePythonKeyLeftParenthesis, esPythonKeyLeftParenthesis, huPythonKeyLeftParenthesis, },
  {enPythonKeyLn, frPythonKeyLn, nlPythonKeyLn, ptPythonKeyLn, itPythonKeyLn, dePythonKeyLn, esPythonKeyLn, huPythonKeyLn, },
  {enPythonKeyLog, frPythonKeyLog, nlPythonKeyLog, ptPythonKeyLog, itPythonKeyLog, dePythonKeyLog, esPythonKeyLog, huPythonKeyLog, },
  {enPythonKeyMinus, frPythonKeyMinus, nlPythonKeyMinus, ptPythonKeyMinus, itPythonKeyMinus, dePythonKeyMinus, esPythonKeyMinus, huPythonKeyMinus, },
  {enPythonKeyMultiplication, frPythonKeyMultiplication, nlPythonKeyMultiplication, ptPythonKeyMultiplication, itPythonKeyMultiplication, dePythonKeyMultiplication, esPythonKeyMultiplication, huPythonKeyMultiplication, },
  {enPythonKeyNine, frPythonKeyNine, nlPythonKeyNine, ptPythonKeyNine, itPythonKeyNine, dePythonKeyNine, esPythonKeyNine, huPythonKeyNine, },
  {enPythonKeyOk, frPythonKeyOk, nlPythonKeyOk, ptPythonKeyOk, itPythonKeyOk, dePythonKeyOk, esPythonKeyOk, huPythonKeyOk, },
  {enPythonKeyOnOff, frPythonKeyOnOff, nlPythonKeyOnOff, ptPythonKeyOnOff, itPythonKeyOnOff, dePythonKeyOnOff, esPythonKeyOnOff, huPythonKeyOnOff, },
  {enPythonKeyOne, frPythonKeyOne, nlPythonKeyOne, ptPythonKeyOne, itPythonKeyOne, dePythonKeyOne, esPythonKeyOne, huPythonKeyOne, },
  {enPythonKeyPi, frPythonKeyPi, nlPythonKeyPi, ptPythonKeyPi, itPythonKeyPi, dePythonKeyPi, esPythonKeyPi, huPythonKeyPi, },
  {enPythonKeyPlus, frPythonKeyPlus, nlPythonKeyPlus, ptPythonKeyPlus, itPythonKeyPlus, dePythonKeyPlus, esPythonKeyPlus, huPythonKeyPlus, },
  {enPythonKeyPower, frPythonKeyPower, nlPythonKeyPower, ptPythonKeyPower, itPythonKeyPower, dePythonKeyPower, esPythonKeyPower, huPythonKeyPower, },
  {enPythonKeyRight, frPythonKeyRight, nlPythonKeyRight, ptPythonKeyRight, itPythonKeyRight, dePythonKeyRight, esPythonKeyRight, huPythonKeyRight, },
  {enPythonKeyRightParenthesis, frPythonKeyRightParenthesis, nlPythonKeyRightParenthesis, ptPythonKeyRightParenthesis, itPythonKeyRightParenthesis, dePythonKeyRightParenthesis, esPythonKeyRightParenthesis, huPythonKeyRightParenthesis, },
  {enPythonKeySeven, frPythonKeySeven, nlPythonKeySeven, ptPythonKeySeven, itPythonKeySeven, dePythonKeySeven, esPythonKeySeven, huPythonKeySeven, },
  {enPythonKeyShift, frPythonKeyShift, nlPythonKeyShift, ptPythonKeyShift, itPythonKeyShift, dePythonKeyShift, esPythonKeyShift, huPythonKeyShift, },
  {enPythonKeySine, frPythonKeySine, nlPythonKeySine, ptPythonKeySine, itPythonKeySine, dePythonKeySine, esPythonKeySine, huPythonKeySine, },
  {enPythonKeySix, frPythonKeySix, nlPythonKeySix, ptPythonKeySix, itPythonKeySix, dePythonKeySix, esPythonKeySix, huPythonKeySix, },
  {enPythonKeySqrt, frPythonKeySqrt, nlPythonKeySqrt, ptPythonKeySqrt, itPythonKeySqrt, dePythonKeySqrt, esPythonKeySqrt, huPythonKeySqrt, },
  {enPythonKeySquare, frPythonKeySquare, nlPythonKeySquare, ptPythonKeySquare, itPythonKeySquare, dePythonKeySquare, esPythonKeySquare, huPythonKeySquare, },
  {enPythonKeyTangent, frPythonKeyTangent, nlPythonKeyTangent, ptPythonKeyTangent, itPythonKeyTangent, dePythonKeyTangent, esPythonKeyTangent, huPythonKeyTangent, },
  {enPythonKeyThree, frPythonKeyThree, nlPythonKeyThree, ptPythonKeyThree, itPythonKeyThree, dePythonKeyThree, esPythonKeyThree, huPythonKeyThree, },
  {enPythonKeyToolbox, frPythonKeyToolbox, nlPythonKeyToolbox, ptPythonKeyToolbox, itPythonKeyToolbox, dePythonKeyToolbox, esPythonKeyToolbox, huPythonKeyToolbox, },
  {enPythonKeyTwo, frPythonKeyTwo, nlPythonKeyTwo, ptPythonKeyTwo, itPythonKeyTwo, dePythonKeyTwo, esPythonKeyTwo, huPythonKeyTwo, },
  {enPythonKeyUp, frPythonKeyUp, nlPythonKeyUp, ptPythonKeyUp, itPythonKeyUp, dePythonKeyUp, esPythonKeyUp, huPythonKeyUp, },
  {enPythonKeyVar, frPythonKeyVar, nlPythonKeyVar, ptPythonKeyVar, itPythonKeyVar, dePythonKeyVar, esPythonKeyVar, huPythonKeyVar, },
  {enPythonKeyXnt, frPythonKeyXnt, nlPythonKeyXnt, ptPythonKeyXnt, itPythonKeyXnt, dePythonKeyXnt, esPythonKeyXnt, huPythonKeyXnt, },
  {enPythonKeyZero, frPythonKeyZero, nlPythonKeyZero, ptPythonKeyZero, itPythonKeyZero, dePythonKeyZero, esPythonKeyZero, huPythonKeyZero, },
  {enPythonLF, frPythonLF, nlPythonLF, ptPythonLF, itPythonLF, dePythonLF, esPythonLF, huPythonLF, },
  {enPythonLdexp, frPythonLdexp, nlPythonLdexp, ptPythonLdexp, itPythonLdexp, dePythonLdexp, esPythonLdexp, huPythonLdexp, },
  {enPythonLength, frPythonLength, nlPythonLength, ptPythonLength, itPythonLength, dePythonLength, esPythonLength, huPythonLength, },
  {enPythonLgamma, frPythonLgamma, nlPythonLgamma, ptPythonLgamma, itPythonLgamma, dePythonLgamma, esPythonLgamma, huPythonLgamma, },
  {enPythonLocalTime, frPythonLocalTime, nlPythonLocalTime, ptPythonLocalTime, itPythonLocalTime, dePythonLocalTime, esPythonLocalTime, huPythonLocalTime, },
  {enPythonLog, frPythonLog, nlPythonLog, ptPythonLog, itPythonLog, dePythonLog, esPythonLog, huPythonLog, },
  {enPythonLog10, frPythonLog10, nlPythonLog10, ptPythonLog10, itPythonLog10, dePythonLog10, esPythonLog10, huPythonLog10, },
  {enPythonLog2, frPythonLog2, nlPythonLog2, ptPythonLog2, itPythonLog2, dePythonLog2, esPythonLog2, huPythonLog2, },
  {enPythonMathFunction, frPythonMathFunction, nlPythonMathFunction, ptPythonMathFunction, itPythonMathFunction, dePythonMathFunction, esPythonMathFunction, huPythonMathFunction, },
  {enPythonMatplotlibPyplotFunction, frPythonMatplotlibPyplotFunction, nlPythonMatplotlibPyplotFunction, ptPythonMatplotlibPyplotFunction, itPythonMatplotlibPyplotFunction, dePythonMatplotlibPyplotFunction, esPythonMatplotlibPyplotFunction, huPythonMatplotlibPyplotFunction, },
  {enPythonMax, frPythonMax, nlPythonMax, ptPythonMax, itPythonMax, dePythonMax, esPythonMax, huPythonMax, },
  {enPythonMin, frPythonMin, nlPythonMin, ptPythonMin, itPythonMin, dePythonMin, esPythonMin, huPythonMin, },
  {enPythonMktime, frPythonMktime, nlPythonMktime, ptPythonMktime, itPythonMktime, dePythonMktime, esPythonMktime, huPythonMktime, },
  {enPythonModf, frPythonModf, nlPythonModf, ptPythonModf, itPythonModf, dePythonModf, esPythonModf, huPythonModf, },
  {enPythonMonotonic, frPythonMonotonic, nlPythonMonotonic, ptPythonMonotonic, itPythonMonotonic, dePythonMonotonic, esPythonMonotonic, huPythonMonotonic, },
  {enPythonNumpyFftFunction, frPythonNumpyFftFunction, nlPythonNumpyFftFunction, ptPythonNumpyFftFunction, itPythonNumpyFftFunction, dePythonNumpyFftFunction, esPythonNumpyFftFunction, huPythonNumpyFftFunction, },
  {enPythonNumpyFunction, frPythonNumpyFunction, nlPythonNumpyFunction, ptPythonNumpyFunction, itPythonNumpyFunction, dePythonNumpyFunction, esPythonNumpyFunction, huPythonNumpyFunction, },
  {enPythonNumpyLinalgFunction, frPythonNumpyLinalgFunction, nlPythonNumpyLinalgFunction, ptPythonNumpyLinalgFunction, itPythonNumpyLinalgFunction, dePythonNumpyLinalgFunction, esPythonNumpyLinalgFunction, huPythonNumpyLinalgFunction, },
  {enPythonOct, frPythonOct, nlPythonOct, ptPythonOct, itPythonOct, dePythonOct, esPythonOct, huPythonOct, },
  {enPythonOsGetlogin, frPythonOsGetlogin, nlPythonOsGetlogin, ptPythonOsGetlogin, itPythonOsGetlogin, dePythonOsGetlogin, esPythonOsGetlogin, huPythonOsGetlogin, },
  {enPythonOsListdir, frPythonOsListdir, nlPythonOsListdir, ptPythonOsListdir, itPythonOsListdir, dePythonOsListdir, esPythonOsListdir, huPythonOsListdir, },
  {enPythonOsRemove, frPythonOsRemove, nlPythonOsRemove, ptPythonOsRemove, itPythonOsRemove, dePythonOsRemove, esPythonOsRemove, huPythonOsRemove, },
  {enPythonOsRename, frPythonOsRename, nlPythonOsRename, ptPythonOsRename, itPythonOsRename, dePythonOsRename, esPythonOsRename, huPythonOsRename, },
  {enPythonOsUname, frPythonOsUname, nlPythonOsUname, ptPythonOsUname, itPythonOsUname, dePythonOsUname, esPythonOsUname, huPythonOsUname, },
  {enPythonPercent, frPythonPercent, nlPythonPercent, ptPythonPercent, itPythonPercent, dePythonPercent, esPythonPercent, huPythonPercent, },
  {enPythonPhase, frPythonPhase, nlPythonPhase, ptPythonPhase, itPythonPhase, dePythonPhase, esPythonPhase, huPythonPhase, },
  {enPythonPlot, frPythonPlot, nlPythonPlot, ptPythonPlot, itPythonPlot, dePythonPlot, esPythonPlot, huPythonPlot, },
  {enPythonPolar, frPythonPolar, nlPythonPolar, ptPythonPolar, itPythonPolar, dePythonPolar, esPythonPolar, huPythonPolar, },
  {enPythonPop, frPythonPop, nlPythonPop, ptPythonPop, itPythonPop, dePythonPop, esPythonPop, huPythonPop, },
  {enPythonPound, frPythonPound, nlPythonPound, ptPythonPound, itPythonPound, dePythonPound, esPythonPound, huPythonPound, },
  {enPythonPower, frPythonPower, nlPythonPower, ptPythonPower, itPythonPower, dePythonPower, esPythonPower, huPythonPower, },
  {enPythonPrint, frPythonPrint, nlPythonPrint, ptPythonPrint, itPythonPrint, dePythonPrint, esPythonPrint, huPythonPrint, },
  {enPythonRTCmode, frPythonRTCmode, nlPythonRTCmode, ptPythonRTCmode, itPythonRTCmode, dePythonRTCmode, esPythonRTCmode, huPythonRTCmode, },
  {enPythonRadians, frPythonRadians, nlPythonRadians, ptPythonRadians, itPythonRadians, dePythonRadians, esPythonRadians, huPythonRadians, },
  {enPythonRandint, frPythonRandint, nlPythonRandint, ptPythonRandint, itPythonRandint, dePythonRandint, esPythonRandint, huPythonRandint, },
  {enPythonRandom, frPythonRandom, nlPythonRandom, ptPythonRandom, itPythonRandom, dePythonRandom, esPythonRandom, huPythonRandom, },
  {enPythonRandomFunction, frPythonRandomFunction, nlPythonRandomFunction, ptPythonRandomFunction, itPythonRandomFunction, dePythonRandomFunction, esPythonRandomFunction, huPythonRandomFunction, },
  {enPythonRandrange, frPythonRandrange, nlPythonRandrange, ptPythonRandrange, itPythonRandrange, dePythonRandrange, esPythonRandrange, huPythonRandrange, },
  {enPythonRangeStartStop, frPythonRangeStartStop, nlPythonRangeStartStop, ptPythonRangeStartStop, itPythonRangeStartStop, dePythonRangeStartStop, esPythonRangeStartStop, huPythonRangeStartStop, },
  {enPythonRangeStop, frPythonRangeStop, nlPythonRangeStop, ptPythonRangeStop, itPythonRangeStop, dePythonRangeStop, esPythonRangeStop, huPythonRangeStop, },
  {enPythonReal, frPythonReal, nlPythonReal, ptPythonReal, itPythonReal, dePythonReal, esPythonReal, huPythonReal, },
  {enPythonRect, frPythonRect, nlPythonRect, ptPythonRect, itPythonRect, dePythonRect, esPythonRect, huPythonRect, },
  {enPythonRemove, frPythonRemove, nlPythonRemove, ptPythonRemove, itPythonRemove, dePythonRemove, esPythonRemove, huPythonRemove, },
  {enPythonReverse, frPythonReverse, nlPythonReverse, ptPythonReverse, itPythonReverse, dePythonReverse, esPythonReverse, huPythonReverse, },
  {enPythonRound, frPythonRound, nlPythonRound, ptPythonRound, itPythonRound, dePythonRound, esPythonRound, huPythonRound, },
  {enPythonScatter, frPythonScatter, nlPythonScatter, ptPythonScatter, itPythonScatter, dePythonScatter, esPythonScatter, huPythonScatter, },
  {enPythonScipyFunction, frPythonScipyFunction, nlPythonScipyFunction, ptPythonScipyFunction, itPythonScipyFunction, dePythonScipyFunction, esPythonScipyFunction, huPythonScipyFunction, },
  {enPythonScipyLinalgFunction, frPythonScipyLinalgFunction, nlPythonScipyLinalgFunction, ptPythonScipyLinalgFunction, itPythonScipyLinalgFunction, dePythonScipyLinalgFunction, esPythonScipyLinalgFunction, huPythonScipyLinalgFunction, },
  {enPythonScipyOptimizeFunction, frPythonScipyOptimizeFunction, nlPythonScipyOptimizeFunction, ptPythonScipyOptimizeFunction, itPythonScipyOptimizeFunction, dePythonScipyOptimizeFunction, esPythonScipyOptimizeFunction, huPythonScipyOptimizeFunction, },
  {enPythonScipySignalFunction, frPythonScipySignalFunction, nlPythonScipySignalFunction, ptPythonScipySignalFunction, itPythonScipySignalFunction, dePythonScipySignalFunction, esPythonScipySignalFunction, huPythonScipySignalFunction, },
  {enPythonScipySpecialFunction, frPythonScipySpecialFunction, nlPythonScipySpecialFunction, ptPythonScipySpecialFunction, itPythonScipySpecialFunction, dePythonScipySpecialFunction, esPythonScipySpecialFunction, huPythonScipySpecialFunction, },
  {enPythonSeed, frPythonSeed, nlPythonSeed, ptPythonSeed, itPythonSeed, dePythonSeed, esPythonSeed, huPythonSeed, },
  {enPythonSetBrightness, frPythonSetBrightness, nlPythonSetBrightness, ptPythonSetBrightness, itPythonSetBrightness, dePythonSetBrightness, esPythonSetBrightness, huPythonSetBrightness, },
  {enPythonSetLocaltime, frPythonSetLocaltime, nlPythonSetLocaltime, ptPythonSetLocaltime, itPythonSetLocaltime, dePythonSetLocaltime, esPythonSetLocaltime, huPythonSetLocaltime, },
  {enPythonSetPixel, frPythonSetPixel, nlPythonSetPixel, ptPythonSetPixel, itPythonSetPixel, dePythonSetPixel, esPythonSetPixel, huPythonSetPixel, },
  {enPythonSetRTCmode, frPythonSetRTCmode, nlPythonSetRTCmode, ptPythonSetRTCmode, itPythonSetRTCmode, dePythonSetRTCmode, esPythonSetRTCmode, huPythonSetRTCmode, },
  {enPythonShow, frPythonShow, nlPythonShow, ptPythonShow, itPythonShow, dePythonShow, esPythonShow, huPythonShow, },
  {enPythonSin, frPythonSin, nlPythonSin, ptPythonSin, itPythonSin, dePythonSin, esPythonSin, huPythonSin, },
  {enPythonSingleQuote, frPythonSingleQuote, nlPythonSingleQuote, ptPythonSingleQuote, itPythonSingleQuote, dePythonSingleQuote, esPythonSingleQuote, huPythonSingleQuote, },
  {enPythonSinh, frPythonSinh, nlPythonSinh, ptPythonSinh, itPythonSinh, dePythonSinh, esPythonSinh, huPythonSinh, },
  {enPythonSleep, frPythonSleep, nlPythonSleep, ptPythonSleep, itPythonSleep, dePythonSleep, esPythonSleep, huPythonSleep, },
  {enPythonSort, frPythonSort, nlPythonSort, ptPythonSort, itPythonSort, dePythonSort, esPythonSort, huPythonSort, },
  {enPythonSqrt, frPythonSqrt, nlPythonSqrt, ptPythonSqrt, itPythonSqrt, dePythonSqrt, esPythonSqrt, huPythonSqrt, },
  {enPythonSum, frPythonSum, nlPythonSum, ptPythonSum, itPythonSum, dePythonSum, esPythonSum, huPythonSum, },
  {enPythonSymbolExp, frPythonSymbolExp, nlPythonSymbolExp, ptPythonSymbolExp, itPythonSymbolExp, dePythonSymbolExp, esPythonSymbolExp, huPythonSymbolExp, },
  {enPythonSysByteorder, frPythonSysByteorder, nlPythonSysByteorder, ptPythonSysByteorder, itPythonSysByteorder, dePythonSysByteorder, esPythonSysByteorder, huPythonSysByteorder, },
  {enPythonSysExit, frPythonSysExit, nlPythonSysExit, ptPythonSysExit, itPythonSysExit, dePythonSysExit, esPythonSysExit, huPythonSysExit, },
  {enPythonSysImplementation, frPythonSysImplementation, nlPythonSysImplementation, ptPythonSysImplementation, itPythonSysImplementation, dePythonSysImplementation, esPythonSysImplementation, huPythonSysImplementation, },
  {enPythonSysModules, frPythonSysModules, nlPythonSysModules, ptPythonSysModules, itPythonSysModules, dePythonSysModules, esPythonSysModules, huPythonSysModules, },
  {enPythonSysPrintexception, frPythonSysPrintexception, nlPythonSysPrintexception, ptPythonSysPrintexception, itPythonSysPrintexception, dePythonSysPrintexception, esPythonSysPrintexception, huPythonSysPrintexception, },
  {enPythonSysVersion, frPythonSysVersion, nlPythonSysVersion, ptPythonSysVersion, itPythonSysVersion, dePythonSysVersion, esPythonSysVersion, huPythonSysVersion, },
  {enPythonSysVersioninfo, frPythonSysVersioninfo, nlPythonSysVersioninfo, ptPythonSysVersioninfo, itPythonSysVersioninfo, dePythonSysVersioninfo, esPythonSysVersioninfo, huPythonSysVersioninfo, },
  {enPythonTab, frPythonTab, nlPythonTab, ptPythonTab, itPythonTab, dePythonTab, esPythonTab, huPythonTab, },
  {enPythonTan, frPythonTan, nlPythonTan, ptPythonTan, itPythonTan, dePythonTan, esPythonTan, huPythonTan, },
  {enPythonTanh, frPythonTanh, nlPythonTanh, ptPythonTanh, itPythonTanh, dePythonTanh, esPythonTanh, huPythonTanh, },
  {enPythonText, frPythonText, nlPythonText, ptPythonText, itPythonText, dePythonText, esPythonText, huPythonText, },
  {enPythonTime, frPythonTime, nlPythonTime, ptPythonTime, itPythonTime, dePythonTime, esPythonTime, huPythonTime, },
  {enPythonTimeFunction, frPythonTimeFunction, nlPythonTimeFunction, ptPythonTimeFunction, itPythonTimeFunction, dePythonTimeFunction, esPythonTimeFunction, huPythonTimeFunction, },
  {enPythonTrunc, frPythonTrunc, nlPythonTrunc, ptPythonTrunc, itPythonTrunc, dePythonTrunc, esPythonTrunc, huPythonTrunc, },
  {enPythonTurtleBackward, frPythonTurtleBackward, nlPythonTurtleBackward, ptPythonTurtleBackward, itPythonTurtleBackward, dePythonTurtleBackward, esPythonTurtleBackward, huPythonTurtleBackward, },
  {enPythonTurtleCircle, frPythonTurtleCircle, nlPythonTurtleCircle, ptPythonTurtleCircle, itPythonTurtleCircle, dePythonTurtleCircle, esPythonTurtleCircle, huPythonTurtleCircle, },
  {enPythonTurtleColor, frPythonTurtleColor, nlPythonTurtleColor, ptPythonTurtleColor, itPythonTurtleColor, dePythonTurtleColor, esPythonTurtleColor, huPythonTurtleColor, },
  {enPythonTurtleColorMode, frPythonTurtleColorMode, nlPythonTurtleColorMode, ptPythonTurtleColorMode, itPythonTurtleColorMode, dePythonTurtleColorMode, esPythonTurtleColorMode, huPythonTurtleColorMode, },
  {enPythonTurtleForward, frPythonTurtleForward, nlPythonTurtleForward, ptPythonTurtleForward, itPythonTurtleForward, dePythonTurtleForward, esPythonTurtleForward, huPythonTurtleForward, },
  {enPythonTurtleFunction, frPythonTurtleFunction, nlPythonTurtleFunction, ptPythonTurtleFunction, itPythonTurtleFunction, dePythonTurtleFunction, esPythonTurtleFunction, huPythonTurtleFunction, },
  {enPythonTurtleGoto, frPythonTurtleGoto, nlPythonTurtleGoto, ptPythonTurtleGoto, itPythonTurtleGoto, dePythonTurtleGoto, esPythonTurtleGoto, huPythonTurtleGoto, },
  {enPythonTurtleHeading, frPythonTurtleHeading, nlPythonTurtleHeading, ptPythonTurtleHeading, itPythonTurtleHeading, dePythonTurtleHeading, esPythonTurtleHeading, huPythonTurtleHeading, },
  {enPythonTurtleHideturtle, frPythonTurtleHideturtle, nlPythonTurtleHideturtle, ptPythonTurtleHideturtle, itPythonTurtleHideturtle, dePythonTurtleHideturtle, esPythonTurtleHideturtle, huPythonTurtleHideturtle, },
  {enPythonTurtleIsdown, frPythonTurtleIsdown, nlPythonTurtleIsdown, ptPythonTurtleIsdown, itPythonTurtleIsdown, dePythonTurtleIsdown, esPythonTurtleIsdown, huPythonTurtleIsdown, },
  {enPythonTurtleLeft, frPythonTurtleLeft, nlPythonTurtleLeft, ptPythonTurtleLeft, itPythonTurtleLeft, dePythonTurtleLeft, esPythonTurtleLeft, huPythonTurtleLeft, },
  {enPythonTurtlePendown, frPythonTurtlePendown, nlPythonTurtlePendown, ptPythonTurtlePendown, itPythonTurtlePendown, dePythonTurtlePendown, esPythonTurtlePendown, huPythonTurtlePendown, },
  {enPythonTurtlePensize, frPythonTurtlePensize, nlPythonTurtlePensize, ptPythonTurtlePensize, itPythonTurtlePensize, dePythonTurtlePensize, esPythonTurtlePensize, huPythonTurtlePensize, },
  {enPythonTurtlePenup, frPythonTurtlePenup, nlPythonTurtlePenup, ptPythonTurtlePenup, itPythonTurtlePenup, dePythonTurtlePenup, esPythonTurtlePenup, huPythonTurtlePenup, },
  {enPythonTurtlePosition, frPythonTurtlePosition, nlPythonTurtlePosition, ptPythonTurtlePosition, itPythonTurtlePosition, dePythonTurtlePosition, esPythonTurtlePosition, huPythonTurtlePosition, },
  {enPythonTurtleReset, frPythonTurtleReset, nlPythonTurtleReset, ptPythonTurtleReset, itPythonTurtleReset, dePythonTurtleReset, esPythonTurtleReset, huPythonTurtleReset, },
  {enPythonTurtleRight, frPythonTurtleRight, nlPythonTurtleRight, ptPythonTurtleRight, itPythonTurtleRight, dePythonTurtleRight, esPythonTurtleRight, huPythonTurtleRight, },
  {enPythonTurtleSetheading, frPythonTurtleSetheading, nlPythonTurtleSetheading, ptPythonTurtleSetheading, itPythonTurtleSetheading, dePythonTurtleSetheading, esPythonTurtleSetheading, huPythonTurtleSetheading, },
  {enPythonTurtleShowturtle, frPythonTurtleShowturtle, nlPythonTurtleShowturtle, ptPythonTurtleShowturtle, itPythonTurtleShowturtle, dePythonTurtleShowturtle, esPythonTurtleShowturtle, huPythonTurtleShowturtle, },
  {enPythonTurtleSpeed, frPythonTurtleSpeed, nlPythonTurtleSpeed, ptPythonTurtleSpeed, itPythonTurtleSpeed, dePythonTurtleSpeed, esPythonTurtleSpeed, huPythonTurtleSpeed, },
  {enPythonTurtleWrite, frPythonTurtleWrite, nlPythonTurtleWrite, ptPythonTurtleWrite, itPythonTurtleWrite, dePythonTurtleWrite, esPythonTurtleWrite, huPythonTurtleWrite, },
  {enPythonUniform, frPythonUniform, nlPythonUniform, ptPythonUniform, itPythonUniform, dePythonUniform, esPythonUniform, huPythonUniform, },
  {enPythonUtilsFunction, frPythonUtilsFunction, nlPythonUtilsFunction, ptPythonUtilsFunction, itPythonUtilsFunction, dePythonUtilsFunction, esPythonUtilsFunction, huPythonUtilsFunction, },
  {enPythonVerticalBar, frPythonVerticalBar, nlPythonVerticalBar, ptPythonVerticalBar, itPythonVerticalBar, dePythonVerticalBar, esPythonVerticalBar, huPythonVerticalBar, },
  {enQuadratic, frQuadratic, nlQuadratic, ptQuadratic, itQuadratic, deQuadratic, esQuadratic, huQuadratic, },
  {enQuartic, frQuartic, nlQuartic, ptQuartic, itQuartic, deQuartic, esQuartic, huQuartic, },
  {enQuotient, frQuotient, nlQuotient, ptQuotient, itQuotient, deQuotient, esQuotient, huQuotient, },
  {enRTCWarning1, frRTCWarning1, nlRTCWarning1, ptRTCWarning1, itRTCWarning1, deRTCWarning1, esRTCWarning1, huRTCWarning1, },
  {enRTCWarning2, frRTCWarning2, nlRTCWarning2, ptRTCWarning2, itRTCWarning2, deRTCWarning2, esRTCWarning2, huRTCWarning2, },
  {enRadian, frRadian, nlRadian, ptRadian, itRadian, deRadian, esRadian, huRadian, },
  {enRadiuses, frRadiuses, nlRadiuses, ptRadiuses, itRadiuses, deRadiuses, esRadiuses, huRadiuses, },
  {enRandomAndApproximation, frRandomAndApproximation, nlRandomAndApproximation, ptRandomAndApproximation, itRandomAndApproximation, deRandomAndApproximation, esRandomAndApproximation, huRandomAndApproximation, },
  {enRandomFloat, frRandomFloat, nlRandomFloat, ptRandomFloat, itRandomFloat, deRandomFloat, esRandomFloat, huRandomFloat, },
  {enRandomInteger, frRandomInteger, nlRandomInteger, ptRandomInteger, itRandomInteger, deRandomInteger, esRandomInteger, huRandomInteger, },
  {enRange, frRange, nlRange, ptRange, itRange, deRange, esRange, huRange, },
  {enReaderApp, frReaderApp, nlReaderApp, ptReaderApp, itReaderApp, deReaderApp, esReaderApp, huReaderApp, },
  {enReaderAppCapital, frReaderAppCapital, nlReaderAppCapital, ptReaderAppCapital, itReaderAppCapital, deReaderAppCapital, esReaderAppCapital, huReaderAppCapital, },
  {enReal, frReal, nlReal, ptReal, itReal, deReal, esReal, huReal, },
  {enRealPart, frRealPart, nlRealPart, ptRealPart, itRealPart, deRealPart, esRealPart, huRealPart, },
  {enRectangleWidth, frRectangleWidth, nlRectangleWidth, ptRectangleWidth, itRectangleWidth, deRectangleWidth, esRectangleWidth, huRectangleWidth, },
  {enReducedRowEchelonForm, frReducedRowEchelonForm, nlReducedRowEchelonForm, ptReducedRowEchelonForm, itReducedRowEchelonForm, deReducedRowEchelonForm, esReducedRowEchelonForm, huReducedRowEchelonForm, },
  {enRegression, frRegression, nlRegression, ptRegression, itRegression, deRegression, esRegression, huRegression, },
  {enRegressionApp, frRegressionApp, nlRegressionApp, ptRegressionApp, itRegressionApp, deRegressionApp, esRegressionApp, huRegressionApp, },
  {enRegressionAppCapital, frRegressionAppCapital, nlRegressionAppCapital, ptRegressionAppCapital, itRegressionAppCapital, deRegressionAppCapital, esRegressionAppCapital, huRegressionAppCapital, },
  {enRegressionCurve, frRegressionCurve, nlRegressionCurve, ptRegressionCurve, itRegressionCurve, deRegressionCurve, esRegressionCurve, huRegressionCurve, },
  {enRelativeFrequency, frRelativeFrequency, nlRelativeFrequency, ptRelativeFrequency, itRelativeFrequency, deRelativeFrequency, esRelativeFrequency, huRelativeFrequency, },
  {enRemainder, frRemainder, nlRemainder, ptRemainder, itRemainder, deRemainder, esRemainder, huRemainder, },
  {enRename, frRename, nlRename, ptRename, itRename, deRename, esRename, huRename, },
  {enRepetitionNumber, frRepetitionNumber, nlRepetitionNumber, ptRepetitionNumber, itRepetitionNumber, deRepetitionNumber, esRepetitionNumber, huRepetitionNumber, },
  {enRequireEquation, frRequireEquation, nlRequireEquation, ptRequireEquation, itRequireEquation, deRequireEquation, esRequireEquation, huRequireEquation, },
  {enReservedName, frReservedName, nlReservedName, ptReservedName, itReservedName, deReservedName, esReservedName, huReservedName, },
  {enResistivityConstants, frResistivityConstants, nlResistivityConstants, ptResistivityConstants, itResistivityConstants, deResistivityConstants, esResistivityConstants, huResistivityConstants, },
  {enResolveEquation, frResolveEquation, nlResolveEquation, ptResolveEquation, itResolveEquation, deResolveEquation, esResolveEquation, huResolveEquation, },
  {enResolveSystem, frResolveSystem, nlResolveSystem, ptResolveSystem, itResolveSystem, deResolveSystem, esResolveSystem, huResolveSystem, },
  {enRounding, frRounding, nlRounding, ptRounding, itRounding, deRounding, esRounding, huRounding, },
  {enRowEchelonForm, frRowEchelonForm, nlRowEchelonForm, ptRowEchelonForm, itRowEchelonForm, deRowEchelonForm, esRowEchelonForm, huRowEchelonForm, },
  {enRpnApp, frRpnApp, nlRpnApp, ptRpnApp, itRpnApp, deRpnApp, esRpnApp, huRpnApp, },
  {enRpnAppCapital, frRpnAppCapital, nlRpnAppCapital, ptRpnAppCapital, itRpnAppCapital, deRpnAppCapital, esRpnAppCapital, huRpnAppCapital, },
  {enRydbergConstantTag, frRydbergConstantTag, nlRydbergConstantTag, ptRydbergConstantTag, itRydbergConstantTag, deRydbergConstantTag, esRydbergConstantTag, huRydbergConstantTag, },
  {enSampleStandardDeviationS, frSampleStandardDeviationS, nlSampleStandardDeviationS, ptSampleStandardDeviationS, itSampleStandardDeviationS, deSampleStandardDeviationS, esSampleStandardDeviationS, huSampleStandardDeviationS, },
  {enSci, frSci, nlSci, ptSci, itSci, deSci, esSci, huSci, },
  {enScientific, frScientific, nlScientific, ptScientific, itScientific, deScientific, esScientific, huScientific, },
  {enScriptInProgress, frScriptInProgress, nlScriptInProgress, ptScriptInProgress, itScriptInProgress, deScriptInProgress, esScriptInProgress, huScriptInProgress, },
  {enScriptOptions, frScriptOptions, nlScriptOptions, ptScriptOptions, itScriptOptions, deScriptOptions, esScriptOptions, huScriptOptions, },
  {enScriptSize, frScriptSize, nlScriptSize, ptScriptSize, itScriptSize, deScriptSize, esScriptSize, huScriptSize, },
  {enSea_water, frSea_water, nlSea_water, ptSea_water, itSea_water, deSea_water, esSea_water, huSea_water, },
  {enSearchInterval, frSearchInterval, nlSearchInterval, ptSearchInterval, itSearchInterval, deSearchInterval, esSearchInterval, huSearchInterval, },
  {enSecondRoot, frSecondRoot, nlSecondRoot, ptSecondRoot, itSecondRoot, deSecondRoot, esSecondRoot, huSecondRoot, },
  {enSelectFirstTerm, frSelectFirstTerm, nlSelectFirstTerm, ptSelectFirstTerm, itSelectFirstTerm, deSelectFirstTerm, esSelectFirstTerm, huSelectFirstTerm, },
  {enSelectLastTerm, frSelectLastTerm, nlSelectLastTerm, ptSelectLastTerm, itSelectLastTerm, deSelectLastTerm, esSelectLastTerm, huSelectLastTerm, },
  {enSelectLowerBound, frSelectLowerBound, nlSelectLowerBound, ptSelectLowerBound, itSelectLowerBound, deSelectLowerBound, esSelectLowerBound, huSelectLowerBound, },
  {enSelectUpperBound, frSelectUpperBound, nlSelectUpperBound, ptSelectUpperBound, itSelectUpperBound, deSelectUpperBound, esSelectUpperBound, huSelectUpperBound, },
  {enSequenceApp, frSequenceApp, nlSequenceApp, ptSequenceApp, itSequenceApp, deSequenceApp, esSequenceApp, huSequenceApp, },
  {enSequenceAppCapital, frSequenceAppCapital, nlSequenceAppCapital, ptSequenceAppCapital, itSequenceAppCapital, deSequenceAppCapital, esSequenceAppCapital, huSequenceAppCapital, },
  {enSequenceColor, frSequenceColor, nlSequenceColor, ptSequenceColor, itSequenceColor, deSequenceColor, esSequenceColor, huSequenceColor, },
  {enSequenceOptions, frSequenceOptions, nlSequenceOptions, ptSequenceOptions, itSequenceOptions, deSequenceOptions, esSequenceOptions, huSequenceOptions, },
  {enSequenceTab, frSequenceTab, nlSequenceTab, ptSequenceTab, itSequenceTab, deSequenceTab, esSequenceTab, huSequenceTab, },
  {enSequenceType, frSequenceType, nlSequenceType, ptSequenceType, itSequenceType, deSequenceType, esSequenceType, huSequenceType, },
  {enSequences, frSequences, nlSequences, ptSequences, itSequences, deSequences, esSequences, huSequences, },
  {enSerialNumber, frSerialNumber, nlSerialNumber, ptSerialNumber, itSerialNumber, deSerialNumber, esSerialNumber, huSerialNumber, },
  {enSettingsApp, frSettingsApp, nlSettingsApp, ptSettingsApp, itSettingsApp, deSettingsApp, esSettingsApp, huSettingsApp, },
  {enSettingsAppCapital, frSettingsAppCapital, nlSettingsAppCapital, ptSettingsAppCapital, itSettingsAppCapital, deSettingsAppCapital, esSettingsAppCapital, huSettingsAppCapital, },
  {enSigmaOSVersion, frSigmaOSVersion, nlSigmaOSVersion, ptSigmaOSVersion, itSigmaOSVersion, deSigmaOSVersion, esSigmaOSVersion, huSigmaOSVersion, },
  {enSignificantFigures, frSignificantFigures, nlSignificantFigures, ptSignificantFigures, itSignificantFigures, deSignificantFigures, esSignificantFigures, huSignificantFigures, },
  {enSilver, frSilver, nlSilver, ptSilver, itSilver, deSilver, esSilver, huSilver, },
  {enSingleRecurrence, frSingleRecurrence, nlSingleRecurrence, ptSingleRecurrence, itSingleRecurrence, deSingleRecurrence, esSingleRecurrence, huSingleRecurrence, },
  {enSkip, frSkip, nlSkip, ptSkip, itSkip, deSkip, esSkip, huSkip, },
  {enSmallFont, frSmallFont, nlSmallFont, ptSmallFont, itSmallFont, deSmallFont, esSmallFont, huSmallFont, },
  {enSoftwareVersion, frSoftwareVersion, nlSoftwareVersion, ptSoftwareVersion, itSoftwareVersion, deSoftwareVersion, esSoftwareVersion, huSoftwareVersion, },
  {enSolution, frSolution, nlSolution, ptSolution, itSolution, deSolution, esSolution, huSolution, },
  {enSolverApp, frSolverApp, nlSolverApp, ptSolverApp, itSolverApp, deSolverApp, esSolverApp, huSolverApp, },
  {enSolverAppCapital, frSolverAppCapital, nlSolverAppCapital, ptSolverAppCapital, itSolverAppCapital, deSolverAppCapital, esSolverAppCapital, huSolverAppCapital, },
  {enSort, frSort, nlSort, ptSort, itSort, deSort, esSort, huSort, },
  {enSortSizes, frSortSizes, nlSortSizes, ptSortSizes, itSortSizes, deSortSizes, esSortSizes, huSortSizes, },
  {enSortValues, frSortValues, nlSortValues, ptSortValues, itSortValues, deSortValues, esSortValues, huSortValues, },
  {enSpeed, frSpeed, nlSpeed, ptSpeed, itSpeed, deSpeed, esSpeed, huSpeed, },
  {enSpeedDimension, frSpeedDimension, nlSpeedDimension, ptSpeedDimension, itSpeedDimension, deSpeedDimension, esSpeedDimension, huSpeedDimension, },
  {enSpeedOfLightTag, frSpeedOfLightTag, nlSpeedOfLightTag, ptSpeedOfLightTag, itSpeedOfLightTag, deSpeedOfLightTag, esSpeedOfLightTag, huSpeedOfLightTag, },
  {enSpeedOfSound, frSpeedOfSound, nlSpeedOfSound, ptSpeedOfSound, itSpeedOfSound, deSpeedOfSound, esSpeedOfSound, huSpeedOfSound, },
  {enSpeedOfSound0Tag, frSpeedOfSound0Tag, nlSpeedOfSound0Tag, ptSpeedOfSound0Tag, itSpeedOfSound0Tag, deSpeedOfSound0Tag, esSpeedOfSound0Tag, huSpeedOfSound0Tag, },
  {enSpeedOfSoundGlassTag, frSpeedOfSoundGlassTag, nlSpeedOfSoundGlassTag, ptSpeedOfSoundGlassTag, itSpeedOfSoundGlassTag, deSpeedOfSoundGlassTag, esSpeedOfSoundGlassTag, huSpeedOfSoundGlassTag, },
  {enSpeedOfSoundSteelTag, frSpeedOfSoundSteelTag, nlSpeedOfSoundSteelTag, ptSpeedOfSoundSteelTag, itSpeedOfSoundSteelTag, deSpeedOfSoundSteelTag, esSpeedOfSoundSteelTag, huSpeedOfSoundSteelTag, },
  {enSpeedOfSoundWaterTag, frSpeedOfSoundWaterTag, nlSpeedOfSoundWaterTag, ptSpeedOfSoundWaterTag, itSpeedOfSoundWaterTag, deSpeedOfSoundWaterTag, esSpeedOfSoundWaterTag, huSpeedOfSoundWaterTag, },
  {enSquareSum, frSquareSum, nlSquareSum, ptSquareSum, itSquareSum, deSquareSum, esSquareSum, huSquareSum, },
  {enStandardDeviation, frStandardDeviation, nlStandardDeviation, ptStandardDeviation, itStandardDeviation, deStandardDeviation, esStandardDeviation, huStandardDeviation, },
  {enStandardDeviationSigma, frStandardDeviationSigma, nlStandardDeviationSigma, ptStandardDeviationSigma, itStandardDeviationSigma, deStandardDeviationSigma, esStandardDeviationSigma, huStandardDeviationSigma, },
  {enStatTab, frStatTab, nlStatTab, ptStatTab, itStatTab, deStatTab, esStatTab, huStatTab, },
  {enStatisticsMode, frStatisticsMode, nlStatisticsMode, ptStatisticsMode, itStatisticsMode, deStatisticsMode, esStatisticsMode, huStatisticsMode, },
  {enStatsApp, frStatsApp, nlStatsApp, ptStatsApp, itStatsApp, deStatsApp, esStatsApp, huStatsApp, },
  {enStatsAppCapital, frStatsAppCapital, nlStatsAppCapital, ptStatsAppCapital, itStatsAppCapital, deStatsAppCapital, esStatsAppCapital, huStatsAppCapital, },
  {enStefanBoltzmannTag, frStefanBoltzmannTag, nlStefanBoltzmannTag, ptStefanBoltzmannTag, itStefanBoltzmannTag, deStefanBoltzmannTag, esStefanBoltzmannTag, huStefanBoltzmannTag, },
  {enStep, frStep, nlStep, ptStep, itStep, deStep, esStep, huStep, },
  {enStorageMemoryFull1, frStorageMemoryFull1, nlStorageMemoryFull1, ptStorageMemoryFull1, itStorageMemoryFull1, deStorageMemoryFull1, esStorageMemoryFull1, huStorageMemoryFull1, },
  {enStorageMemoryFull2, frStorageMemoryFull2, nlStorageMemoryFull2, ptStorageMemoryFull2, itStorageMemoryFull2, deStorageMemoryFull2, esStorageMemoryFull2, huStorageMemoryFull2, },
  {enStudentDistribution, frStudentDistribution, nlStudentDistribution, ptStudentDistribution, itStudentDistribution, deStudentDistribution, esStudentDistribution, huStudentDistribution, },
  {enSuccessProbability, frSuccessProbability, nlSuccessProbability, ptSuccessProbability, itSuccessProbability, deSuccessProbability, esSuccessProbability, huSuccessProbability, },
  {enSum, frSum, nlSum, ptSum, itSum, deSum, esSum, huSum, },
  {enSumSquareValues, frSumSquareValues, nlSumSquareValues, ptSumSquareValues, itSumSquareValues, deSumSquareValues, esSumSquareValues, huSumSquareValues, },
  {enSumValues, frSumValues, nlSumValues, ptSumValues, itSumValues, deSumValues, esSumValues, huSumValues, },
  {enSunMassTag, frSunMassTag, nlSunMassTag, ptSunMassTag, itSunMassTag, deSunMassTag, esSunMassTag, huSunMassTag, },
  {enSurfaceDimension, frSurfaceDimension, nlSurfaceDimension, ptSurfaceDimension, itSurfaceDimension, deSurfaceDimension, esSurfaceDimension, huSurfaceDimension, },
  {enSym, frSym, nlSym, ptSym, itSym, deSym, esSym, huSym, },
  {enSymbolArgDefaultFunction, frSymbolArgDefaultFunction, nlSymbolArgDefaultFunction, ptSymbolArgDefaultFunction, itSymbolArgDefaultFunction, deSymbolArgDefaultFunction, esSymbolArgDefaultFunction, huSymbolArgDefaultFunction, },
  {enSymbolArgFunction, frSymbolArgFunction, nlSymbolArgFunction, ptSymbolArgFunction, itSymbolArgFunction, deSymbolArgFunction, esSymbolArgFunction, huSymbolArgFunction, },
  {enSymbolDefaultFunction, frSymbolDefaultFunction, nlSymbolDefaultFunction, ptSymbolDefaultFunction, itSymbolDefaultFunction, deSymbolDefaultFunction, esSymbolDefaultFunction, huSymbolDefaultFunction, },
  {enSymbolFunction, frSymbolFunction, nlSymbolFunction, ptSymbolFunction, itSymbolFunction, deSymbolFunction, esSymbolFunction, huSymbolFunction, },
  {enSymbolMultiplication, frSymbolMultiplication, nlSymbolMultiplication, ptSymbolMultiplication, itSymbolMultiplication, deSymbolMultiplication, esSymbolMultiplication, huSymbolMultiplication, },
  {enSymbolMultiplicationAutoSymbol, frSymbolMultiplicationAutoSymbol, nlSymbolMultiplicationAutoSymbol, ptSymbolMultiplicationAutoSymbol, itSymbolMultiplicationAutoSymbol, deSymbolMultiplicationAutoSymbol, esSymbolMultiplicationAutoSymbol, huSymbolMultiplicationAutoSymbol, },
  {enSymbolMultiplicationCross, frSymbolMultiplicationCross, nlSymbolMultiplicationCross, ptSymbolMultiplicationCross, itSymbolMultiplicationCross, deSymbolMultiplicationCross, esSymbolMultiplicationCross, huSymbolMultiplicationCross, },
  {enSymbolMultiplicationMiddleDot, frSymbolMultiplicationMiddleDot, nlSymbolMultiplicationMiddleDot, ptSymbolMultiplicationMiddleDot, itSymbolMultiplicationMiddleDot, deSymbolMultiplicationMiddleDot, esSymbolMultiplicationMiddleDot, huSymbolMultiplicationMiddleDot, },
  {enSymbolMultiplicationStar, frSymbolMultiplicationStar, nlSymbolMultiplicationStar, ptSymbolMultiplicationStar, itSymbolMultiplicationStar, deSymbolMultiplicationStar, esSymbolMultiplicationStar, huSymbolMultiplicationStar, },
  {enSyntaxError, frSyntaxError, nlSyntaxError, ptSyntaxError, itSyntaxError, deSyntaxError, esSyntaxError, huSyntaxError, },
  {enSyntaxHighlighting, frSyntaxHighlighting, nlSyntaxHighlighting, ptSyntaxHighlighting, itSyntaxHighlighting, deSyntaxHighlighting, esSyntaxHighlighting, huSyntaxHighlighting, },
  {enTEnd, frTEnd, nlTEnd, ptTEnd, itTEnd, deTEnd, esTEnd, huTEnd, },
  {enTStart, frTStart, nlTStart, ptTStart, itTStart, deTStart, esTStart, huTStart, },
  {enTangent, frTangent, nlTangent, ptTangent, itTangent, deTangent, esTangent, huTangent, },
  {enTauonMassTag, frTauonMassTag, nlTauonMassTag, ptTauonMassTag, itTauonMassTag, deTauonMassTag, esTauonMassTag, huTauonMassTag, },
  {enTemperatureDimension, frTemperatureDimension, nlTemperatureDimension, ptTemperatureDimension, itTemperatureDimension, deTemperatureDimension, esTemperatureDimension, huTemperatureDimension, },
  {enTermSum, frTermSum, nlTermSum, ptTermSum, itTermSum, deTermSum, esTermSum, huTermSum, },
  {enThermodynamics, frThermodynamics, nlThermodynamics, ptThermodynamics, itThermodynamics, deThermodynamics, esThermodynamics, huThermodynamics, },
  {enThetaEnd, frThetaEnd, nlThetaEnd, ptThetaEnd, itThetaEnd, deThetaEnd, esThetaEnd, huThetaEnd, },
  {enThetaStart, frThetaStart, nlThetaStart, ptThetaStart, itThetaStart, deThetaStart, esThetaStart, huThetaStart, },
  {enThirdQuartile, frThirdQuartile, nlThirdQuartile, ptThirdQuartile, itThirdQuartile, deThirdQuartile, esThirdQuartile, huThirdQuartile, },
  {enTime, frTime, nlTime, ptTime, itTime, deTime, esTime, huTime, },
  {enTimeDimension, frTimeDimension, nlTimeDimension, ptTimeDimension, itTimeDimension, deTimeDimension, esTimeDimension, huTimeDimension, },
  {enTin, frTin, nlTin, ptTin, itTin, deTin, esTin, huTin, },
  {enToDeactivateExamMode1, frToDeactivateExamMode1, nlToDeactivateExamMode1, ptToDeactivateExamMode1, itToDeactivateExamMode1, deToDeactivateExamMode1, esToDeactivateExamMode1, huToDeactivateExamMode1, },
  {enToDeactivateExamMode2, frToDeactivateExamMode2, nlToDeactivateExamMode2, ptToDeactivateExamMode2, itToDeactivateExamMode2, deToDeactivateExamMode2, esToDeactivateExamMode2, huToDeactivateExamMode2, },
  {enToDeactivateExamMode3, frToDeactivateExamMode3, nlToDeactivateExamMode3, ptToDeactivateExamMode3, itToDeactivateExamMode3, deToDeactivateExamMode3, esToDeactivateExamMode3, huToDeactivateExamMode3, },
  {enToZoom, frToZoom, nlToZoom, ptToZoom, itToZoom, deToZoom, esToZoom, huToZoom, },
  {enTooManyVariables, frTooManyVariables, nlTooManyVariables, ptTooManyVariables, itTooManyVariables, deTooManyVariables, esTooManyVariables, huTooManyVariables, },
  {enToolbox, frToolbox, nlToolbox, ptToolbox, itToolbox, deToolbox, esToolbox, huToolbox, },
  {enTotalFrequency, frTotalFrequency, nlTotalFrequency, ptTotalFrequency, itTotalFrequency, deTotalFrequency, esTotalFrequency, huTotalFrequency, },
  {enTrace, frTrace, nlTrace, ptTrace, itTrace, deTrace, esTrace, huTrace, },
  {enTranspose, frTranspose, nlTranspose, ptTranspose, itTranspose, deTranspose, esTranspose, huTranspose, },
  {enTrigonometrical, frTrigonometrical, nlTrigonometrical, ptTrigonometrical, itTrigonometrical, deTrigonometrical, esTrigonometrical, huTrigonometrical, },
  {enTungsten, frTungsten, nlTungsten, ptTungsten, itTungsten, deTungsten, esTungsten, huTungsten, },
  {enUSBConnected, frUSBConnected, nlUSBConnected, ptUSBConnected, itUSBConnected, deUSBConnected, esUSBConnected, huUSBConnected, },
  {enUlabDocumentation, frUlabDocumentation, nlUlabDocumentation, ptUlabDocumentation, itUlabDocumentation, deUlabDocumentation, esUlabDocumentation, huUlabDocumentation, },
  {enUndefinedEquation, frUndefinedEquation, nlUndefinedEquation, ptUndefinedEquation, itUndefinedEquation, deUndefinedEquation, esUndefinedEquation, huUndefinedEquation, },
  {enUndefinedValue, frUndefinedValue, nlUndefinedValue, ptUndefinedValue, itUndefinedValue, deUndefinedValue, esUndefinedValue, huUndefinedValue, },
  {enUniformDistribution, frUniformDistribution, nlUniformDistribution, ptUniformDistribution, itUniformDistribution, deUniformDistribution, esUniformDistribution, huUniformDistribution, },
  {enUniforme, frUniforme, nlUniforme, ptUniforme, itUniforme, deUniforme, esUniforme, huUniforme, },
  {enUnit, frUnit, nlUnit, ptUnit, itUnit, deUnit, esUnit, huUnit, },
  {enUnitAmountMenu, frUnitAmountMenu, nlUnitAmountMenu, ptUnitAmountMenu, itUnitAmountMenu, deUnitAmountMenu, esUnitAmountMenu, huUnitAmountMenu, },
  {enUnitAmountMole, frUnitAmountMole, nlUnitAmountMole, ptUnitAmountMole, itUnitAmountMole, deUnitAmountMole, esUnitAmountMole, huUnitAmountMole, },
  {enUnitAmountMoleMicro, frUnitAmountMoleMicro, nlUnitAmountMoleMicro, ptUnitAmountMoleMicro, itUnitAmountMoleMicro, deUnitAmountMoleMicro, esUnitAmountMoleMicro, huUnitAmountMoleMicro, },
  {enUnitAmountMoleMilli, frUnitAmountMoleMilli, nlUnitAmountMoleMilli, ptUnitAmountMoleMilli, itUnitAmountMoleMilli, deUnitAmountMoleMilli, esUnitAmountMoleMilli, huUnitAmountMoleMilli, },
  {enUnitCapacitanceFaradMicro, frUnitCapacitanceFaradMicro, nlUnitCapacitanceFaradMicro, ptUnitCapacitanceFaradMicro, itUnitCapacitanceFaradMicro, deUnitCapacitanceFaradMicro, esUnitCapacitanceFaradMicro, huUnitCapacitanceFaradMicro, },
  {enUnitCapacitanceFaradMilli, frUnitCapacitanceFaradMilli, nlUnitCapacitanceFaradMilli, ptUnitCapacitanceFaradMilli, itUnitCapacitanceFaradMilli, deUnitCapacitanceFaradMilli, esUnitCapacitanceFaradMilli, huUnitCapacitanceFaradMilli, },
  {enUnitCapacitanceMenu, frUnitCapacitanceMenu, nlUnitCapacitanceMenu, ptUnitCapacitanceMenu, itUnitCapacitanceMenu, deUnitCapacitanceMenu, esUnitCapacitanceMenu, huUnitCapacitanceMenu, },
  {enUnitConductanceMenu, frUnitConductanceMenu, nlUnitConductanceMenu, ptUnitConductanceMenu, itUnitConductanceMenu, deUnitConductanceMenu, esUnitConductanceMenu, huUnitConductanceMenu, },
  {enUnitConductanceSiemensMilli, frUnitConductanceSiemensMilli, nlUnitConductanceSiemensMilli, ptUnitConductanceSiemensMilli, itUnitConductanceSiemensMilli, deUnitConductanceSiemensMilli, esUnitConductanceSiemensMilli, huUnitConductanceSiemensMilli, },
  {enUnitCurrentAmpere, frUnitCurrentAmpere, nlUnitCurrentAmpere, ptUnitCurrentAmpere, itUnitCurrentAmpere, deUnitCurrentAmpere, esUnitCurrentAmpere, huUnitCurrentAmpere, },
  {enUnitCurrentAmpereMicro, frUnitCurrentAmpereMicro, nlUnitCurrentAmpereMicro, ptUnitCurrentAmpereMicro, itUnitCurrentAmpereMicro, deUnitCurrentAmpereMicro, esUnitCurrentAmpereMicro, huUnitCurrentAmpereMicro, },
  {enUnitCurrentAmpereMilli, frUnitCurrentAmpereMilli, nlUnitCurrentAmpereMilli, ptUnitCurrentAmpereMilli, itUnitCurrentAmpereMilli, deUnitCurrentAmpereMilli, esUnitCurrentAmpereMilli, huUnitCurrentAmpereMilli, },
  {enUnitCurrentMenu, frUnitCurrentMenu, nlUnitCurrentMenu, ptUnitCurrentMenu, itUnitCurrentMenu, deUnitCurrentMenu, esUnitCurrentMenu, huUnitCurrentMenu, },
  {enUnitDistanceAstronomicalUnit, frUnitDistanceAstronomicalUnit, nlUnitDistanceAstronomicalUnit, ptUnitDistanceAstronomicalUnit, itUnitDistanceAstronomicalUnit, deUnitDistanceAstronomicalUnit, esUnitDistanceAstronomicalUnit, huUnitDistanceAstronomicalUnit, },
  {enUnitDistanceFoot, frUnitDistanceFoot, nlUnitDistanceFoot, ptUnitDistanceFoot, itUnitDistanceFoot, deUnitDistanceFoot, esUnitDistanceFoot, huUnitDistanceFoot, },
  {enUnitDistanceInch, frUnitDistanceInch, nlUnitDistanceInch, ptUnitDistanceInch, itUnitDistanceInch, deUnitDistanceInch, esUnitDistanceInch, huUnitDistanceInch, },
  {enUnitDistanceLightYear, frUnitDistanceLightYear, nlUnitDistanceLightYear, ptUnitDistanceLightYear, itUnitDistanceLightYear, deUnitDistanceLightYear, esUnitDistanceLightYear, huUnitDistanceLightYear, },
  {enUnitDistanceMenu, frUnitDistanceMenu, nlUnitDistanceMenu, ptUnitDistanceMenu, itUnitDistanceMenu, deUnitDistanceMenu, esUnitDistanceMenu, huUnitDistanceMenu, },
  {enUnitDistanceMeter, frUnitDistanceMeter, nlUnitDistanceMeter, ptUnitDistanceMeter, itUnitDistanceMeter, deUnitDistanceMeter, esUnitDistanceMeter, huUnitDistanceMeter, },
  {enUnitDistanceMeterKilo, frUnitDistanceMeterKilo, nlUnitDistanceMeterKilo, ptUnitDistanceMeterKilo, itUnitDistanceMeterKilo, deUnitDistanceMeterKilo, esUnitDistanceMeterKilo, huUnitDistanceMeterKilo, },
  {enUnitDistanceMeterMicro, frUnitDistanceMeterMicro, nlUnitDistanceMeterMicro, ptUnitDistanceMeterMicro, itUnitDistanceMeterMicro, deUnitDistanceMeterMicro, esUnitDistanceMeterMicro, huUnitDistanceMeterMicro, },
  {enUnitDistanceMeterMilli, frUnitDistanceMeterMilli, nlUnitDistanceMeterMilli, ptUnitDistanceMeterMilli, itUnitDistanceMeterMilli, deUnitDistanceMeterMilli, esUnitDistanceMeterMilli, huUnitDistanceMeterMilli, },
  {enUnitDistanceMeterNano, frUnitDistanceMeterNano, nlUnitDistanceMeterNano, ptUnitDistanceMeterNano, itUnitDistanceMeterNano, deUnitDistanceMeterNano, esUnitDistanceMeterNano, huUnitDistanceMeterNano, },
  {enUnitDistanceMeterPico, frUnitDistanceMeterPico, nlUnitDistanceMeterPico, ptUnitDistanceMeterPico, itUnitDistanceMeterPico, deUnitDistanceMeterPico, esUnitDistanceMeterPico, huUnitDistanceMeterPico, },
  {enUnitDistanceMile, frUnitDistanceMile, nlUnitDistanceMile, ptUnitDistanceMile, itUnitDistanceMile, deUnitDistanceMile, esUnitDistanceMile, huUnitDistanceMile, },
  {enUnitDistanceParsec, frUnitDistanceParsec, nlUnitDistanceParsec, ptUnitDistanceParsec, itUnitDistanceParsec, deUnitDistanceParsec, esUnitDistanceParsec, huUnitDistanceParsec, },
  {enUnitDistanceYard, frUnitDistanceYard, nlUnitDistanceYard, ptUnitDistanceYard, itUnitDistanceYard, deUnitDistanceYard, esUnitDistanceYard, huUnitDistanceYard, },
  {enUnitElectricChargeMenu, frUnitElectricChargeMenu, nlUnitElectricChargeMenu, ptUnitElectricChargeMenu, itUnitElectricChargeMenu, deUnitElectricChargeMenu, esUnitElectricChargeMenu, huUnitElectricChargeMenu, },
  {enUnitEnergyElectronVolt, frUnitEnergyElectronVolt, nlUnitEnergyElectronVolt, ptUnitEnergyElectronVolt, itUnitEnergyElectronVolt, deUnitEnergyElectronVolt, esUnitEnergyElectronVolt, huUnitEnergyElectronVolt, },
  {enUnitEnergyElectronVoltKilo, frUnitEnergyElectronVoltKilo, nlUnitEnergyElectronVoltKilo, ptUnitEnergyElectronVoltKilo, itUnitEnergyElectronVoltKilo, deUnitEnergyElectronVoltKilo, esUnitEnergyElectronVoltKilo, huUnitEnergyElectronVoltKilo, },
  {enUnitEnergyElectronVoltMega, frUnitEnergyElectronVoltMega, nlUnitEnergyElectronVoltMega, ptUnitEnergyElectronVoltMega, itUnitEnergyElectronVoltMega, deUnitEnergyElectronVoltMega, esUnitEnergyElectronVoltMega, huUnitEnergyElectronVoltMega, },
  {enUnitEnergyElectronVoltMenu, frUnitEnergyElectronVoltMenu, nlUnitEnergyElectronVoltMenu, ptUnitEnergyElectronVoltMenu, itUnitEnergyElectronVoltMenu, deUnitEnergyElectronVoltMenu, esUnitEnergyElectronVoltMenu, huUnitEnergyElectronVoltMenu, },
  {enUnitEnergyElectronVoltMilli, frUnitEnergyElectronVoltMilli, nlUnitEnergyElectronVoltMilli, ptUnitEnergyElectronVoltMilli, itUnitEnergyElectronVoltMilli, deUnitEnergyElectronVoltMilli, esUnitEnergyElectronVoltMilli, huUnitEnergyElectronVoltMilli, },
  {enUnitEnergyJouleMilli, frUnitEnergyJouleMilli, nlUnitEnergyJouleMilli, ptUnitEnergyJouleMilli, itUnitEnergyJouleMilli, deUnitEnergyJouleMilli, esUnitEnergyJouleMilli, huUnitEnergyJouleMilli, },
  {enUnitEnergyMenu, frUnitEnergyMenu, nlUnitEnergyMenu, ptUnitEnergyMenu, itUnitEnergyMenu, deUnitEnergyMenu, esUnitEnergyMenu, huUnitEnergyMenu, },
  {enUnitForceMenu, frUnitForceMenu, nlUnitForceMenu, ptUnitForceMenu, itUnitForceMenu, deUnitForceMenu, esUnitForceMenu, huUnitForceMenu, },
  {enUnitForceNewtonMilli, frUnitForceNewtonMilli, nlUnitForceNewtonMilli, ptUnitForceNewtonMilli, itUnitForceNewtonMilli, deUnitForceNewtonMilli, esUnitForceNewtonMilli, huUnitForceNewtonMilli, },
  {enUnitFrequencyHertzMega, frUnitFrequencyHertzMega, nlUnitFrequencyHertzMega, ptUnitFrequencyHertzMega, itUnitFrequencyHertzMega, deUnitFrequencyHertzMega, esUnitFrequencyHertzMega, huUnitFrequencyHertzMega, },
  {enUnitFrequencyMenu, frUnitFrequencyMenu, nlUnitFrequencyMenu, ptUnitFrequencyMenu, itUnitFrequencyMenu, deUnitFrequencyMenu, esUnitFrequencyMenu, huUnitFrequencyMenu, },
  {enUnitIlluminanceLux, frUnitIlluminanceLux, nlUnitIlluminanceLux, ptUnitIlluminanceLux, itUnitIlluminanceLux, deUnitIlluminanceLux, esUnitIlluminanceLux, huUnitIlluminanceLux, },
  {enUnitIlluminanceMenu, frUnitIlluminanceMenu, nlUnitIlluminanceMenu, ptUnitIlluminanceMenu, itUnitIlluminanceMenu, deUnitIlluminanceMenu, esUnitIlluminanceMenu, huUnitIlluminanceMenu, },
  {enUnitImperialMenu, frUnitImperialMenu, nlUnitImperialMenu, ptUnitImperialMenu, itUnitImperialMenu, deUnitImperialMenu, esUnitImperialMenu, huUnitImperialMenu, },
  {enUnitLuminousFluxLumen, frUnitLuminousFluxLumen, nlUnitLuminousFluxLumen, ptUnitLuminousFluxLumen, itUnitLuminousFluxLumen, deUnitLuminousFluxLumen, esUnitLuminousFluxLumen, huUnitLuminousFluxLumen, },
  {enUnitLuminousFluxMenu, frUnitLuminousFluxMenu, nlUnitLuminousFluxMenu, ptUnitLuminousFluxMenu, itUnitLuminousFluxMenu, deUnitLuminousFluxMenu, esUnitLuminousFluxMenu, huUnitLuminousFluxMenu, },
  {enUnitLuminousIntensityMenu, frUnitLuminousIntensityMenu, nlUnitLuminousIntensityMenu, ptUnitLuminousIntensityMenu, itUnitLuminousIntensityMenu, deUnitLuminousIntensityMenu, esUnitLuminousIntensityMenu, huUnitLuminousIntensityMenu, },
  {enUnitMagneticFieldMenu, frUnitMagneticFieldMenu, nlUnitMagneticFieldMenu, ptUnitMagneticFieldMenu, itUnitMagneticFieldMenu, deUnitMagneticFieldMenu, esUnitMagneticFieldMenu, huUnitMagneticFieldMenu, },
  {enUnitMassGram, frUnitMassGram, nlUnitMassGram, ptUnitMassGram, itUnitMassGram, deUnitMassGram, esUnitMassGram, huUnitMassGram, },
  {enUnitMassGramKilo, frUnitMassGramKilo, nlUnitMassGramKilo, ptUnitMassGramKilo, itUnitMassGramKilo, deUnitMassGramKilo, esUnitMassGramKilo, huUnitMassGramKilo, },
  {enUnitMassGramMicro, frUnitMassGramMicro, nlUnitMassGramMicro, ptUnitMassGramMicro, itUnitMassGramMicro, deUnitMassGramMicro, esUnitMassGramMicro, huUnitMassGramMicro, },
  {enUnitMassGramMilli, frUnitMassGramMilli, nlUnitMassGramMilli, ptUnitMassGramMilli, itUnitMassGramMilli, deUnitMassGramMilli, esUnitMassGramMilli, huUnitMassGramMilli, },
  {enUnitMassLongTon, frUnitMassLongTon, nlUnitMassLongTon, ptUnitMassLongTon, itUnitMassLongTon, deUnitMassLongTon, esUnitMassLongTon, huUnitMassLongTon, },
  {enUnitMassMenu, frUnitMassMenu, nlUnitMassMenu, ptUnitMassMenu, itUnitMassMenu, deUnitMassMenu, esUnitMassMenu, huUnitMassMenu, },
  {enUnitMassOunce, frUnitMassOunce, nlUnitMassOunce, ptUnitMassOunce, itUnitMassOunce, deUnitMassOunce, esUnitMassOunce, huUnitMassOunce, },
  {enUnitMassPound, frUnitMassPound, nlUnitMassPound, ptUnitMassPound, itUnitMassPound, deUnitMassPound, esUnitMassPound, huUnitMassPound, },
  {enUnitMassShortTon, frUnitMassShortTon, nlUnitMassShortTon, ptUnitMassShortTon, itUnitMassShortTon, deUnitMassShortTon, esUnitMassShortTon, huUnitMassShortTon, },
  {enUnitMassTonne, frUnitMassTonne, nlUnitMassTonne, ptUnitMassTonne, itUnitMassTonne, deUnitMassTonne, esUnitMassTonne, huUnitMassTonne, },
  {enUnitMetricMenu, frUnitMetricMenu, nlUnitMetricMenu, ptUnitMetricMenu, itUnitMetricMenu, deUnitMetricMenu, esUnitMetricMenu, huUnitMetricMenu, },
  {enUnitPotentialMenu, frUnitPotentialMenu, nlUnitPotentialMenu, ptUnitPotentialMenu, itUnitPotentialMenu, deUnitPotentialMenu, esUnitPotentialMenu, huUnitPotentialMenu, },
  {enUnitPotentialVoltMicro, frUnitPotentialVoltMicro, nlUnitPotentialVoltMicro, ptUnitPotentialVoltMicro, itUnitPotentialVoltMicro, deUnitPotentialVoltMicro, esUnitPotentialVoltMicro, huUnitPotentialVoltMicro, },
  {enUnitPotentialVoltMilli, frUnitPotentialVoltMilli, nlUnitPotentialVoltMilli, ptUnitPotentialVoltMilli, itUnitPotentialVoltMilli, deUnitPotentialVoltMilli, esUnitPotentialVoltMilli, huUnitPotentialVoltMilli, },
  {enUnitPowerMenu, frUnitPowerMenu, nlUnitPowerMenu, ptUnitPowerMenu, itUnitPowerMenu, deUnitPowerMenu, esUnitPowerMenu, huUnitPowerMenu, },
  {enUnitPowerWattMega, frUnitPowerWattMega, nlUnitPowerWattMega, ptUnitPowerWattMega, itUnitPowerWattMega, deUnitPowerWattMega, esUnitPowerWattMega, huUnitPowerWattMega, },
  {enUnitPowerWattMicro, frUnitPowerWattMicro, nlUnitPowerWattMicro, ptUnitPowerWattMicro, itUnitPowerWattMicro, deUnitPowerWattMicro, esUnitPowerWattMicro, huUnitPowerWattMicro, },
  {enUnitPowerWattMilli, frUnitPowerWattMilli, nlUnitPowerWattMilli, ptUnitPowerWattMilli, itUnitPowerWattMilli, deUnitPowerWattMilli, esUnitPowerWattMilli, huUnitPowerWattMilli, },
  {enUnitPressureAtm, frUnitPressureAtm, nlUnitPressureAtm, ptUnitPressureAtm, itUnitPressureAtm, deUnitPressureAtm, esUnitPressureAtm, huUnitPressureAtm, },
  {enUnitPressureMenu, frUnitPressureMenu, nlUnitPressureMenu, ptUnitPressureMenu, itUnitPressureMenu, deUnitPressureMenu, esUnitPressureMenu, huUnitPressureMenu, },
  {enUnitPressurePascalHecto, frUnitPressurePascalHecto, nlUnitPressurePascalHecto, ptUnitPressurePascalHecto, itUnitPressurePascalHecto, deUnitPressurePascalHecto, esUnitPressurePascalHecto, huUnitPressurePascalHecto, },
  {enUnitResistanceMenu, frUnitResistanceMenu, nlUnitResistanceMenu, ptUnitResistanceMenu, itUnitResistanceMenu, deUnitResistanceMenu, esUnitResistanceMenu, huUnitResistanceMenu, },
  {enUnitSolidAngleMenu, frUnitSolidAngleMenu, nlUnitSolidAngleMenu, ptUnitSolidAngleMenu, itUnitSolidAngleMenu, deUnitSolidAngleMenu, esUnitSolidAngleMenu, huUnitSolidAngleMenu, },
  {enUnitSolidAngleSteradian, frUnitSolidAngleSteradian, nlUnitSolidAngleSteradian, ptUnitSolidAngleSteradian, itUnitSolidAngleSteradian, deUnitSolidAngleSteradian, esUnitSolidAngleSteradian, huUnitSolidAngleSteradian, },
  {enUnitSurfaceAcre, frUnitSurfaceAcre, nlUnitSurfaceAcre, ptUnitSurfaceAcre, itUnitSurfaceAcre, deUnitSurfaceAcre, esUnitSurfaceAcre, huUnitSurfaceAcre, },
  {enUnitSurfaceHectar, frUnitSurfaceHectar, nlUnitSurfaceHectar, ptUnitSurfaceHectar, itUnitSurfaceHectar, deUnitSurfaceHectar, esUnitSurfaceHectar, huUnitSurfaceHectar, },
  {enUnitSurfaceMenu, frUnitSurfaceMenu, nlUnitSurfaceMenu, ptUnitSurfaceMenu, itUnitSurfaceMenu, deUnitSurfaceMenu, esUnitSurfaceMenu, huUnitSurfaceMenu, },
  {enUnitTemperatureMenu, frUnitTemperatureMenu, nlUnitTemperatureMenu, ptUnitTemperatureMenu, itUnitTemperatureMenu, deUnitTemperatureMenu, esUnitTemperatureMenu, huUnitTemperatureMenu, },
  {enUnitTimeDay, frUnitTimeDay, nlUnitTimeDay, ptUnitTimeDay, itUnitTimeDay, deUnitTimeDay, esUnitTimeDay, huUnitTimeDay, },
  {enUnitTimeHour, frUnitTimeHour, nlUnitTimeHour, ptUnitTimeHour, itUnitTimeHour, deUnitTimeHour, esUnitTimeHour, huUnitTimeHour, },
  {enUnitTimeMenu, frUnitTimeMenu, nlUnitTimeMenu, ptUnitTimeMenu, itUnitTimeMenu, deUnitTimeMenu, esUnitTimeMenu, huUnitTimeMenu, },
  {enUnitTimeMinute, frUnitTimeMinute, nlUnitTimeMinute, ptUnitTimeMinute, itUnitTimeMinute, deUnitTimeMinute, esUnitTimeMinute, huUnitTimeMinute, },
  {enUnitTimeMonth, frUnitTimeMonth, nlUnitTimeMonth, ptUnitTimeMonth, itUnitTimeMonth, deUnitTimeMonth, esUnitTimeMonth, huUnitTimeMonth, },
  {enUnitTimeSecond, frUnitTimeSecond, nlUnitTimeSecond, ptUnitTimeSecond, itUnitTimeSecond, deUnitTimeSecond, esUnitTimeSecond, huUnitTimeSecond, },
  {enUnitTimeSecondMicro, frUnitTimeSecondMicro, nlUnitTimeSecondMicro, ptUnitTimeSecondMicro, itUnitTimeSecondMicro, deUnitTimeSecondMicro, esUnitTimeSecondMicro, huUnitTimeSecondMicro, },
  {enUnitTimeSecondMilli, frUnitTimeSecondMilli, nlUnitTimeSecondMilli, ptUnitTimeSecondMilli, itUnitTimeSecondMilli, deUnitTimeSecondMilli, esUnitTimeSecondMilli, huUnitTimeSecondMilli, },
  {enUnitTimeSecondNano, frUnitTimeSecondNano, nlUnitTimeSecondNano, ptUnitTimeSecondNano, itUnitTimeSecondNano, deUnitTimeSecondNano, esUnitTimeSecondNano, huUnitTimeSecondNano, },
  {enUnitTimeWeek, frUnitTimeWeek, nlUnitTimeWeek, ptUnitTimeWeek, itUnitTimeWeek, deUnitTimeWeek, esUnitTimeWeek, huUnitTimeWeek, },
  {enUnitTimeYear, frUnitTimeYear, nlUnitTimeYear, ptUnitTimeYear, itUnitTimeYear, deUnitTimeYear, esUnitTimeYear, huUnitTimeYear, },
  {enUnitVolumeCup, frUnitVolumeCup, nlUnitVolumeCup, ptUnitVolumeCup, itUnitVolumeCup, deUnitVolumeCup, esUnitVolumeCup, huUnitVolumeCup, },
  {enUnitVolumeFluidOunce, frUnitVolumeFluidOunce, nlUnitVolumeFluidOunce, ptUnitVolumeFluidOunce, itUnitVolumeFluidOunce, deUnitVolumeFluidOunce, esUnitVolumeFluidOunce, huUnitVolumeFluidOunce, },
  {enUnitVolumeGallon, frUnitVolumeGallon, nlUnitVolumeGallon, ptUnitVolumeGallon, itUnitVolumeGallon, deUnitVolumeGallon, esUnitVolumeGallon, huUnitVolumeGallon, },
  {enUnitVolumeLiter, frUnitVolumeLiter, nlUnitVolumeLiter, ptUnitVolumeLiter, itUnitVolumeLiter, deUnitVolumeLiter, esUnitVolumeLiter, huUnitVolumeLiter, },
  {enUnitVolumeLiterCenti, frUnitVolumeLiterCenti, nlUnitVolumeLiterCenti, ptUnitVolumeLiterCenti, itUnitVolumeLiterCenti, deUnitVolumeLiterCenti, esUnitVolumeLiterCenti, huUnitVolumeLiterCenti, },
  {enUnitVolumeLiterDeci, frUnitVolumeLiterDeci, nlUnitVolumeLiterDeci, ptUnitVolumeLiterDeci, itUnitVolumeLiterDeci, deUnitVolumeLiterDeci, esUnitVolumeLiterDeci, huUnitVolumeLiterDeci, },
  {enUnitVolumeLiterMilli, frUnitVolumeLiterMilli, nlUnitVolumeLiterMilli, ptUnitVolumeLiterMilli, itUnitVolumeLiterMilli, deUnitVolumeLiterMilli, esUnitVolumeLiterMilli, huUnitVolumeLiterMilli, },
  {enUnitVolumeMenu, frUnitVolumeMenu, nlUnitVolumeMenu, ptUnitVolumeMenu, itUnitVolumeMenu, deUnitVolumeMenu, esUnitVolumeMenu, huUnitVolumeMenu, },
  {enUnitVolumePint, frUnitVolumePint, nlUnitVolumePint, ptUnitVolumePint, itUnitVolumePint, deUnitVolumePint, esUnitVolumePint, huUnitVolumePint, },
  {enUnitVolumeQuart, frUnitVolumeQuart, nlUnitVolumeQuart, ptUnitVolumeQuart, itUnitVolumeQuart, deUnitVolumeQuart, esUnitVolumeQuart, huUnitVolumeQuart, },
  {enUnitVolumeTablespoon, frUnitVolumeTablespoon, nlUnitVolumeTablespoon, ptUnitVolumeTablespoon, itUnitVolumeTablespoon, deUnitVolumeTablespoon, esUnitVolumeTablespoon, huUnitVolumeTablespoon, },
  {enUnitVolumeTeaspoon, frUnitVolumeTeaspoon, nlUnitVolumeTeaspoon, ptUnitVolumeTeaspoon, itUnitVolumeTeaspoon, deUnitVolumeTeaspoon, esUnitVolumeTeaspoon, huUnitVolumeTeaspoon, },
  {enUnrealEquation, frUnrealEquation, nlUnrealEquation, ptUnrealEquation, itUnrealEquation, deUnrealEquation, esUnrealEquation, huUnrealEquation, },
  {enUpdateAvailable, frUpdateAvailable, nlUpdateAvailable, ptUpdateAvailable, itUpdateAvailable, deUpdateAvailable, esUpdateAvailable, huUpdateAvailable, },
  {enUpdateMessage1, frUpdateMessage1, nlUpdateMessage1, ptUpdateMessage1, itUpdateMessage1, deUpdateMessage1, esUpdateMessage1, huUpdateMessage1, },
  {enUpdateMessage2, frUpdateMessage2, nlUpdateMessage2, ptUpdateMessage2, itUpdateMessage2, deUpdateMessage2, esUpdateMessage2, huUpdateMessage2, },
  {enUpdateMessage3, frUpdateMessage3, nlUpdateMessage3, ptUpdateMessage3, itUpdateMessage3, deUpdateMessage3, esUpdateMessage3, huUpdateMessage3, },
  {enUpdateMessage4, frUpdateMessage4, nlUpdateMessage4, ptUpdateMessage4, itUpdateMessage4, deUpdateMessage4, esUpdateMessage4, huUpdateMessage4, },
  {enUpdatePopUp, frUpdatePopUp, nlUpdatePopUp, ptUpdatePopUp, itUpdatePopUp, deUpdatePopUp, esUpdatePopUp, huUpdatePopUp, },
  {enUseEquationModel, frUseEquationModel, nlUseEquationModel, ptUseEquationModel, itUseEquationModel, deUseEquationModel, esUseEquationModel, huUseEquationModel, },
  {enUsername, frUsername, nlUsername, ptUsername, itUsername, deUsername, esUsername, huUsername, },
  {enVacuumImpedanceTag, frVacuumImpedanceTag, nlVacuumImpedanceTag, ptVacuumImpedanceTag, itVacuumImpedanceTag, deVacuumImpedanceTag, esVacuumImpedanceTag, huVacuumImpedanceTag, },
  {enVacuum_permeabilityTag, frVacuum_permeabilityTag, nlVacuum_permeabilityTag, ptVacuum_permeabilityTag, itVacuum_permeabilityTag, deVacuum_permeabilityTag, esVacuum_permeabilityTag, huVacuum_permeabilityTag, },
  {enVacuum_permittivityTag, frVacuum_permittivityTag, nlVacuum_permittivityTag, ptVacuum_permittivityTag, itVacuum_permittivityTag, deVacuum_permittivityTag, esVacuum_permittivityTag, huVacuum_permittivityTag, },
  {enValueNotReachedByRegression, frValueNotReachedByRegression, nlValueNotReachedByRegression, ptValueNotReachedByRegression, itValueNotReachedByRegression, deValueNotReachedByRegression, esValueNotReachedByRegression, huValueNotReachedByRegression, },
  {enValues1, frValues1, nlValues1, ptValues1, itValues1, deValues1, esValues1, huValues1, },
  {enValues2, frValues2, nlValues2, ptValues2, itValues2, deValues2, esValues2, huValues2, },
  {enValues3, frValues3, nlValues3, ptValues3, itValues3, deValues3, esValues3, huValues3, },
  {enValuesTab, frValuesTab, nlValuesTab, ptValuesTab, itValuesTab, deValuesTab, esValuesTab, huValuesTab, },
  {enVariables, frVariables, nlVariables, ptVariables, itVariables, deVariables, esVariables, huVariables, },
  {enVectors, frVectors, nlVectors, ptVectors, itVectors, deVectors, esVectors, huVectors, },
  {enVolumeDimension, frVolumeDimension, nlVolumeDimension, ptVolumeDimension, itVolumeDimension, deVolumeDimension, esVolumeDimension, huVolumeDimension, },
  {enWBosonMassTag, frWBosonMassTag, nlWBosonMassTag, ptWBosonMassTag, itWBosonMassTag, deWBosonMassTag, esWBosonMassTag, huWBosonMassTag, },
  {enWarning, frWarning, nlWarning, ptWarning, itWarning, deWarning, esWarning, huWarning, },
  {enWater, frWater, nlWater, ptWater, itWater, deWater, esWater, huWater, },
  {enWaterTriplePointTag, frWaterTriplePointTag, nlWaterTriplePointTag, ptWaterTriplePointTag, itWaterTriplePointTag, deWaterTriplePointTag, esWaterTriplePointTag, huWaterTriplePointTag, },
  {enWienTag, frWienTag, nlWienTag, ptWienTag, itWienTag, deWienTag, esWienTag, huWienTag, },
  {enWithN0100, frWithN0100, nlWithN0100, ptWithN0100, itWithN0100, deWithN0100, esWithN0100, huWithN0100, },
  {enWithSimulator, frWithSimulator, nlWithSimulator, ptWithSimulator, itWithSimulator, deWithSimulator, esWithSimulator, huWithSimulator, },
  {enWood, frWood, nlWood, ptWood, itWood, deWood, esWood, huWood, },
  {enXEnd, frXEnd, nlXEnd, ptXEnd, itXEnd, deXEnd, esXEnd, huXEnd, },
  {enXPrediction, frXPrediction, nlXPrediction, ptXPrediction, itXPrediction, deXPrediction, esXPrediction, huXPrediction, },
  {enXStart, frXStart, nlXStart, ptXStart, itXStart, deXStart, esXStart, huXStart, },
  {enYPrediction, frYPrediction, nlYPrediction, ptYPrediction, itYPrediction, deYPrediction, esYPrediction, huYPrediction, },
  {enZBosonMassTag, frZBosonMassTag, nlZBosonMassTag, ptZBosonMassTag, itZBosonMassTag, deZBosonMassTag, esZBosonMassTag, huZBosonMassTag, },
  {enZeros, frZeros, nlZeros, ptZeros, itZeros, deZeros, esZeros, huZeros, },
  {enZinc, frZinc, nlZinc, ptZinc, itZinc, deZinc, esZinc, huZinc, },
};

const char * translate(Message m) {
  assert(m != Message::LocalizedMessageMarker);
  int localizedMessageOffset = (int)Message::LocalizedMessageMarker+1;
  if ((int)m < localizedMessageOffset) {
    assert(universalMessages[(int)m] != nullptr);
    return universalMessages[(int)m];
  }
  int languageIndex = (int)GlobalPreferences::sharedGlobalPreferences()->language();
  int messageIndex = (int)m - localizedMessageOffset;
  assert((messageIndex*NumberOfLanguages+languageIndex)*sizeof(char *) < sizeof(messages));
  return messages[messageIndex][languageIndex];
}

}
